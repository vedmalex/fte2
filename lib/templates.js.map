{
  "version": 3,
  "sources": ["../src/templates/index.ts", "../src/templates/codeblock.njs.ts", "../src/templates/compilationError.njs.ts", "../src/templates/compiled.njs.ts", "../src/templates/es6module.njs.ts", "../src/templates/MainTemplate.njs.ts", "../src/templates/raw.njs.ts", "../src/templates/singlefile.es6.njs.ts", "../src/templates/singlefile.njs.ts", "../src/templates/standalone.es6.njs.ts", "../src/templates/standalone.index.es6.njs.ts", "../src/templates/standalone.index.njs.ts", "../src/templates/standalone.njs.ts"],
  "sourcesContent": ["\n  import codeblock_njs from './codeblock.njs'\n\n  import compilationError_njs from './compilationError.njs'\n\n  import compiled_njs from './compiled.njs'\n\n  import es6module_njs from './es6module.njs'\n\n  import MainTemplate_njs from './MainTemplate.njs'\n\n  import raw_njs from './raw.njs'\n\n  import singlefile_es6_njs from './singlefile.es6.njs'\n\n  import singlefile_njs from './singlefile.njs'\n\n  import standalone_es6_njs from './standalone.es6.njs'\n\n  import standalone_index_es6_njs from './standalone.index.es6.njs'\n\n  import standalone_index_njs from './standalone.index.njs'\n\n  import standalone_njs from './standalone.njs'\n\n\nconst templates = {\n\n  'codeblock.njs': codeblock_njs,\n\n  'compilationError.njs': compilationError_njs,\n\n  'compiled.njs': compiled_njs,\n\n  'es6module.njs': es6module_njs,\n\n  'MainTemplate.njs': MainTemplate_njs,\n\n  'raw.njs': raw_njs,\n\n  'singlefile.es6.njs': singlefile_es6_njs,\n\n  'singlefile.njs': singlefile_njs,\n\n  'standalone.es6.njs': standalone_es6_njs,\n\n  'standalone.index.es6.njs': standalone_index_es6_njs,\n\n  'standalone.index.njs': standalone_index_njs,\n\n  'standalone.njs': standalone_njs,\n\n}\nexport default templates", "export default {\n    alias: [\"codeblock.njs\"],\n    script: function (blockList, _content, partial, slot, options) {\n        var out = [];\n        var textQuote = false;\n        for (var i = 0, len = blockList.length; i < len; i++) {\n            var block = blockList[i];\n            var cont = block.content;\n            switch (block.type) {\n                case 'text':\n                    {\n                        let res = '';\n                        if (!textQuote) {\n                            textQuote = true;\n                            res = ';out.push(\\n';\n                        }\n                        else {\n                            let lasItem = out.pop();\n                            res = `${lasItem} + `;\n                        }\n                        if (block.eol) {\n                            res += JSON.stringify(cont + '\\n');\n                            res += '\\n';\n                            //   textQuote = false\n                        }\n                        else {\n                            res += JSON.stringify(cont);\n                        }\n                        out.push(res);\n                    }\n                    break;\n                case 'uexpression':\n                    {\n                        let res = '';\n                        if (!textQuote) {\n                            textQuote = true;\n                            res = ';out.push(\\n';\n                        }\n                        else {\n                            let lasItem = out.pop();\n                            res = `${lasItem} + `;\n                        }\n                        res += `escapeIt(${cont})`;\n                        if (textQuote && !block.eol) {\n                            out.push(res);\n                        }\n                        else {\n                            // textQuote = false\n                            out.push(`${res}\\n`);\n                        }\n                    }\n                    break;\n                case 'expression':\n                    {\n                        let res = '';\n                        if (!textQuote) {\n                            textQuote = true;\n                            res = ';out.push(\\n';\n                        }\n                        else {\n                            let lasItem = out.pop();\n                            res = `${lasItem} + `;\n                        }\n                        res += `(${cont})`;\n                        if (textQuote && !block.eol) {\n                            out.push(res);\n                        }\n                        else {\n                            // textQuote = false\n                            out.push(`${res}\\n`);\n                        }\n                    }\n                    break;\n                case 'code':\n                    if (textQuote) {\n                        let item = out.pop();\n                        out.push(`${item});\\n`);\n                        textQuote = false;\n                    }\n                    out.push(`${cont}${block.eol ? '\\n' : ''}`);\n                    break;\n            }\n        }\n        if (textQuote) {\n            let lasItem = out.pop();\n            out.push(`${lasItem});\\n`);\n        }\n        ;\n        out.push(\"\" + \"\");\n        return out.join('');\n    },\n    compile: function () {\n        this.alias = [\"codeblock.njs\"];\n    },\n    dependency: {}\n};\n", "export default {\n    alias: [\"compilationError.njs\"],\n    script: function (context, _content, partial, slot, options) {\n        var out = [];\n        out.push((context.error.message) + \";\\n\"\n            + \"\" + (context.compiledFile) + \";\" + \"\");\n        return out.join('');\n    },\n    compile: function () {\n        this.alias = [\"compilationError.njs\"];\n    },\n    dependency: {}\n};\n", "export default {\n    alias: [\"compiled.njs\"],\n    script: function (context, _content, partial, slot, options) {\n        var out = [];\n        out.push(\"module.exports = \" + (partial(context, 'core')) + \";\\n\"\n            + \"\" + \"\");\n        return out.join('');\n    },\n    compile: function () {\n        this.alias = [\"compiled.njs\"];\n        this.aliases = {};\n        this.aliases[\"core\"] = \"MainTemplate.njs\";\n        this.factory.ensure(\"MainTemplate.njs\");\n    },\n    dependency: {\n        \"MainTemplate.njs\": true,\n        \"core\": true,\n    }\n};\n", "export default {\n    alias: [\"es6module.njs\"],\n    script: function (context, _content, partial, slot, options) {\n        var out = [];\n        out.push(\"export default \" + (partial(context, 'core')) + \";\\n\"\n            + \"\" + \"\");\n        return out.join('');\n    },\n    compile: function () {\n        this.alias = [\"es6module.njs\"];\n        this.aliases = {};\n        this.aliases[\"core\"] = \"MainTemplate.njs\";\n        this.factory.ensure(\"MainTemplate.njs\");\n    },\n    dependency: {\n        \"MainTemplate.njs\": true,\n        \"core\": true,\n    }\n};\n", "export default {\n    alias: [\"MainTemplate.njs\"],\n    script: function (context, _content, partial, slot, options) {\n        function content(blockName, ctx) {\n            if (ctx === undefined || ctx === null)\n                ctx = context;\n            return _content(blockName, ctx, content, partial, slot);\n        }\n        var out = [];\n        const { directives } = context;\n        out.push(\"{\\n\"\n            + \"\");\n        if (directives.chunks) {\n            ;\n            out.push(\"\\n\"\n                + \"chinks: \" + (directives.chunks) + \"\\n\"\n                + \"\");\n        }\n        ;\n        out.push(\"\\n\"\n            + \"\");\n        if (directives.alias) {\n            ;\n            out.push(\"\\n\"\n                + \"alias: \" + (JSON.stringify(directives.alias)) + \",\\n\"\n                + \"\");\n        }\n        ;\n        out.push(\"script: function (\" + (directives.context) + \", _content, partial, slot, options){\\n\"\n            + \"    \" + (content('maincontent', directives)) + \"\\n\"\n            + \"    var out = []\\n\"\n            + \"    \" + (content('chunks-start', directives)) + \"\\n\"\n            + \"    \" + (partial(context.main, 'codeblock')) + \"\\n\"\n            + \"    \" + (content('chunks-finish', directives)) + \"\\n\"\n            + \"     return out.join('')\\n\"\n            + \"  },\\n\"\n            + \"\\n\");\n        const blockNames = Object.keys(context.blocks);\n        if (blockNames.length > 0) {\n            ;\n            out.push(\"blocks : {\\n\"\n                + \"\\n\");\n            for (let i = 0; i < blockNames.length; i += 1) {\n                const block = context.blocks[blockNames[i]];\n                out.push(\"\\\"\" + (blockNames[i]) + \"\\\": function(\" + (block.directives.context) + \",  _content, partial, slot, options) {\\n\"\n                    + \"      \" + (content('maincontent', block.directives)) + \"\\n\"\n                    + \"      var out = []\\n\"\n                    + \"      \" + (partial(block.main, 'codeblock')) + \"\\n\"\n                    + \"      return out.join('')\\n\"\n                    + \"    },\\n\"\n                    + \"\");\n            }\n            ;\n            out.push(\"\\n\"\n                + \"  },\");\n        }\n        const slotNames = Object.keys(context.slots);\n        if (slotNames.length > 0) {\n            ;\n            out.push(\"slots : {\\n\"\n                + \"\\n\");\n            for (let i = 0; i < slotNames.length; i += 1) {\n                const slot = context.blocks[slotNames[i]];\n                out.push(\"\\\"\" + (slotNames[i]) + \"\\\": function(\" + (slot.directives.context) + \",  _content, partial, slot, options){\\n\"\n                    + \"      \" + (content('maincontent', slot.directives)) + \"\\n\"\n                    + \"      var out = []\\n\"\n                    + \"      \" + (partial(slot.main, 'codeblock')) + \"\\n\"\n                    + \"      return out.join('')\\n\"\n                    + \"    },\\n\"\n                    + \"\");\n            }\n            ;\n            out.push(\"\\n\"\n                + \"  },\\n\"\n                + \"\");\n        }\n        ;\n        out.push(\"\\n\"\n            + \"  compile: function() {\\n\"\n            + \"\");\n        if (directives.alias) {\n            ;\n            out.push(\"\\n\"\n                + \"    this.alias = \" + (JSON.stringify(directives.alias)) + \"\\n\"\n                + \"\");\n        }\n        ;\n        out.push(\"\\n\"\n            + \"\");\n        if (directives.requireAs.length > 0) {\n            ;\n            out.push(\"\\n\"\n                + \"    this.aliases={}\\n\"\n                + \"\");\n            var rq;\n            for (var i = 0, len = directives.requireAs.length; i < len; i++) {\n                rq = directives.requireAs[i];\n                out.push(\"\\n\"\n                    + \"    this.aliases[\\\"\" + (rq.alias) + \"\\\"] = \\\"\" + (rq.name) + \"\\\"\\n\"\n                    + \"    this.factory.ensure(\\\"\" + (rq.name) + \"\\\")\\n\"\n                    + \"\\n\");\n            }\n        }\n        ;\n        out.push(\"\\n\"\n            + \"\\n\"\n            + \"\");\n        if (directives.extend) {\n            ;\n            out.push(\"\\n\"\n                + \"    this.parent = \" + (JSON.stringify(directives.extend)) + \"\\n\"\n                + \"    this.mergeParent(this.factory.ensure(this.parent))\\n\"\n                + \"\");\n        }\n        ;\n        out.push(\"\\n\"\n            + \"  },\\n\"\n            + \"  dependency: {\\n\"\n            + \"  \");\n        if (directives.extend) {\n            ;\n            out.push((JSON.stringify(directives.extend)) + \": true,\\n\"\n                + \"  \");\n        }\n        if (directives.requireAs.length > 0) {\n            for (var i = 0, len = directives.requireAs.length; i < len; i++) {\n                rq = directives.requireAs[i];\n                out.push(\"\\n\"\n                    + \"    \\\"\" + (rq.name) + \"\\\": true,\\n\"\n                    + \"    \\\"\" + (rq.alias) + \"\\\": true,\\n\"\n                    + \"\\n\");\n            }\n        }\n        ;\n        out.push(\"\\n\"\n            + \"  }\\n\"\n            + \"}\\n\"\n            + \"\" + \"\");\n        return out.join('');\n    },\n    blocks: {\n        \"maincontent\": function (directives, _content, partial, slot, options) {\n            var out = [];\n            if (directives.escapeIt) {\n                ;\n                out.push(\"\\n\"\n                    + \"    const {escapeIt} = options\\n\"\n                    + \"  \");\n            }\n            if (directives.content) {\n                ;\n                out.push(\"\\n\"\n                    + \"    function content(blockName, ctx) {\\n\"\n                    + \"      if(ctx === undefined || ctx === null) ctx = \" + (directives.context) + \"\\n\"\n                    + \"      return _content(blockName, ctx, content, partial, slot)\\n\"\n                    + \"    }\\n\"\n                    + \"  \");\n            }\n            return out.join('');\n        },\n        \"chunks-start\": function (directives, _content, partial, slot, options) {\n            var out = [];\n            if (directives.chunks) {\n                ;\n                out.push(\"\\n\"\n                    + \"    const _partial = partial\\n\"\n                    + \"    partial = function(obj, template) {\\n\"\n                    + \"      const result = _partial(obj, template)\\n\"\n                    + \"      if(Array.isArray(result)){\\n\"\n                    + \"        result.forEach(r => {\\n\"\n                    + \"          chunkEnsure(r.name, r.content)\\n\"\n                    + \"        })\\n\"\n                    + \"        return ''\\n\"\n                    + \"      } else {\\n\"\n                    + \"        return result\\n\"\n                    + \"      }\\n\"\n                    + \"    }\\n\"\n                    + \"    const main = '\" + (directives.chunks) + \"'\\n\"\n                    + \"    var current = main\\n\"\n                    + \"    let outStack = [current]\\n\"\n                    + \"    let result\\n\"\n                    + \"\\n\"\n                    + \"    function chunkEnsure(name, content) {\\n\"\n                    + \"      if (!result) {\\n\"\n                    + \"        result = {}\\n\"\n                    + \"      }\\n\"\n                    + \"      if (!result.hasOwnProperty(name)) {\\n\"\n                    + \"        result[name] = content ? content : []\\n\"\n                    + \"      }\\n\"\n                    + \"    }\\n\"\n                    + \"    function chunkStart(name) {\\n\"\n                    + \"      chunkEnsure(name)\\n\"\n                    + \"      chunkEnd()\\n\"\n                    + \"      current = name\\n\"\n                    + \"      out = []\\n\"\n                    + \"    }\\n\"\n                    + \"    function chunkEnd() {\\n\"\n                    + \"      result[current].push(out)\\n\"\n                    + \"      out = []\\n\"\n                    + \"      current = outStack.pop() || main\\n\"\n                    + \"    }\\n\"\n                    + \"    chunkStart(main)\\n\"\n                    + \"  \");\n            }\n            return out.join('');\n        },\n        \"chunks-finish\": function (directives, _content, partial, slot, options) {\n            var out = [];\n            if (directives.chunks) {\n                ;\n                out.push(\"\\n\"\n                    + \"    chunkEnd()\\n\"\n                    + \"    \");\n                if (!directives.useHash) {\n                    ;\n                    out.push(\"\\n\"\n                        + \"    out = Object.keys(result)\\n\"\n                        + \"      \");\n                    if (!directives.includeMainChunk) {\n                        ;\n                        out.push(\"\\n\"\n                            + \"      .filter(i => i !== '\" + (directives.chunks) + \"')\\n\"\n                            + \"      \");\n                    }\n                    ;\n                    out.push(\"\\n\"\n                        + \"      .map(curr => ({ name: curr, content: result[curr] }))\\n\"\n                        + \"      \");\n                }\n                else {\n                    ;\n                    out.push(\"\\n\"\n                        + \"    out = result\\n\"\n                        + \"      \");\n                    if (!directives.includeMainChunk) {\n                        ;\n                        out.push(\"\\n\"\n                            + \"    delete out['\" + (directives.chunks) + \"']\\n\"\n                            + \"      \");\n                    }\n                    ;\n                    out.push(\"\\n\"\n                        + \"    \");\n                }\n                ;\n                out.push(\"\\n\"\n                    + \"  \");\n            }\n            return out.join('');\n        },\n    },\n    compile: function () {\n        this.alias = [\"MainTemplate.njs\"];\n        this.aliases = {};\n        this.aliases[\"codeblock\"] = \"codeblock.njs\";\n        this.factory.ensure(\"codeblock.njs\");\n    },\n    dependency: {\n        \"codeblock.njs\": true,\n        \"codeblock\": true,\n    }\n};\n", "export default {\n    alias: [\"raw.njs\"],\n    script: function (context, _content, partial, slot, options) {\n        var out = [];\n        out.push(\"(function(){\\n\"\n            + \"  return \" + (partial(context, 'core')) + \";\\n\"\n            + \"})();\" + \"\");\n        return out.join('');\n    },\n    compile: function () {\n        this.alias = [\"raw.njs\"];\n        this.aliases = {};\n        this.aliases[\"core\"] = \"MainTemplate.njs\";\n        this.factory.ensure(\"MainTemplate.njs\");\n    },\n    dependency: {\n        \"MainTemplate.njs\": true,\n        \"core\": true,\n    }\n};\n", "export default {\n    alias: [\"singlefile.es6.njs\"],\n    script: function (files, _content, partial, slot, options) {\n        var out = [];\n        out.push(\"import { Factory } from 'fte.js/lib/standalone.fte.js'\\n\"\n            + \"\\n\"\n            + \"export const templates = {\\n\"\n            + \"\");\n        files.forEach(file => {\n            ;\n            out.push(\"\\n\"\n                + \"  ['\" + ((file.template.alias || file.name)) + \"']: \" + (partial(file.template, 'core')) + \",\\n\"\n                + \"\");\n        });\n        out.push(\"\\n\"\n            + \"}\\n\"\n            + \"\\n\"\n            + \"const F = new Factory(templates)\\n\"\n            + \"\\n\"\n            + \"export function run (context, name) {\\n\"\n            + \"  return F.run(context, name)\\n\"\n            + \"}\\n\"\n            + \"\\n\"\n            + \"\" + \"\");\n        return out.join('');\n    },\n    compile: function () {\n        this.alias = [\"singlefile.es6.njs\"];\n        this.aliases = {};\n        this.aliases[\"core\"] = \"MainTemplate.njs\";\n        this.factory.ensure(\"MainTemplate.njs\");\n    },\n    dependency: {\n        \"MainTemplate.njs\": true,\n        \"core\": true,\n    }\n};\n", "export default {\n    alias: [\"singlefile.njs\"],\n    script: function (files, _content, partial, slot, options) {\n        var out = [];\n        out.push(\"const { Factory } = require('fte.js/lib/standalone.fte.js')\\n\"\n            + \"\\n\"\n            + \"const templates = {\\n\"\n            + \"\");\n        files.forEach(file => {\n            ;\n            out.push(\"\\n\"\n                + \"  ['\" + ((file.template.alias || file.name)) + \"']: \" + (partial(file.template, 'core')) + \",\\n\"\n                + \"\");\n        });\n        out.push(\"\\n\"\n            + \"}\\n\"\n            + \"\\n\"\n            + \"exports.templates = templates\\n\"\n            + \"const F = new Factory(templates)\\n\"\n            + \"\\n\"\n            + \"function run(context, name){\\n\"\n            + \"  return F.run( context, name )\\n\"\n            + \"}\\n\"\n            + \"\\n\"\n            + \"exports.run = run\\n\"\n            + \"\" + \"\");\n        return out.join('');\n    },\n    compile: function () {\n        this.alias = [\"singlefile.njs\"];\n        this.aliases = {};\n        this.aliases[\"core\"] = \"MainTemplate.njs\";\n        this.factory.ensure(\"MainTemplate.njs\");\n    },\n    dependency: {\n        \"MainTemplate.njs\": true,\n        \"core\": true,\n    }\n};\n", "export default {\n    alias: [\"standalone.es6.njs\"],\n    script: function (files, _content, partial, slot, options) {\n        var out = [];\n        out.push(\"import { Factory } from 'fte.js/lib/standalone.fte.js'\\n\"\n            + \"\\n\"\n            + \"\");\n        for (let i = 0; i < files.length; i += 1) {\n            ;\n            out.push(\"\\n\"\n                + \"  import \" + (files[i].name.replaceAll(/[\\s\\.]/g, '_')) + \" from '\" + (files[i].path) + \"'\\n\"\n                + \"\");\n        }\n        ;\n        out.push(\"\\n\"\n            + \"\\n\"\n            + \"const templates = {\\n\"\n            + \"\");\n        for (let i = 0; i < files.length; i += 1) {\n            ;\n            out.push(\"\\n\"\n                + \"  '\" + (files[i].name) + \"': \" + (files[i].name.replaceAll(/[\\s\\.]/g, '_')) + \",\\n\"\n                + \"\");\n        }\n        ;\n        out.push(\"\\n\"\n            + \"}\\n\"\n            + \"\\n\"\n            + \"const F = new Factory(templates)\\n\"\n            + \"\\n\"\n            + \"module.exports = (context, name) => {\\n\"\n            + \"  return F.run( context, name )\\n\"\n            + \"}\\n\"\n            + \"\" + \"\");\n        return out.join('');\n    },\n    compile: function () {\n        this.alias = [\"standalone.es6.njs\"];\n    },\n    dependency: {}\n};\n", "export default {\n    alias: [\"standalone.index.es6.njs\"],\n    script: function (files, _content, partial, slot, options) {\n        var out = [];\n        for (let i = 0; i < files.length; i += 1) {\n            ;\n            out.push(\"\\n\"\n                + \"  import \" + (files[i].name.replaceAll(/[\\s\\.]/g, '_')) + \" from '\" + (files[i].path) + \"'\\n\"\n                + \"\");\n        }\n        ;\n        out.push(\"\\n\"\n            + \"\\n\"\n            + \"const templates = {\\n\"\n            + \"\");\n        for (let i = 0; i < files.length; i += 1) {\n            ;\n            out.push(\"\\n\"\n                + \"  '\" + (files[i].name) + \"': \" + (files[i].name.replaceAll(/[\\s\\.]/g, '_')) + \",\\n\"\n                + \"\");\n        }\n        ;\n        out.push(\"\\n\"\n            + \"}\\n\"\n            + \"export default templates\" + \"\");\n        return out.join('');\n    },\n    compile: function () {\n        this.alias = [\"standalone.index.es6.njs\"];\n    },\n    dependency: {}\n};\n", "export default {\n    alias: [\"standalone.index.njs\"],\n    script: function (files, _content, partial, slot, options) {\n        var out = [];\n        out.push(\"const templates = {\\n\"\n            + \"\");\n        for (let i = 0; i < files.length; i += 1) {\n            ;\n            out.push(\"\\n\"\n                + \"  '\" + (files[i].name) + \"': require('\" + (files[i].path) + \"'),\\n\"\n                + \"\");\n        }\n        ;\n        out.push(\"\\n\"\n            + \"}\\n\"\n            + \"module.exports = templates\" + \"\");\n        return out.join('');\n    },\n    compile: function () {\n        this.alias = [\"standalone.index.njs\"];\n    },\n    dependency: {}\n};\n", "export default {\n    alias: [\"standalone.njs\"],\n    script: function (files, _content, partial, slot, options) {\n        var out = [];\n        out.push(\"const { Factory } = require('fte.js/lib/standalone.fte.js')\\n\"\n            + \"\\n\"\n            + \"const templates = {\\n\"\n            + \"\");\n        for (let i = 0; i < files.length; i += 1) {\n            ;\n            out.push(\"\\n\"\n                + \"  '\" + (files[i].name) + \"': require('\" + (files[i].path) + \"'),\\n\"\n                + \"\");\n        }\n        ;\n        out.push(\"\\n\"\n            + \"}\\n\"\n            + \"\\n\"\n            + \"const F = new Factory(templates)\\n\"\n            + \"\\n\"\n            + \"module.exports = (context, name) => {\\n\"\n            + \"  return F.run( context, name )\\n\"\n            + \"}\\n\"\n            + \"\" + \"\");\n        return out.join('');\n    },\n    compile: function () {\n        this.alias = [\"standalone.njs\"];\n    },\n    dependency: {}\n};\n"],
  "mappings": "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",
  "names": ["i", "slot"]
}
