{"version":3,"file":"index.module.js","sources":["../src/StandaloneTemplate.ts","../src/TemplateFactoryStandalone.ts","../src/compile.ts","../src/run.ts","../src/compileFull.ts","../src/compileLight.ts","../src/compileTs.ts","../src/parseFile.ts"],"sourcesContent":["import { DefaultFactoryOption, TemplateBase } from 'fte.js-base'\n\nexport class StandaloneTemplate<T extends DefaultFactoryOption> extends TemplateBase<T> {\n  public override compile() {\n    if (this.parent) {\n      this.mergeParent(this.factory.ensure(this.parent))\n    }\n  }\n}\n","import { DefaultFactoryOption, SlotsHash, TemplateConfig, TemplateFactoryBase } from 'fte.js-base'\nimport { StandaloneTemplate } from './StandaloneTemplate'\n\n/**\n * We must ensure that template is registered with its compiled templates\n */\n\nexport class TemplateFactoryStandalone<OPTIONS extends DefaultFactoryOption> extends TemplateFactoryBase<OPTIONS> {\n  private templates: Record<string, TemplateConfig<OPTIONS>>\n\n  constructor(templates: Record<string, TemplateConfig<OPTIONS>>) {\n    super()\n    this.templates = templates\n    this.preload()\n  }\n  public resolveTemplateConfig(fileName: string): TemplateConfig<OPTIONS> {\n    const result = this.templates[fileName]\n    if (result) {\n      result.factory = this\n      result.name = fileName\n      return result\n    } else {\n      throw new Error(`template ${fileName} not found`)\n    }\n  }\n\n  public override load(fileName: string) {\n    const template = this.resolveTemplateConfig(fileName)\n    const templ = new StandaloneTemplate<OPTIONS>(template)\n    this.register(templ, fileName)\n    templ.compile()\n    return templ\n  }\n  public override preload() {\n    Object.keys(this.templates).forEach(t => this.load(t))\n  }\n  public override run<T>(context: T, name: string): string | Array<{ name: string; content: string }> {\n    const templ = this.ensure(name)\n    const bc = this.blockContent(templ)\n    return bc.run(context, bc.content, bc.partial, bc.slot, this.options)\n  }\n\n  public override runPartial<T, OPTIONS extends DefaultFactoryOption>({\n    context,\n    name,\n    slots,\n    options,\n  }: {\n    context: T\n    name: string\n    absPath?: boolean\n    options?: OPTIONS\n    slots?: SlotsHash\n  }): string {\n    const templ = this.ensure(name)\n    if (!templ.chunks) {\n      const bc = this.blockContent(templ, slots)\n      return bc.run(context, bc.content, bc.partial, bc.slot, { ...this.options, ...options }) as string\n    } else {\n      throw new Error(\"cant't use template with chunks as partial\")\n    }\n  }\n}\n","import { TemplateFactoryStandalone } from './TemplateFactoryStandalone'\nimport templates from 'fte.js-templates'\n\nexport const F = new TemplateFactoryStandalone(templates)\n","import templates from 'fte.js-templates'\nimport { F } from './compile'\n\nexport function run(context: any, template: keyof typeof templates) {\n  return F.run(context, template)\n}\n","import { Parser } from 'fte.js-parser'\nimport { run } from './run'\n\nexport function compileFull(content: Buffer | string) {\n  const compiled = Parser.parse(content.toString())\n  return run(compiled, 'compiled.njs')\n}\n","import { Parser } from 'fte.js-parser'\nimport { run } from './run'\n\nexport function compileLight(content: Buffer | string) {\n  const compiled = Parser.parse(content.toString())\n  return run(compiled, 'raw.njs')\n}\n","import { Parser } from 'fte.js-parser'\nimport { run } from './run'\n\nexport function compileTs(content: Buffer | string) {\n  const compiled = Parser.parse(content.toString())\n  return run(compiled, 'es6module.ts.njs')\n}\n","import { Parser } from 'fte.js-parser'\n\nexport function parseFile(content: Buffer | string) {\n  return Parser.parse(content.toString())\n}\n"],"names":[],"mappings":"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"}