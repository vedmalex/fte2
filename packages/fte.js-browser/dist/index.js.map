{"version":3,"file":"index.js","sources":["../src/TemplateBrowser.ts","../src/TemplateFactoryBrowser.ts"],"sourcesContent":["import { DefaultFactoryOption, TemplateBase } from 'fte.js-base'\n\nexport class TemplateBrowser<OPTIONS extends DefaultFactoryOption> extends TemplateBase<OPTIONS> {\n  public override compile() {\n    if (this.parent) {\n      this.mergeParent(this.factory.ensure(this.parent))\n    }\n  }\n}\n","import { RunPartialContext, DefaultFactoryOption, TemplateConfig, TemplateFactoryBase, ChunkContent } from 'fte.js-base'\nimport { TemplateBrowser } from './TemplateBrowser'\n\nexport declare let global: {\n  fte<OPTIONS extends DefaultFactoryOption>(filename): TemplateConfig<OPTIONS>\n}\nexport class TemplateFactoryBrowser<OPTIONS extends DefaultFactoryOption> extends TemplateFactoryBase<OPTIONS> {\n  public resolveTemplateConfig(fileName: string): TemplateConfig<OPTIONS> {\n    const result = global.fte<OPTIONS>(fileName)\n    result.factory = this\n    result.name = fileName\n    return result\n  }\n\n  public override load(fileName: string, absPath?: boolean) {\n    const template = this.resolveTemplateConfig(fileName)\n    const templ = new TemplateBrowser<OPTIONS>(template)\n    this.register(templ, fileName)\n    templ.compile()\n    return templ\n  }\n\n  public override run<T>(context: T, name: string): string | Array<ChunkContent> {\n    const templ = this.ensure(name)\n    const bc = this.blockContent(templ)\n    return bc.run(context, bc.content, bc.partial, bc.slot, this.options)\n  }\n\n  public override runPartial<T>({ context, name, options, slots }: RunPartialContext<T, OPTIONS>): string {\n    const templ = this.ensure(name)\n    if (!templ.chunks) {\n      const bc = this.blockContent(templ, slots)\n      return bc.run(context, bc.content, bc.partial, bc.slot, { ...this.options, ...(options ?? {}) }) as string\n    } else {\n      throw new Error(\"cant't use template with chunks as partial\")\n    }\n  }\n}\n"],"names":["TemplateBase","TemplateFactoryBase"],"mappings":";;;;AAEM,MAAO,eAAsD,SAAQA,uBAAqB,CAAA;IAC9E,OAAO,GAAA;QACrB,IAAI,IAAI,CAAC,MAAM,EAAE;AACf,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAA;AACnD,SAAA;KACF;AACF;;ACFK,MAAO,sBAA6D,SAAQC,8BAA4B,CAAA;AACrG,IAAA,qBAAqB,CAAC,QAAgB,EAAA;QAC3C,MAAM,MAAM,GAAG,MAAM,CAAC,GAAG,CAAU,QAAQ,CAAC,CAAA;AAC5C,QAAA,MAAM,CAAC,OAAO,GAAG,IAAI,CAAA;AACrB,QAAA,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAA;AACtB,QAAA,OAAO,MAAM,CAAA;KACd;IAEe,IAAI,CAAC,QAAgB,EAAE,OAAiB,EAAA;QACtD,MAAM,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAA;AACrD,QAAA,MAAM,KAAK,GAAG,IAAI,eAAe,CAAU,QAAQ,CAAC,CAAA;AACpD,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;QAC9B,KAAK,CAAC,OAAO,EAAE,CAAA;AACf,QAAA,OAAO,KAAK,CAAA;KACb;IAEe,GAAG,CAAI,OAAU,EAAE,IAAY,EAAA;QAC7C,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;QAC/B,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAA;QACnC,OAAO,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;KACtE;IAEe,UAAU,CAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAiC,EAAA;QAC5F,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;AAC/B,QAAA,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACjB,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;AAC1C,YAAA,OAAO,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,IAAI,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAP,OAAO,GAAI,EAAE,CAAC,EAAE,CAAW,CAAA;AAC3G,SAAA;AAAM,aAAA;AACL,YAAA,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAA;AAC9D,SAAA;KACF;AACF;;;;;;;;;"}