{"version":3,"sources":["generators/static/thing.njs.js"],"names":["text","code","expression"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA2BA,IAC1BC;AADD,IACCA,AAA0DD,IAC1DA,IACAC;AAHD,IAGCA,AAAwCD,IACxCA,IACAC;AALD,IAKCA,AAAuDD,IACvDA,cAAYE,0EAA2EF,KACvFA,mBACAA,6BAA2BE,mBAAoBF,UAC/CA,SACAA,KACAC;AAXD,IAWCA,AAA8CD,IAC9CA,YACAC;AAbD,IAaCA,AAAuCD,IACvCE,MAAOF,IACPC;AAfD,IAeCA,AAAOD,IACPA,IACAC;AAjBD,IAiBCA,AAAwCD,IACxCE,MAAOF,IACPC;AAnBD,IAmBCA,AAAOD,IACPA,IACAC;AArBD,IAqBCA,AAAoCD,IACpCE,MAAOF,IACPC;AAvBD,IAuBCA,AAAOD,IACPA,qBAAmBE,IAAKF,SAAOE,WAAYF,UAC3CA,IACAC;AA1BD,IA0BCA,AAA8CD,IAC9CA,sBAAoBE,IAAKF,SAAOE,WAAYF,mBAC5CA,aACAA,MAAIC;AA7BL,IA6BKA,AAAoCD,IACxCA,MAAIE,MAAOF,IACXA,MAAIC;AA/BL,IA+BKA,AAAMD,IACVA,MAAIC;AAhCL,IAgCKA,AAA4CD,IAChDA,MAAIE,MAAOF,IACXA,MAAIC;AAlCL,IAkCKA,AAAOD,IACXA,IACAA,MAAIC;AApCL,IAoCKA,AAA0CD,IAC9CA,MAAIE,MAAOF,IACXA,MAAIC;AAtCL,IAsCKA,AAAMD,IACVA,IACAA,yBAAuBE,IAAKF,SAAOE,WAAYF,UAC/CA,MACAA,IACAC;AA3CD,IA2CCA,AAAiDD,IACjDA,uBAAqBE,IAAKF,SAAOE,WAAYF,YAAUE,IAAKF,SAAOE,WAAYF,oBAC/EA,kBACAA,MAAIC;AA9CL,IA8CKA,AAA6CD,IACjDA,MAAIE,MAAOF,IACXA,MAAIC;AAhDL,IAgDKA,AAAOD,IACXA,MAAIC;AAjDL,IAiDKA,AAAgDD,IACpDA,MAAIE,MAAOF,IACXA,MAAIC;AAnDL,IAmDKA,AAAOD,IACXA,MAAIC;AApDL,IAoDKA,AAA6CD,IACjDA,MAAIE,MAAOF,IACXA,MAAIC;AAtDL,IAsDKA,AAAOD,IACXA,MAAIC;AAvDL,IAuDKA,AAA6CD,IACjDA,MAAIE,MAAOF,IACXA,MAAIC;AAzDL,IAyDKA,AAAOD,IACXA,MAAIC;AA1DL,IA0DKA,AAA6CD,IACjDA,MAAIE,MAAOF,IACXA,MAAIC;AA5DL,IA4DKA,AAAOD,IACXA,MAAIC;AA7DL,IA6DKA,AAA+CD,IACnDA,MAAIE,MAAOF,IACXA,MAAIC;AA/DL,IA+DKA,AAAMD,IACVA,yBAAuBE,IAAKF,YAAUE,WAAYF,UAClDA,MACAA,IACAC;AAnED,IAmECA,AAA4CD,IAC5CA,uBAAqBE,IAAKF,SAAOE,WAAYF,YAAUE,IAAKF,SAAOE,WAAYF,YAAUE,IAAKF,YAAUE,WAAYF,mBACpHA,eACAA,MAAIC;AAtEL,IAsEKA,AAAmCD,IACvCA,MAAIE,MAAOF,IACXA,MAAIC;AAxEL,IAwEKA,AAAOD,IACXA,MAAIC;AAzEL,IAyEKA,AAAqCD,IACzCA,MAAIE,MAAOF,IACXA,MAAIC;AA3EL,IA2EKA,AAAOD,IACXA,MAAIC;AA5EL,IA4EKA,AAAyCD,IAC7CA,MAAIE,MAAOF,IACXA,MAAIC;AA9EL,IA8EKA,AAAOD,IACXA,yBAAuBE,IAAKF,OAAKE,WAAYF,UAC7CA,MACAC;AAjFD,IAiFCA,AAAkBD,IAClBA,IACAA;AAnfile":"generators/static/thing.njs.js","sourceRoot":"/Users/vedmalex/work/fte2/demo","sourcesContent":["<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"],"template":{"version":"1.0.0","segments":[{"generatedLine":1,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":2,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":3,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":4,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":5,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":6,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":7,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":8,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":9,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":10,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":11,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":12,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":13,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":14,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":15,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":16,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":17,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":18,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":19,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":20,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":21,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":22,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":23,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":24,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":25,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":26,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":27,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":28,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":29,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":30,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":31,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":32,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":33,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":34,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":35,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":36,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":37,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":38,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":39,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":40,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":41,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":42,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":43,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":44,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":45,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":46,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":47,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":48,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":49,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":50,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":51,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":52,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":53,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":54,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":55,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":56,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":57,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":58,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":59,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":60,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":61,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":62,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":63,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":64,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":65,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":66,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":67,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":68,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":69,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":70,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":71,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":72,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":73,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":74,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":75,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":76,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":77,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":78,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":79,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":80,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":81,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":82,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":83,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":84,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":85,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":86,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":87,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":88,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":89,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":90,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":91,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":92,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":93,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":94,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":95,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":96,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":97,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":98,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":99,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":100,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":101,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":102,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":103,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":104,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":105,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":106,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":107,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":108,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":109,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":110,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":111,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":112,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":113,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":114,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":115,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":116,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":117,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":118,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":119,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":120,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":121,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":122,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":123,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":124,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":125,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":126,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":127,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":128,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":129,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":130,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":131,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":132,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":133,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":134,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":135,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":136,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":137,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":138,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":139,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":140,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":141,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":142,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":143,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":144,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":145,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":146,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":147,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":148,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":149,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":150,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":151,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":152,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":153,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":154,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":155,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":156,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":157,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":158,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":159,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":160,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":161,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":162,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":163,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":164,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":165,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":166,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":167,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":168,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":169,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":170,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":171,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":172,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":173,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":174,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":175,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":176,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":177,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":178,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":179,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":180,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":181,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":182,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":183,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":184,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":185,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":186,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":187,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":188,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":189,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":190,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":191,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":192,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":193,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":194,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":195,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":196,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":197,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":198,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":199,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":200,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":201,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":202,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":203,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":204,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":205,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":206,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":207,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":208,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":209,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":210,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":211,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":212,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":213,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":214,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":215,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":216,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":217,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":218,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":219,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":220,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":49,"generatedColumn":4,"originalLine":1,"originalColumn":27,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":49,"generatedColumn":8,"originalLine":2,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":50,"generatedColumn":4,"originalLine":2,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":50,"generatedColumn":4,"originalLine":2,"originalColumn":59,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":50,"generatedColumn":8,"originalLine":3,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":50,"generatedColumn":12,"originalLine":4,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":51,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":51,"generatedColumn":4,"originalLine":4,"originalColumn":41,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":51,"generatedColumn":8,"originalLine":5,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":51,"generatedColumn":12,"originalLine":6,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":52,"generatedColumn":4,"originalLine":6,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":52,"generatedColumn":4,"originalLine":6,"originalColumn":56,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":52,"generatedColumn":8,"originalLine":7,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":52,"generatedColumn":22,"originalLine":7,"originalColumn":13,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":52,"generatedColumn":96,"originalLine":7,"originalColumn":88,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":52,"generatedColumn":101,"originalLine":8,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":52,"generatedColumn":120,"originalLine":9,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":52,"generatedColumn":149,"originalLine":9,"originalColumn":28,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":52,"generatedColumn":168,"originalLine":9,"originalColumn":48,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":52,"generatedColumn":178,"originalLine":10,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":52,"generatedColumn":187,"originalLine":11,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":52,"generatedColumn":192,"originalLine":12,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":53,"generatedColumn":4,"originalLine":12,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":53,"generatedColumn":4,"originalLine":12,"originalColumn":47,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":53,"generatedColumn":8,"originalLine":13,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":53,"generatedColumn":20,"originalLine":14,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":54,"generatedColumn":4,"originalLine":14,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":54,"generatedColumn":4,"originalLine":14,"originalColumn":40,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":54,"generatedColumn":8,"originalLine":15,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":54,"generatedColumn":14,"originalLine":15,"originalColumn":8,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":54,"generatedColumn":18,"originalLine":16,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":55,"generatedColumn":4,"originalLine":16,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":55,"generatedColumn":4,"originalLine":16,"originalColumn":8,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":55,"generatedColumn":8,"originalLine":17,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":55,"generatedColumn":12,"originalLine":18,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":56,"generatedColumn":4,"originalLine":18,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":56,"generatedColumn":4,"originalLine":18,"originalColumn":41,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":56,"generatedColumn":8,"originalLine":19,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":56,"generatedColumn":14,"originalLine":19,"originalColumn":8,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":56,"generatedColumn":18,"originalLine":20,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":57,"generatedColumn":4,"originalLine":20,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":57,"generatedColumn":4,"originalLine":20,"originalColumn":8,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":57,"generatedColumn":8,"originalLine":21,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":57,"generatedColumn":12,"originalLine":22,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":58,"generatedColumn":4,"originalLine":22,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":58,"generatedColumn":4,"originalLine":22,"originalColumn":37,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":58,"generatedColumn":8,"originalLine":23,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":58,"generatedColumn":14,"originalLine":23,"originalColumn":8,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":58,"generatedColumn":18,"originalLine":24,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":59,"generatedColumn":4,"originalLine":24,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":59,"generatedColumn":4,"originalLine":24,"originalColumn":8,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":59,"generatedColumn":8,"originalLine":25,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":59,"generatedColumn":29,"originalLine":25,"originalColumn":20,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":59,"generatedColumn":33,"originalLine":25,"originalColumn":25,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":59,"generatedColumn":42,"originalLine":25,"originalColumn":32,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":59,"generatedColumn":53,"originalLine":25,"originalColumn":44,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":59,"generatedColumn":63,"originalLine":26,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":59,"generatedColumn":67,"originalLine":27,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":60,"generatedColumn":4,"originalLine":27,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":60,"generatedColumn":4,"originalLine":27,"originalColumn":47,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":60,"generatedColumn":8,"originalLine":28,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":60,"generatedColumn":30,"originalLine":28,"originalColumn":21,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":60,"generatedColumn":34,"originalLine":28,"originalColumn":26,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":60,"generatedColumn":43,"originalLine":28,"originalColumn":33,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":60,"generatedColumn":54,"originalLine":28,"originalColumn":45,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":60,"generatedColumn":73,"originalLine":29,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":60,"generatedColumn":86,"originalLine":30,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":60,"generatedColumn":92,"originalLine":30,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":61,"generatedColumn":4,"originalLine":30,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":61,"generatedColumn":4,"originalLine":30,"originalColumn":41,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":61,"generatedColumn":8,"originalLine":31,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":61,"generatedColumn":14,"originalLine":31,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":61,"generatedColumn":20,"originalLine":31,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":61,"generatedColumn":24,"originalLine":32,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":61,"generatedColumn":30,"originalLine":32,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":62,"generatedColumn":4,"originalLine":32,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":62,"generatedColumn":4,"originalLine":32,"originalColumn":11,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":62,"generatedColumn":8,"originalLine":33,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":62,"generatedColumn":14,"originalLine":33,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":63,"generatedColumn":4,"originalLine":33,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":63,"generatedColumn":4,"originalLine":33,"originalColumn":49,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":63,"generatedColumn":8,"originalLine":34,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":63,"generatedColumn":14,"originalLine":34,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":63,"generatedColumn":20,"originalLine":34,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":63,"generatedColumn":24,"originalLine":35,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":63,"generatedColumn":30,"originalLine":35,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":64,"generatedColumn":4,"originalLine":35,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":64,"generatedColumn":4,"originalLine":35,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":64,"generatedColumn":8,"originalLine":36,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":64,"generatedColumn":12,"originalLine":37,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":64,"generatedColumn":18,"originalLine":37,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":65,"generatedColumn":4,"originalLine":37,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":65,"generatedColumn":4,"originalLine":37,"originalColumn":47,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":65,"generatedColumn":8,"originalLine":38,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":65,"generatedColumn":14,"originalLine":38,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":65,"generatedColumn":20,"originalLine":38,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":65,"generatedColumn":24,"originalLine":39,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":65,"generatedColumn":30,"originalLine":39,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":66,"generatedColumn":4,"originalLine":39,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":66,"generatedColumn":4,"originalLine":39,"originalColumn":11,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":66,"generatedColumn":8,"originalLine":40,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":66,"generatedColumn":12,"originalLine":41,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":66,"generatedColumn":37,"originalLine":41,"originalColumn":24,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":66,"generatedColumn":41,"originalLine":41,"originalColumn":29,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":66,"generatedColumn":50,"originalLine":41,"originalColumn":36,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":66,"generatedColumn":61,"originalLine":41,"originalColumn":48,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":66,"generatedColumn":71,"originalLine":42,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":66,"generatedColumn":77,"originalLine":43,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":66,"generatedColumn":81,"originalLine":44,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":4,"originalLine":44,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":4,"originalLine":44,"originalColumn":50,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":8,"originalLine":45,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":31,"originalLine":45,"originalColumn":22,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":35,"originalLine":45,"originalColumn":27,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":44,"originalLine":45,"originalColumn":34,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":55,"originalLine":45,"originalColumn":46,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":67,"originalLine":45,"originalColumn":56,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":71,"originalLine":45,"originalColumn":61,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":80,"originalLine":45,"originalColumn":68,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":91,"originalLine":45,"originalColumn":80,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":111,"originalLine":46,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":129,"originalLine":47,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":135,"originalLine":47,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":68,"generatedColumn":4,"originalLine":47,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":68,"generatedColumn":4,"originalLine":47,"originalColumn":50,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":68,"generatedColumn":8,"originalLine":48,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":68,"generatedColumn":14,"originalLine":48,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":68,"generatedColumn":20,"originalLine":48,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":68,"generatedColumn":24,"originalLine":49,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":68,"generatedColumn":30,"originalLine":49,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":69,"generatedColumn":4,"originalLine":49,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":69,"generatedColumn":4,"originalLine":49,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":69,"generatedColumn":8,"originalLine":50,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":69,"generatedColumn":14,"originalLine":50,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":70,"generatedColumn":4,"originalLine":50,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":70,"generatedColumn":4,"originalLine":50,"originalColumn":53,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":70,"generatedColumn":8,"originalLine":51,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":70,"generatedColumn":14,"originalLine":51,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":70,"generatedColumn":20,"originalLine":51,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":70,"generatedColumn":24,"originalLine":52,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":70,"generatedColumn":30,"originalLine":52,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":4,"originalLine":52,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":4,"originalLine":52,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":8,"originalLine":53,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":14,"originalLine":53,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":72,"generatedColumn":4,"originalLine":53,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":72,"generatedColumn":4,"originalLine":53,"originalColumn":50,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":72,"generatedColumn":8,"originalLine":54,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":72,"generatedColumn":14,"originalLine":54,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":72,"generatedColumn":20,"originalLine":54,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":72,"generatedColumn":24,"originalLine":55,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":72,"generatedColumn":30,"originalLine":55,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":73,"generatedColumn":4,"originalLine":55,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":73,"generatedColumn":4,"originalLine":55,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":73,"generatedColumn":8,"originalLine":56,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":73,"generatedColumn":14,"originalLine":56,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":74,"generatedColumn":4,"originalLine":56,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":74,"generatedColumn":4,"originalLine":56,"originalColumn":50,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":74,"generatedColumn":8,"originalLine":57,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":74,"generatedColumn":14,"originalLine":57,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":74,"generatedColumn":20,"originalLine":57,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":74,"generatedColumn":24,"originalLine":58,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":74,"generatedColumn":30,"originalLine":58,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":75,"generatedColumn":4,"originalLine":58,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":75,"generatedColumn":4,"originalLine":58,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":75,"generatedColumn":8,"originalLine":59,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":75,"generatedColumn":14,"originalLine":59,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":76,"generatedColumn":4,"originalLine":59,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":76,"generatedColumn":4,"originalLine":59,"originalColumn":50,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":76,"generatedColumn":8,"originalLine":60,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":76,"generatedColumn":14,"originalLine":60,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":76,"generatedColumn":20,"originalLine":60,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":76,"generatedColumn":24,"originalLine":61,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":76,"generatedColumn":30,"originalLine":61,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":77,"generatedColumn":4,"originalLine":61,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":77,"generatedColumn":4,"originalLine":61,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":77,"generatedColumn":8,"originalLine":62,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":77,"generatedColumn":14,"originalLine":62,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":78,"generatedColumn":4,"originalLine":62,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":78,"generatedColumn":4,"originalLine":62,"originalColumn":52,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":78,"generatedColumn":8,"originalLine":63,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":78,"generatedColumn":14,"originalLine":63,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":78,"generatedColumn":20,"originalLine":63,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":78,"generatedColumn":24,"originalLine":64,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":78,"generatedColumn":30,"originalLine":64,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":79,"generatedColumn":4,"originalLine":64,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":79,"generatedColumn":4,"originalLine":64,"originalColumn":11,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":79,"generatedColumn":8,"originalLine":65,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":79,"generatedColumn":33,"originalLine":65,"originalColumn":24,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":79,"generatedColumn":37,"originalLine":65,"originalColumn":29,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":79,"generatedColumn":49,"originalLine":65,"originalColumn":39,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":79,"generatedColumn":60,"originalLine":65,"originalColumn":51,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":79,"generatedColumn":70,"originalLine":66,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":79,"generatedColumn":76,"originalLine":67,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":79,"generatedColumn":80,"originalLine":68,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":80,"generatedColumn":4,"originalLine":68,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":80,"generatedColumn":4,"originalLine":68,"originalColumn":45,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":80,"generatedColumn":8,"originalLine":69,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":80,"generatedColumn":31,"originalLine":69,"originalColumn":22,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":80,"generatedColumn":35,"originalLine":69,"originalColumn":27,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":80,"generatedColumn":44,"originalLine":69,"originalColumn":34,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":80,"generatedColumn":55,"originalLine":69,"originalColumn":46,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":80,"generatedColumn":67,"originalLine":69,"originalColumn":56,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":80,"generatedColumn":71,"originalLine":69,"originalColumn":61,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":80,"generatedColumn":80,"originalLine":69,"originalColumn":68,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":80,"generatedColumn":91,"originalLine":69,"originalColumn":80,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":80,"generatedColumn":103,"originalLine":69,"originalColumn":90,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":80,"generatedColumn":107,"originalLine":69,"originalColumn":95,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":80,"generatedColumn":119,"originalLine":69,"originalColumn":105,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":80,"generatedColumn":130,"originalLine":69,"originalColumn":117,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":80,"generatedColumn":149,"originalLine":70,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":80,"generatedColumn":164,"originalLine":71,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":80,"generatedColumn":170,"originalLine":71,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":81,"generatedColumn":4,"originalLine":71,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":81,"generatedColumn":4,"originalLine":71,"originalColumn":40,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":81,"generatedColumn":8,"originalLine":72,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":81,"generatedColumn":14,"originalLine":72,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":81,"generatedColumn":20,"originalLine":72,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":81,"generatedColumn":24,"originalLine":73,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":81,"generatedColumn":30,"originalLine":73,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":82,"generatedColumn":4,"originalLine":73,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":82,"generatedColumn":4,"originalLine":73,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":82,"generatedColumn":8,"originalLine":74,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":82,"generatedColumn":14,"originalLine":74,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":83,"generatedColumn":4,"originalLine":74,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":83,"generatedColumn":4,"originalLine":74,"originalColumn":42,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":83,"generatedColumn":8,"originalLine":75,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":83,"generatedColumn":14,"originalLine":75,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":83,"generatedColumn":20,"originalLine":75,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":83,"generatedColumn":24,"originalLine":76,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":83,"generatedColumn":30,"originalLine":76,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":84,"generatedColumn":4,"originalLine":76,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":84,"generatedColumn":4,"originalLine":76,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":84,"generatedColumn":8,"originalLine":77,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":84,"generatedColumn":14,"originalLine":77,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":85,"generatedColumn":4,"originalLine":77,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":85,"generatedColumn":4,"originalLine":77,"originalColumn":46,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":85,"generatedColumn":8,"originalLine":78,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":85,"generatedColumn":14,"originalLine":78,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":85,"generatedColumn":20,"originalLine":78,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":85,"generatedColumn":24,"originalLine":79,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":85,"generatedColumn":30,"originalLine":79,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":86,"generatedColumn":4,"originalLine":79,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":86,"generatedColumn":4,"originalLine":79,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":86,"generatedColumn":8,"originalLine":80,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":86,"generatedColumn":33,"originalLine":80,"originalColumn":24,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":86,"generatedColumn":37,"originalLine":80,"originalColumn":29,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":86,"generatedColumn":44,"originalLine":80,"originalColumn":34,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":86,"generatedColumn":55,"originalLine":80,"originalColumn":46,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":86,"generatedColumn":65,"originalLine":81,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":86,"generatedColumn":71,"originalLine":82,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":87,"generatedColumn":4,"originalLine":82,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":87,"generatedColumn":4,"originalLine":82,"originalColumn":19,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":87,"generatedColumn":8,"originalLine":83,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":87,"generatedColumn":12,"originalLine":84,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"}]}}