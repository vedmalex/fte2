{"version":3,"sources":["generators/static/thing.njs.js"],"names":["code","text","expression"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACCA;AADD,IACCA,AAEAA,kCAEAA;AALD,IAKCA,AAAuDC,IACvDA,cAAYC,0EAA2ED,KACvFA,mBACAA,6BAA2BC,mBAAoBD,UAC/CA,SACAA,GACAD;AAXD,IAWCA,AACAC,UACAD;AAbD,IAaCA,AAAuCC,IACvCC,MAAOD,IACPD,EAEAA;AAjBD,IAiBCA,AAAwCC,IACxCC,MAAOD,IACPD,EAEAA;AArBD,IAqBCA,AAAoCC,IACpCC,MAAOD,IACPD;AAvBD,IAuBCA,AACAC,qBAAmBC,IAAKD,SAAOC,WAAYD,QAE3CD;AA1BD,IA0BCA,AACAC,sBAAoBC,IAAKD,SAAOC,WAAYD,mBAC5CA,aACAA,MAAID;AA7BL,IA6BKA,AAAoCC,IACxCA,MAAIC,MAAOD,IACXA,MAAID;AA/BL,IA+BKA,AAAMC,IACVA,MAAID;AAhCL,IAgCKA,AAA4CC,IAChDA,MAAIC,MAAOD,IACXA,MAAID,EAEAA;AApCL,IAoCKA,AAA0CC,IAC9CA,MAAIC,MAAOD,IACXA,MAAID;AAtCL,IAsCKA,AAAMC,IACVA,IACAA,yBAAuBC,IAAKD,SAAOC,WAAYD,UAC/CA,IAEAD;AA3CD,IA2CCA,AACAC,uBAAqBC,IAAKD,SAAOC,WAAYD,YAAUC,IAAKD,SAAOC,WAAYD,oBAC/EA,gBACID;AA9CL,IA8CKA,AAA6CC,IACjDA,MAAIC,MAAOD,IACXA,MAAID,EACAA;AAjDL,IAiDKA,AAAgDC,IACpDA,MAAIC,MAAOD,IACXA,MAAID,EACAA;AApDL,IAoDKA,AAA6CC,IACjDA,MAAIC,MAAOD,IACXA,MAAID,EACAA;AAvDL,IAuDKA,AAA6CC,IACjDA,MAAIC,MAAOD,IACXA,MAAID,EACAA;AA1DL,IA0DKA,AAA6CC,IACjDA,MAAIC,MAAOD,IACXA,MAAID,EACAA;AA7DL,IA6DKA,AAA+CC,IACnDA,MAAIC,MAAOD,IACXA,MAAID;AA/DL,IA+DKA,AAAMC,IACVA,yBAAuBC,IAAKD,YAAUC,WAAYD,UAClDA,IAEAD;AAnED,IAmECA,AACAC,uBAAqBC,IAAKD,SAAOC,WAAYD,YAAUC,IAAKD,SAAOC,WAAYD,YAAUC,IAAKD,YAAUC,WAAYD,mBACpHA,eACAA,MAAID;AAtEL,IAsEKA,AAAmCC,IACvCA,MAAIC,MAAOD,IACXA,MAAID,EACAA;AAzEL,IAyEKA,AAAqCC,IACzCA,MAAIC,MAAOD,IACXA,MAAID,EACAA;AA5EL,IA4EKA,AAAyCC,IAC7CA,MAAIC,MAAOD,IACXA,MAAID;AA9EL,IA8EKA,AACJC,qBAAuBC,IAAKD,OAAKC,WAAYD,UAC7CA,MACAD;AAjFD,IAiFCA;AAjFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"generators/static/thing.njs.js","sourceRoot":"/Users/vedmalex/work/fte2/demo","sourcesContent":["<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"],"template":{"version":"1.0.0","segments":[{"generatedLine":1,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":2,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":3,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":4,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":5,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":6,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":7,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":8,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":9,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":10,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":11,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":12,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":13,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":14,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":15,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":16,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":17,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":18,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":19,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":20,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":21,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":22,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":23,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":24,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":25,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":26,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":27,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":28,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":29,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":30,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":31,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":32,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":33,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":34,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":35,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":36,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":37,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":38,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":39,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":40,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":41,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":42,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":43,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":44,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":45,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":46,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":47,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":48,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":49,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":50,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":51,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":52,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":53,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":54,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":55,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":56,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":57,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":58,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":59,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":60,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":61,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":62,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":63,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":64,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":65,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":66,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":67,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":68,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":69,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":70,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":71,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":72,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":73,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":74,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":75,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":76,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":77,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":78,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":79,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":80,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":81,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":82,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":83,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":84,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":85,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":86,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":87,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":88,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":89,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":90,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":91,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":92,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":93,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":94,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":95,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":96,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":97,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":98,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":99,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":100,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":101,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":102,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":103,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":104,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":105,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":106,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":107,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":108,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":109,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":110,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":111,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":112,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":113,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":114,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":115,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":116,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":117,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":118,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":119,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":120,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":121,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":122,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":123,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":124,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":125,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":126,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":127,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":128,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":129,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":130,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":131,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":132,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":133,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":134,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":135,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":136,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":137,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":138,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":139,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":140,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":141,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":142,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":143,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":144,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":145,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":146,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":147,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":148,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":149,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":150,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":151,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":152,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":153,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":154,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":155,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":156,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":157,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":158,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":159,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":160,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":161,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":162,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":163,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":164,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":165,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":166,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":167,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":168,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":169,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":170,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":171,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/static/thing.njs.js"},{"generatedLine":49,"generatedColumn":4,"originalLine":2,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":50,"generatedColumn":4,"originalLine":2,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":50,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":50,"generatedColumn":38,"originalLine":6,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":51,"generatedColumn":4,"originalLine":6,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":51,"generatedColumn":4,"originalLine":6,"originalColumn":56,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":51,"generatedColumn":8,"originalLine":7,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":51,"generatedColumn":22,"originalLine":7,"originalColumn":13,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":51,"generatedColumn":96,"originalLine":7,"originalColumn":88,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":51,"generatedColumn":101,"originalLine":8,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":51,"generatedColumn":120,"originalLine":9,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":51,"generatedColumn":149,"originalLine":9,"originalColumn":28,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":51,"generatedColumn":168,"originalLine":9,"originalColumn":48,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":51,"generatedColumn":178,"originalLine":10,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":51,"generatedColumn":187,"originalLine":11,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":51,"generatedColumn":190,"originalLine":12,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":52,"generatedColumn":4,"originalLine":12,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":52,"generatedColumn":4,"originalLine":13,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":52,"generatedColumn":14,"originalLine":14,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":53,"generatedColumn":4,"originalLine":14,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":53,"generatedColumn":4,"originalLine":14,"originalColumn":40,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":53,"generatedColumn":8,"originalLine":15,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":53,"generatedColumn":14,"originalLine":15,"originalColumn":8,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":53,"generatedColumn":18,"originalLine":16,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":53,"generatedColumn":20,"originalLine":18,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":54,"generatedColumn":4,"originalLine":18,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":54,"generatedColumn":4,"originalLine":18,"originalColumn":41,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":54,"generatedColumn":8,"originalLine":19,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":54,"generatedColumn":14,"originalLine":19,"originalColumn":8,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":54,"generatedColumn":18,"originalLine":20,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":54,"generatedColumn":20,"originalLine":22,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":55,"generatedColumn":4,"originalLine":22,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":55,"generatedColumn":4,"originalLine":22,"originalColumn":37,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":55,"generatedColumn":8,"originalLine":23,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":55,"generatedColumn":14,"originalLine":23,"originalColumn":8,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":55,"generatedColumn":18,"originalLine":24,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":56,"generatedColumn":4,"originalLine":24,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":56,"generatedColumn":4,"originalLine":25,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":56,"generatedColumn":25,"originalLine":25,"originalColumn":20,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":56,"generatedColumn":29,"originalLine":25,"originalColumn":25,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":56,"generatedColumn":38,"originalLine":25,"originalColumn":32,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":56,"generatedColumn":49,"originalLine":25,"originalColumn":44,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":56,"generatedColumn":57,"originalLine":27,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":57,"generatedColumn":4,"originalLine":27,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":57,"generatedColumn":4,"originalLine":28,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":57,"generatedColumn":26,"originalLine":28,"originalColumn":21,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":57,"generatedColumn":30,"originalLine":28,"originalColumn":26,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":57,"generatedColumn":39,"originalLine":28,"originalColumn":33,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":57,"generatedColumn":50,"originalLine":28,"originalColumn":45,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":57,"generatedColumn":69,"originalLine":29,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":57,"generatedColumn":82,"originalLine":30,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":57,"generatedColumn":88,"originalLine":30,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":58,"generatedColumn":4,"originalLine":30,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":58,"generatedColumn":4,"originalLine":30,"originalColumn":41,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":58,"generatedColumn":8,"originalLine":31,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":58,"generatedColumn":14,"originalLine":31,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":58,"generatedColumn":20,"originalLine":31,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":58,"generatedColumn":24,"originalLine":32,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":58,"generatedColumn":30,"originalLine":32,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":59,"generatedColumn":4,"originalLine":32,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":59,"generatedColumn":4,"originalLine":32,"originalColumn":11,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":59,"generatedColumn":8,"originalLine":33,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":59,"generatedColumn":14,"originalLine":33,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":60,"generatedColumn":4,"originalLine":33,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":60,"generatedColumn":4,"originalLine":33,"originalColumn":49,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":60,"generatedColumn":8,"originalLine":34,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":60,"generatedColumn":14,"originalLine":34,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":60,"generatedColumn":20,"originalLine":34,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":60,"generatedColumn":24,"originalLine":35,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":60,"generatedColumn":30,"originalLine":35,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":60,"generatedColumn":32,"originalLine":37,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":61,"generatedColumn":4,"originalLine":37,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":61,"generatedColumn":4,"originalLine":37,"originalColumn":47,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":61,"generatedColumn":8,"originalLine":38,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":61,"generatedColumn":14,"originalLine":38,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":61,"generatedColumn":20,"originalLine":38,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":61,"generatedColumn":24,"originalLine":39,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":61,"generatedColumn":30,"originalLine":39,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":62,"generatedColumn":4,"originalLine":39,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":62,"generatedColumn":4,"originalLine":39,"originalColumn":11,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":62,"generatedColumn":8,"originalLine":40,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":62,"generatedColumn":12,"originalLine":41,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":62,"generatedColumn":37,"originalLine":41,"originalColumn":24,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":62,"generatedColumn":41,"originalLine":41,"originalColumn":29,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":62,"generatedColumn":50,"originalLine":41,"originalColumn":36,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":62,"generatedColumn":61,"originalLine":41,"originalColumn":48,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":62,"generatedColumn":71,"originalLine":42,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":62,"generatedColumn":75,"originalLine":44,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":63,"generatedColumn":4,"originalLine":44,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":63,"generatedColumn":4,"originalLine":45,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":63,"generatedColumn":27,"originalLine":45,"originalColumn":22,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":63,"generatedColumn":31,"originalLine":45,"originalColumn":27,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":63,"generatedColumn":40,"originalLine":45,"originalColumn":34,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":63,"generatedColumn":51,"originalLine":45,"originalColumn":46,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":63,"generatedColumn":63,"originalLine":45,"originalColumn":56,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":63,"generatedColumn":67,"originalLine":45,"originalColumn":61,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":63,"generatedColumn":76,"originalLine":45,"originalColumn":68,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":63,"generatedColumn":87,"originalLine":45,"originalColumn":80,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":63,"generatedColumn":107,"originalLine":46,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":63,"generatedColumn":123,"originalLine":47,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":64,"generatedColumn":4,"originalLine":47,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":64,"generatedColumn":4,"originalLine":47,"originalColumn":50,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":64,"generatedColumn":8,"originalLine":48,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":64,"generatedColumn":14,"originalLine":48,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":64,"generatedColumn":20,"originalLine":48,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":64,"generatedColumn":24,"originalLine":49,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":64,"generatedColumn":30,"originalLine":49,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":64,"generatedColumn":32,"originalLine":50,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":65,"generatedColumn":4,"originalLine":50,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":65,"generatedColumn":4,"originalLine":50,"originalColumn":53,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":65,"generatedColumn":8,"originalLine":51,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":65,"generatedColumn":14,"originalLine":51,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":65,"generatedColumn":20,"originalLine":51,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":65,"generatedColumn":24,"originalLine":52,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":65,"generatedColumn":30,"originalLine":52,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":65,"generatedColumn":32,"originalLine":53,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":66,"generatedColumn":4,"originalLine":53,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":66,"generatedColumn":4,"originalLine":53,"originalColumn":50,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":66,"generatedColumn":8,"originalLine":54,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":66,"generatedColumn":14,"originalLine":54,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":66,"generatedColumn":20,"originalLine":54,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":66,"generatedColumn":24,"originalLine":55,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":66,"generatedColumn":30,"originalLine":55,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":66,"generatedColumn":32,"originalLine":56,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":4,"originalLine":56,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":4,"originalLine":56,"originalColumn":50,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":8,"originalLine":57,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":14,"originalLine":57,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":20,"originalLine":57,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":24,"originalLine":58,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":30,"originalLine":58,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":67,"generatedColumn":32,"originalLine":59,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":68,"generatedColumn":4,"originalLine":59,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":68,"generatedColumn":4,"originalLine":59,"originalColumn":50,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":68,"generatedColumn":8,"originalLine":60,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":68,"generatedColumn":14,"originalLine":60,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":68,"generatedColumn":20,"originalLine":60,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":68,"generatedColumn":24,"originalLine":61,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":68,"generatedColumn":30,"originalLine":61,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":68,"generatedColumn":32,"originalLine":62,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":69,"generatedColumn":4,"originalLine":62,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":69,"generatedColumn":4,"originalLine":62,"originalColumn":52,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":69,"generatedColumn":8,"originalLine":63,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":69,"generatedColumn":14,"originalLine":63,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":69,"generatedColumn":20,"originalLine":63,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":69,"generatedColumn":24,"originalLine":64,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":69,"generatedColumn":30,"originalLine":64,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":70,"generatedColumn":4,"originalLine":64,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":70,"generatedColumn":4,"originalLine":64,"originalColumn":11,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":70,"generatedColumn":8,"originalLine":65,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":70,"generatedColumn":33,"originalLine":65,"originalColumn":24,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":70,"generatedColumn":37,"originalLine":65,"originalColumn":29,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":70,"generatedColumn":49,"originalLine":65,"originalColumn":39,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":70,"generatedColumn":60,"originalLine":65,"originalColumn":51,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":70,"generatedColumn":70,"originalLine":66,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":70,"generatedColumn":74,"originalLine":68,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":4,"originalLine":68,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":4,"originalLine":69,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":27,"originalLine":69,"originalColumn":22,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":31,"originalLine":69,"originalColumn":27,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":40,"originalLine":69,"originalColumn":34,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":51,"originalLine":69,"originalColumn":46,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":63,"originalLine":69,"originalColumn":56,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":67,"originalLine":69,"originalColumn":61,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":76,"originalLine":69,"originalColumn":68,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":87,"originalLine":69,"originalColumn":80,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":99,"originalLine":69,"originalColumn":90,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":103,"originalLine":69,"originalColumn":95,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":115,"originalLine":69,"originalColumn":105,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":126,"originalLine":69,"originalColumn":117,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":145,"originalLine":70,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":160,"originalLine":71,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":71,"generatedColumn":166,"originalLine":71,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":72,"generatedColumn":4,"originalLine":71,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":72,"generatedColumn":4,"originalLine":71,"originalColumn":40,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":72,"generatedColumn":8,"originalLine":72,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":72,"generatedColumn":14,"originalLine":72,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":72,"generatedColumn":20,"originalLine":72,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":72,"generatedColumn":24,"originalLine":73,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":72,"generatedColumn":30,"originalLine":73,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":72,"generatedColumn":32,"originalLine":74,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":73,"generatedColumn":4,"originalLine":74,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":73,"generatedColumn":4,"originalLine":74,"originalColumn":42,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":73,"generatedColumn":8,"originalLine":75,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":73,"generatedColumn":14,"originalLine":75,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":73,"generatedColumn":20,"originalLine":75,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":73,"generatedColumn":24,"originalLine":76,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":73,"generatedColumn":30,"originalLine":76,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":73,"generatedColumn":32,"originalLine":77,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":74,"generatedColumn":4,"originalLine":77,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":74,"generatedColumn":4,"originalLine":77,"originalColumn":46,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":74,"generatedColumn":8,"originalLine":78,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":74,"generatedColumn":14,"originalLine":78,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":74,"generatedColumn":20,"originalLine":78,"originalColumn":12,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":74,"generatedColumn":24,"originalLine":79,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":74,"generatedColumn":30,"originalLine":79,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":75,"generatedColumn":4,"originalLine":79,"originalColumn":5,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":75,"generatedColumn":4,"originalLine":80,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":75,"generatedColumn":25,"originalLine":80,"originalColumn":24,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":75,"generatedColumn":29,"originalLine":80,"originalColumn":29,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":75,"generatedColumn":36,"originalLine":80,"originalColumn":34,"source":"generators/static/thing.njs.js","name":"expression","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":75,"generatedColumn":47,"originalLine":80,"originalColumn":46,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":75,"generatedColumn":57,"originalLine":81,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"text","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":75,"generatedColumn":63,"originalLine":82,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"},{"generatedLine":76,"generatedColumn":4,"originalLine":82,"originalColumn":1,"source":"generators/static/thing.njs.js","name":"code","content":"<#@ chunks \"$$$main$$$\" #>\n<# const [ns, thingType] = context.thingType.split('.') #>\n\n<#- chunkStart(`./${thingType}.js`); -#>\n\n<# const chunks = ['model','store','metadata','app'] #>\nExt.require(#{JSON.stringify(chunks.map(chunk=> `things.${ns}.${chunk}.${thingType}`))},\n    function(){\n        Ext.define('things.#{context.thingType}',{});\n    }\n)\n<#- chunkStart(`./model/${thingType}.js`); -#>\n// model\n<# context.metaview.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.metamodel.forEach((file)=>{#>\n#{file}\n<#})-#>\n\n<# context.model.forEach((file)=>{#>\n#{file}\n<#})-#>\nExt.define('things.#{ns}.model.#{thingType}',{});\n\n<#- chunkStart(`./store/${thingType}.js`); -#>\nExt.require('things.#{ns}.model.#{thingType}', function() {\n// stores\n    <# context.store.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    <# context.metagridcombo.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n\n    <# context.renderstore.forEach((file)=>{#>\n    #{file}\n    <#})#>\n\n    Ext.define('things.#{ns}.store.#{thingType}',{});\n})\n\n<#- chunkStart(`./metadata/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}'], function() {\n    //metadata\n    <#- context.metafieldsets.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaclientmethods.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metagridfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaviewfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metaeditfields.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.metasearchfields.forEach((file)=>{#>\n    #{file}\n    <#})#>\n    Ext.define('things.#{ns}.metadata.#{thingType}',{});\n})\n\n<#- chunkStart(`./app/${thingType}.js`); -#>\nExt.require(['things.#{ns}.model.#{thingType}','things.#{ns}.store.#{thingType}','things.#{ns}.metadata.#{thingType}'], function(){\n    //extjs\n    <# context.view.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.domain.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    <# context.controller.forEach((file)=>{#>\n    #{file}\n    <#})-#>\n    Ext.define('things.#{ns}.app.#{thingType}',{});\n})\n<# chunkEnd(); -#>\n\n\n"}]}}