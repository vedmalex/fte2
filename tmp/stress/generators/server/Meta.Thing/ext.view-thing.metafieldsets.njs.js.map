{"version":3,"sources":["generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"],"names":["text","code","expression"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAiBA,IAChBC;AADD,IACCA,AACAA;AAFD,IAECA,AACAA;AAHD,IAGCA,AACAA;AAJD,IAICA,AAAED,IACFA,IACAA,oCAAkCE,oBAAqBF,GAACE,eAAgBF,QACxEA,mCACAA,eACAA,qBAAmBE,oBAAqBF,GAACE,eAAgBF,OACzDA,QAAMC;AAVP,IAUOA,AACNA;AAXD,IAWCA,AACAA;AAZD,IAYCA,AACAA;AAbD,IAaCA,AACAA;AAdD,IAcCA,AAAcD,IACdA,eAAaE,gBAAiBF,kBAC9BA,+BACAA,+CACAA,kBAAgBC;AAlBjB,IAkBiBA,AAA+BD,IAC/CA,sCAAoCE,gBAAiBF,KAAGE,oBAAqBF,GAACE,eAAgBF,mBAC9FA,kBAAgBC;AApBjB,IAoBiBA,AAAYD,IAC5BA,gDACAA,kBAAgBC;AAtBjB,IAsBiBA,AAAKD,IACrBA,kCAAgCE,gBAAiBF,KACjDA,kCAAgCE,WAAYF,KAC5CA,kCAAgCE,gBAAiBF,KACjDA,IACAA,kCAAgCE,cAAeF,KAC/CA,6CACAA,+BACAA,wCACAA,qCACAA,wCACAA,sBACAA,0BACAA,mBACAA,cAAYC;AApCb,IAoCaA,AAAmDD,IAC/DA,wBACAA,2BACAA,qBAAmBE,iBAAkBF,KACrCA,mBACAA,cAAYC;AAzCb,IAyCaA,AAAYD,IACxBA,0BACAA,cAAYC;AA3Cb,IA2CaA,AAAKD,IACjBA,kBACAA,eAAaE,gBAAiBF,0BAC9BA,+CACAA,kCAAgCE,gBAAiBF,KACjDA,kCAAgCE,cAAeF,KAC/CA,kBAAgBC;AAjDjB,IAiDiBA,AAA+BD,IAC/CA,sCAAoCE,gBAAiBF,KAAGE,oBAAqBF,GAACE,eAAgBF,mBAC9FA,kBAAgBC;AAnDjB,IAmDiBA,AAAWD,IAC3BA,gDACAA,kBAAgBC;AArDjB,IAqDiBA,AAAKD,IACrBA,0BACAA,mBACAA,cAAYC;AAxDb,IAwDaA,AACZA;AAzDD,IAyDCA,AACAA;AA1DD,IA0DCA,AACAA;AA3DD,IA2DCA,AACAA;AA5DD,IA4DCA,AAAUD,IACVA,SACAA,OACAA;AA/DD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","sourceRoot":"/Users/vedmalex/work/fte2/demo","sourcesContent":["<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"],"template":{"version":"1.0.0","segments":[{"generatedLine":1,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":2,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":3,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":4,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":5,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":6,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":7,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":8,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":9,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":10,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":11,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":12,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":13,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":14,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":15,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":16,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":17,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":18,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":19,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":20,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":21,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":22,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":23,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":24,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":25,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":26,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":27,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":28,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":29,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":30,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":31,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":32,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":33,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":34,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":35,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":36,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":37,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":38,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":39,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":40,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":41,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":42,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":43,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":44,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":45,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":46,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":47,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":48,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":49,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":50,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":51,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":52,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":53,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":54,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":55,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":56,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":57,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":58,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":59,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":60,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":61,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":62,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":63,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":64,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":65,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":66,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":67,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":68,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":69,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":70,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":71,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":72,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":73,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":74,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":75,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":76,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":77,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":78,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":79,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":80,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":81,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":82,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":83,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":84,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":85,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":86,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":87,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":88,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":89,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":90,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":91,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":92,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":93,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":94,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":95,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":96,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":97,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":98,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":99,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":100,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":101,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":102,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":103,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js"},{"generatedLine":8,"generatedColumn":4,"originalLine":1,"originalColumn":17,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":8,"generatedColumn":8,"originalLine":2,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":9,"generatedColumn":4,"originalLine":2,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":9,"generatedColumn":4,"originalLine":3,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":10,"generatedColumn":4,"originalLine":3,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":10,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":11,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":11,"generatedColumn":4,"originalLine":5,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":12,"generatedColumn":4,"originalLine":5,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":12,"generatedColumn":4,"originalLine":5,"originalColumn":3,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":12,"generatedColumn":8,"originalLine":6,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":12,"generatedColumn":12,"originalLine":7,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":12,"generatedColumn":48,"originalLine":7,"originalColumn":35,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"expression","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":12,"generatedColumn":68,"originalLine":7,"originalColumn":56,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":12,"generatedColumn":71,"originalLine":7,"originalColumn":57,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"expression","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":12,"generatedColumn":86,"originalLine":7,"originalColumn":73,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":12,"generatedColumn":94,"originalLine":8,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":12,"generatedColumn":129,"originalLine":9,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":12,"generatedColumn":144,"originalLine":10,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":12,"generatedColumn":165,"originalLine":10,"originalColumn":20,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"expression","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":12,"generatedColumn":185,"originalLine":10,"originalColumn":41,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":12,"generatedColumn":188,"originalLine":10,"originalColumn":42,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"expression","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":12,"generatedColumn":203,"originalLine":10,"originalColumn":58,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":12,"generatedColumn":210,"originalLine":11,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":12,"generatedColumn":218,"originalLine":11,"originalColumn":7,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":13,"generatedColumn":4,"originalLine":11,"originalColumn":7,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":13,"generatedColumn":4,"originalLine":12,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":14,"generatedColumn":4,"originalLine":12,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":14,"generatedColumn":4,"originalLine":13,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":15,"generatedColumn":4,"originalLine":13,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":15,"generatedColumn":4,"originalLine":14,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":16,"generatedColumn":4,"originalLine":14,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":16,"generatedColumn":4,"originalLine":15,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":17,"generatedColumn":4,"originalLine":15,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":17,"generatedColumn":4,"originalLine":15,"originalColumn":15,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":17,"generatedColumn":8,"originalLine":16,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":17,"generatedColumn":23,"originalLine":16,"originalColumn":14,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"expression","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":17,"generatedColumn":39,"originalLine":16,"originalColumn":31,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":17,"generatedColumn":57,"originalLine":17,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":17,"generatedColumn":88,"originalLine":18,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":17,"generatedColumn":135,"originalLine":19,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":17,"generatedColumn":153,"originalLine":19,"originalColumn":17,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":18,"generatedColumn":4,"originalLine":19,"originalColumn":17,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":18,"generatedColumn":4,"originalLine":19,"originalColumn":48,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":18,"generatedColumn":8,"originalLine":20,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":18,"generatedColumn":46,"originalLine":20,"originalColumn":37,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"expression","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":18,"generatedColumn":62,"originalLine":20,"originalColumn":54,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":18,"generatedColumn":67,"originalLine":20,"originalColumn":57,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"expression","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":18,"generatedColumn":87,"originalLine":20,"originalColumn":78,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":18,"generatedColumn":90,"originalLine":20,"originalColumn":79,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"expression","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":18,"generatedColumn":105,"originalLine":20,"originalColumn":95,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":18,"generatedColumn":124,"originalLine":21,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":18,"generatedColumn":142,"originalLine":21,"originalColumn":17,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":19,"generatedColumn":4,"originalLine":21,"originalColumn":17,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":19,"generatedColumn":4,"originalLine":21,"originalColumn":29,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":19,"generatedColumn":8,"originalLine":22,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":19,"generatedColumn":56,"originalLine":23,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":19,"generatedColumn":74,"originalLine":23,"originalColumn":17,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":4,"originalLine":23,"originalColumn":17,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":4,"originalLine":23,"originalColumn":22,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":8,"originalLine":24,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":42,"originalLine":24,"originalColumn":33,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"expression","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":58,"originalLine":24,"originalColumn":50,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":63,"originalLine":25,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":97,"originalLine":25,"originalColumn":33,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"expression","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":108,"originalLine":25,"originalColumn":45,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":113,"originalLine":26,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":147,"originalLine":26,"originalColumn":33,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"expression","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":163,"originalLine":26,"originalColumn":50,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":168,"originalLine":27,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":172,"originalLine":28,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":206,"originalLine":28,"originalColumn":33,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"expression","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":220,"originalLine":28,"originalColumn":48,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":225,"originalLine":29,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":270,"originalLine":30,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":301,"originalLine":31,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":341,"originalLine":32,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":378,"originalLine":33,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":418,"originalLine":34,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":440,"originalLine":35,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":466,"originalLine":36,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":485,"originalLine":37,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":20,"generatedColumn":499,"originalLine":37,"originalColumn":13,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":21,"generatedColumn":4,"originalLine":37,"originalColumn":13,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":21,"generatedColumn":4,"originalLine":37,"originalColumn":64,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":21,"generatedColumn":8,"originalLine":38,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":21,"generatedColumn":32,"originalLine":39,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":21,"generatedColumn":59,"originalLine":40,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":21,"generatedColumn":80,"originalLine":40,"originalColumn":20,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"expression","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":21,"generatedColumn":97,"originalLine":40,"originalColumn":38,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":21,"generatedColumn":102,"originalLine":41,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":21,"generatedColumn":121,"originalLine":42,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":21,"generatedColumn":135,"originalLine":42,"originalColumn":13,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":22,"generatedColumn":4,"originalLine":42,"originalColumn":13,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":22,"generatedColumn":4,"originalLine":42,"originalColumn":25,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":22,"generatedColumn":8,"originalLine":43,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":22,"generatedColumn":34,"originalLine":44,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":22,"generatedColumn":48,"originalLine":44,"originalColumn":13,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":23,"generatedColumn":4,"originalLine":44,"originalColumn":13,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":23,"generatedColumn":4,"originalLine":44,"originalColumn":18,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":23,"generatedColumn":8,"originalLine":45,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":23,"generatedColumn":26,"originalLine":46,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":23,"generatedColumn":41,"originalLine":46,"originalColumn":14,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"expression","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":23,"generatedColumn":57,"originalLine":46,"originalColumn":31,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":23,"generatedColumn":83,"originalLine":47,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":23,"generatedColumn":130,"originalLine":48,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":23,"generatedColumn":164,"originalLine":48,"originalColumn":33,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"expression","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":23,"generatedColumn":180,"originalLine":48,"originalColumn":50,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":23,"generatedColumn":185,"originalLine":49,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":23,"generatedColumn":219,"originalLine":49,"originalColumn":33,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"expression","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":23,"generatedColumn":233,"originalLine":49,"originalColumn":48,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":23,"generatedColumn":238,"originalLine":50,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":23,"generatedColumn":256,"originalLine":50,"originalColumn":17,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":24,"generatedColumn":4,"originalLine":50,"originalColumn":17,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":24,"generatedColumn":4,"originalLine":50,"originalColumn":48,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":24,"generatedColumn":8,"originalLine":51,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":24,"generatedColumn":46,"originalLine":51,"originalColumn":37,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"expression","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":24,"generatedColumn":62,"originalLine":51,"originalColumn":54,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":24,"generatedColumn":67,"originalLine":51,"originalColumn":57,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"expression","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":24,"generatedColumn":87,"originalLine":51,"originalColumn":78,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":24,"generatedColumn":90,"originalLine":51,"originalColumn":79,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"expression","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":24,"generatedColumn":105,"originalLine":51,"originalColumn":95,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":24,"generatedColumn":124,"originalLine":52,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":24,"generatedColumn":142,"originalLine":52,"originalColumn":17,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":25,"generatedColumn":4,"originalLine":52,"originalColumn":17,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":25,"generatedColumn":4,"originalLine":52,"originalColumn":28,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":25,"generatedColumn":8,"originalLine":53,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":25,"generatedColumn":56,"originalLine":54,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":25,"generatedColumn":74,"originalLine":54,"originalColumn":17,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":26,"generatedColumn":4,"originalLine":54,"originalColumn":17,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":26,"generatedColumn":4,"originalLine":54,"originalColumn":22,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":26,"generatedColumn":8,"originalLine":55,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":26,"generatedColumn":34,"originalLine":56,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":26,"generatedColumn":53,"originalLine":57,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":26,"generatedColumn":67,"originalLine":57,"originalColumn":13,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":27,"generatedColumn":4,"originalLine":57,"originalColumn":13,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":27,"generatedColumn":4,"originalLine":58,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":28,"generatedColumn":4,"originalLine":58,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":28,"generatedColumn":4,"originalLine":59,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":29,"generatedColumn":4,"originalLine":59,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":29,"generatedColumn":4,"originalLine":60,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":30,"generatedColumn":4,"originalLine":60,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":30,"generatedColumn":4,"originalLine":61,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":31,"generatedColumn":4,"originalLine":61,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"code","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":31,"generatedColumn":4,"originalLine":61,"originalColumn":11,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":31,"generatedColumn":8,"originalLine":62,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":31,"generatedColumn":17,"originalLine":63,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"},{"generatedLine":31,"generatedColumn":24,"originalLine":64,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.metafieldsets.njs.js","name":"text","content":"<#@ noContent #>\n<#\n  const _ = require('lodash')\n  const fieldsets = context.fieldset\n#>\n\nExt.define('Grainjs.metafieldsets.#{context.$namespace}.#{context.$name}', {\n  override: 'Grainjs.metadata',\n  statics:{\n    'metafieldsets.#{context.$namespace}.#{context.$name}':{\n      <#-  if(fieldsets) {\n          for (let i = 0; i < fieldsets.length; i++) {\n            let fs = fieldsets[i];\n            if(fs.formItems?.length > 0){\n            #>\n            '#{fs.displayName}':  (items)=>{\n              const res = {\n                xtype:          'fieldset',\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else {#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                columnWidth:    #{fs.columnWidth},\n                height:         #{fs.height},\n                collapsible:    #{fs.collapsible},\n\n                collapsed:      #{fs.collapsed},\n                layout:         'column',\n                defaults: {\n                  margin: '0 5 5 5',\n                  columnWidth: 1,\n                  xtype: 'textfield'\n                },\n                items,\n              }\n            <#if(fs.extraOptions && fs.extraOptions!== '{}'){#>\n            return {\n                ...res,\n                ...#{fs.extraOptions},\n              }\n            <#} else {#>\n            return res\n            <#}#>\n            },\n            '#{fs.displayName}-search':  (items)=>({\n                xtype:          'fieldset',\n                collapsible:    #{fs.collapsible},\n                collapsed:      #{fs.collapsed},\n                <#if(fs.displayName !== '_'){#>\n                title:          _t('#{fs.displayName}','#{context.$namespace}.#{context.$name}', 'fieldset'),\n                <#} else{#>\n                cls: 'fieldset-empty-title',\n                <#}#>\n                items,\n            }),\n            <#\n            }\n          }\n        }\n        #>\n    }\n  }\n})\n"}]}}