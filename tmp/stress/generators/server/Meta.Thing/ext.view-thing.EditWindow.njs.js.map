{"version":3,"sources":["generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"],"names":["text","expression","code"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAiBA,IAChBA,+BAA6BC,oBAAqBD,cAAYC,eAAgBD,QAC9EA,kBAAgBC,yBAA0BD,MAC1CA,kBAAgBC,kBAAmBD,MACnCA,iDACAA,mBAAiBC,qBAAsBD,gBACvCA,cAAWC,qBAAsBD,OACjCA,iCAA+BC,oBAAqBD,GAACC,eAAgBD,KAAGE;AAPzE,IAOyEA,AAAwBF,OAAIC,iBAAkBD,IAACE;AAPxH,IAOwHA,AAAKF,MAC5HA,gCACAA,0BACAA,IACAA,mBAAiBC,oBAAqBD,GAACC,eAAgBD,KAAGC,oBAAqBD,GAACC,eAAgBD,6BAChGA,2BACAA,2BACAA,oBACAA,0BACAA,YACAA,wBACAA,aACAA,oBAAkBC,qBAAsBD,0BACxCA,aACAA,YACAA,IACAA,iBACAA,aACAA,qBAAkBC,qBAAsBD,WACxCA,6BACAA,6BACAA,2DACAA,oCACAA,4DACAA,aACAA,YACAA,IACAA,0CAAwCC,oBAAqBD,GAACC,eAAgBD,gBAC9EA,6CAA2CC,oBAAqBD,GAACC,eAAgBD,mBACjFA,IACAA,oBACAA,aACAA,oDACAA,oCACAA,0BACAA,sCACAA,0FAAwFC,oBAAqBD,GAACC,eAAgBD,wCAC9HA,iBACAA,eACAA,cACAA,aACAA,iDACAA,iCACAA,0BACAA,sCACAA,uFAAqFC,oBAAqBD,GAACC,eAAgBD,wCAC3HA,iBACAA,eACAA,cACAA,aACAA,sDACAA,qCACAA,0BACAA,sCACAA,2FAAyFC,oBAAqBD,GAACC,eAAgBD,wCAC/HA,iBACAA,eACAA,aACAA,WACAA,WACAA,mCACAA,OACAA;AArED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","sourceRoot":"/Users/vedmalex/work/fte2/demo","sourcesContent":["<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"],"template":{"version":"1.0.0","segments":[{"generatedLine":1,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":2,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":3,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":4,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":5,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":6,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":7,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":8,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":9,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":10,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":11,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":12,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":13,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":14,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":15,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":16,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":17,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":18,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":19,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":20,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":21,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":22,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":23,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":24,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":25,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":26,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":27,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":28,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":29,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":30,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":31,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":32,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":33,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":34,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":35,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":36,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":37,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":38,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":39,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":40,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":41,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":42,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":43,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":44,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":45,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":46,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":47,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":48,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":49,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":50,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":51,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":52,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":53,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":54,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":55,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":56,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":57,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":58,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":59,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":60,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":61,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":62,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":63,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":64,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":65,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":66,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":67,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":68,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":69,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":70,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":71,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":72,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":73,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":74,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":75,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":76,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":77,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":78,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":79,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":80,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":81,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":82,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":83,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":84,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":85,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":86,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":87,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":88,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":89,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":90,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js"},{"generatedLine":8,"generatedColumn":4,"originalLine":1,"originalColumn":17,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":8,"originalLine":2,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":39,"originalLine":2,"originalColumn":30,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":59,"originalLine":2,"originalColumn":51,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":73,"originalLine":2,"originalColumn":63,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":88,"originalLine":2,"originalColumn":79,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":96,"originalLine":3,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":114,"originalLine":3,"originalColumn":17,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":139,"originalLine":3,"originalColumn":43,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":145,"originalLine":4,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":163,"originalLine":4,"originalColumn":17,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":181,"originalLine":4,"originalColumn":36,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":187,"originalLine":5,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":236,"originalLine":6,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":255,"originalLine":6,"originalColumn":18,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":276,"originalLine":6,"originalColumn":40,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":292,"originalLine":7,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":306,"originalLine":7,"originalColumn":12,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":327,"originalLine":7,"originalColumn":34,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":334,"originalLine":8,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":367,"originalLine":8,"originalColumn":32,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":387,"originalLine":8,"originalColumn":53,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":390,"originalLine":8,"originalColumn":54,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":405,"originalLine":8,"originalColumn":70,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":8,"generatedColumn":410,"originalLine":8,"originalColumn":73,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":9,"generatedColumn":4,"originalLine":8,"originalColumn":73,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":9,"generatedColumn":4,"originalLine":8,"originalColumn":97,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":9,"generatedColumn":11,"originalLine":8,"originalColumn":101,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":9,"generatedColumn":28,"originalLine":8,"originalColumn":119,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":9,"generatedColumn":32,"originalLine":8,"originalColumn":120,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":4,"originalLine":8,"originalColumn":120,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":4,"originalLine":8,"originalColumn":125,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":10,"originalLine":9,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":42,"originalLine":10,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":68,"originalLine":11,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":72,"originalLine":12,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":91,"originalLine":12,"originalColumn":18,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":111,"originalLine":12,"originalColumn":39,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":114,"originalLine":12,"originalColumn":40,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":129,"originalLine":12,"originalColumn":56,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":134,"originalLine":12,"originalColumn":59,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":154,"originalLine":12,"originalColumn":80,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":157,"originalLine":12,"originalColumn":81,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":172,"originalLine":12,"originalColumn":97,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":201,"originalLine":13,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":228,"originalLine":14,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":255,"originalLine":15,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":275,"originalLine":16,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":301,"originalLine":17,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":313,"originalLine":18,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":337,"originalLine":19,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":350,"originalLine":20,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":370,"originalLine":20,"originalColumn":19,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":391,"originalLine":20,"originalColumn":41,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":417,"originalLine":21,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":430,"originalLine":22,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":442,"originalLine":23,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":446,"originalLine":24,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":463,"originalLine":25,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":476,"originalLine":26,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":497,"originalLine":26,"originalColumn":19,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":518,"originalLine":26,"originalColumn":41,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":529,"originalLine":27,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":558,"originalLine":28,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":587,"originalLine":29,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":646,"originalLine":30,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":682,"originalLine":31,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":742,"originalLine":32,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":755,"originalLine":33,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":767,"originalLine":34,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":771,"originalLine":35,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":813,"originalLine":35,"originalColumn":41,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":833,"originalLine":35,"originalColumn":62,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":836,"originalLine":35,"originalColumn":63,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":851,"originalLine":35,"originalColumn":79,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":867,"originalLine":36,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":912,"originalLine":36,"originalColumn":44,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":932,"originalLine":36,"originalColumn":65,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":935,"originalLine":36,"originalColumn":66,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":950,"originalLine":36,"originalColumn":82,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":969,"originalLine":37,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":973,"originalLine":38,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":993,"originalLine":39,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1006,"originalLine":40,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1058,"originalLine":41,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1094,"originalLine":42,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1120,"originalLine":43,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1158,"originalLine":44,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1248,"originalLine":44,"originalColumn":89,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1268,"originalLine":44,"originalColumn":110,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1271,"originalLine":44,"originalColumn":111,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1286,"originalLine":44,"originalColumn":127,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1326,"originalLine":45,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1343,"originalLine":46,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1358,"originalLine":47,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1372,"originalLine":48,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1385,"originalLine":49,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1434,"originalLine":50,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1467,"originalLine":51,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1493,"originalLine":52,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1531,"originalLine":53,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1618,"originalLine":53,"originalColumn":86,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1638,"originalLine":53,"originalColumn":107,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1641,"originalLine":53,"originalColumn":108,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1656,"originalLine":53,"originalColumn":124,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1696,"originalLine":54,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1713,"originalLine":55,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1728,"originalLine":56,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1742,"originalLine":57,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1755,"originalLine":58,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1809,"originalLine":59,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1846,"originalLine":60,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1872,"originalLine":61,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":1910,"originalLine":62,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":2001,"originalLine":62,"originalColumn":90,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":2021,"originalLine":62,"originalColumn":111,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":2024,"originalLine":62,"originalColumn":112,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":2039,"originalLine":62,"originalColumn":128,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":2079,"originalLine":63,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":2096,"originalLine":64,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":2111,"originalLine":65,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":2124,"originalLine":66,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":2135,"originalLine":67,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":2146,"originalLine":68,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":2181,"originalLine":69,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"},{"generatedLine":10,"generatedColumn":2188,"originalLine":70,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.view-thing.EditWindow.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.$namespace}.EditWindow.#{context.$name}', {\n  serverModel: '#{context.$normalizedName}',\n  // requires: [#{context.requires}],\n  extend: 'Modeleditor.view.base.baseWindow',\n  alias: 'widget.#{context.$widgetName}editwindow',\n  widget: \"#{context.$widgetName}\",\n  iconCls:  _r('iconCls', '', '#{context.$namespace}.#{context.$name}') <#if(context.iconCls){#>|| \"#{context.iconCls}\"<#}#> ,\n  initComponent: function(){\n    Ext.apply( this, {\n\n      title: _t('#{context.$namespace}.#{context.$name}','#{context.$namespace}.#{context.$name}','titles','EditWindow'),\n      layout: 'anchor',\n      autoScroll: true,\n      defaults:{\n        anchor: '100%'\n      },\n      dockedItems: [\n        {\n          xtype: '#{context.$widgetName}formnavigationtoolbar'\n        }\n      ],\n\n      items:[\n        {\n          xtype: \"#{context.$widgetName}edit\",\n          hideable: true,\n          required: true,\n          toDisplay: _t('General', 'SYSTEM', 'titles'),\n          margin: \"5 15 5 15\",\n          relGroup: [_t('General', 'SYSTEM', 'titles'),]\n        }\n      ],\n\n      relNames: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].relNames,\n      groupedRels: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].groupedRels,\n\n      buttons: [\n        {\n          text: _t('Apply','SYSTEM', 'buttons'),\n          itemId: 'applyButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Apply Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Ok','SYSTEM', 'buttons'),\n          itemId: 'okButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window OK Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        },\n        {\n          text: _t('Cancel', 'SYSTEM', 'buttons'),\n          itemId: 'cancelButton',\n          listeners: {\n            click: function(btn) {\n              DirectCacheLogger.userStories('Edit Window Cancel Button', { serverModel: '#{context.$namespace}.#{context.$name}', windowId: btn.up('window').id });\n            }\n          }\n        }\n      ]\n    });\n    this.callParent(arguments);\n  }\n});\n"}]}}