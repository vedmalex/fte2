{"version":3,"sources":["generators/server/Meta.Thing/ext.store.selected.njs.js"],"names":["code","text","expression"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACCA;AADD,IACCA,AACAA;AAFD,IAECA,AACAA;AAHD,IAGCA,AACAA;AAJD,IAICA,AACAA;AALD,IAKCA,AACAA;AAND,IAMCA,AACAA;AAPD,IAOCA,AACAA;AARD,IAQCA,AACAA;AATD,IASCA,AACAA;AAVD,IAUCA,AACAA;AAXD,IAWCA,AAAEC,IACFA,gCAA8BC,YAAaD,YAAUC,MAAOD,QAC5DA,kBAAgBC,yBAA0BD,MAC1CA,iCAA+BC,YAAaD,GAACC,MAAOD,OACpDA,qCACAA,8BAA4BC,YAAaD,GAACC,MAAOD,MACjDA,gBAAcC,qBAAsBD,KACpCA,qBACAA,qBACAA,wBACAA,sBACAA,cAAYC,yBAA0BD,KACtCA,mCAAiCC,oBAAqBD,GAACC,eAAgBD,eACvEA,cAAYD;AAxBb,IAwBaA,AACZA;AAzBD,IAyBCA,AAAgEC,IAChEA,cAAYD;AA1Bb,IA0BaA,AACZA;AA3BD,IA2BCA,AACAA;AA5BD,IA4BCA,AACAA;AA7BD,IA6BCA,AAAgBC,IAAED;AA7BnB,IA6BmBA,AAClBA;AA9BD,IA8BCA,AAAIC,KACJA,gBAAcC,iBAAkBD,MAChCA,iBAAeC,kBAAmBD,KAClCA,KAAGD;AAjCJ,IAiCIA,AAAKC,IACRA,KACED;AAnCH,IAmCGA,AAAOC,IACTA;AApCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"generators/server/Meta.Thing/ext.store.selected.njs.js","sourceRoot":"/Users/vedmalex/work/fte2/demo","sourcesContent":["<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"],"template":{"version":"1.0.0","segments":[{"generatedLine":1,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":2,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":3,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":4,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":5,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":6,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":7,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":8,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":9,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":10,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":11,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":12,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":13,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":14,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":15,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":16,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":17,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":18,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":19,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":20,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":21,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":22,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":23,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":24,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":25,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":26,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":27,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":28,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":29,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":30,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":31,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":32,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":33,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":34,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":35,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":36,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":37,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":38,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":39,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":40,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":41,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":42,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":43,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":44,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":45,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":46,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":47,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":48,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":49,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":50,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":51,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":52,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":53,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":54,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":55,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":56,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":57,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":58,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":59,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":60,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":61,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":62,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js"},{"generatedLine":8,"generatedColumn":4,"originalLine":2,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":9,"generatedColumn":4,"originalLine":2,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":9,"generatedColumn":4,"originalLine":3,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":10,"generatedColumn":4,"originalLine":3,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":10,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":11,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":11,"generatedColumn":4,"originalLine":5,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":12,"generatedColumn":4,"originalLine":5,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":12,"generatedColumn":4,"originalLine":6,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":13,"generatedColumn":4,"originalLine":6,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":13,"generatedColumn":4,"originalLine":7,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":14,"generatedColumn":4,"originalLine":7,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":14,"generatedColumn":4,"originalLine":8,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":15,"generatedColumn":4,"originalLine":8,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":15,"generatedColumn":4,"originalLine":9,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":16,"generatedColumn":4,"originalLine":9,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":16,"generatedColumn":4,"originalLine":10,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":17,"generatedColumn":4,"originalLine":10,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":17,"generatedColumn":4,"originalLine":11,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":18,"generatedColumn":4,"originalLine":11,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":18,"generatedColumn":4,"originalLine":12,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":4,"originalLine":12,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":4,"originalLine":12,"originalColumn":3,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":8,"originalLine":13,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":40,"originalLine":13,"originalColumn":31,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"expression","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":52,"originalLine":13,"originalColumn":44,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":64,"originalLine":13,"originalColumn":54,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"expression","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":70,"originalLine":13,"originalColumn":61,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":78,"originalLine":14,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":96,"originalLine":14,"originalColumn":17,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"expression","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":121,"originalLine":14,"originalColumn":43,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":127,"originalLine":15,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":160,"originalLine":15,"originalColumn":32,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"expression","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":172,"originalLine":15,"originalColumn":45,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":175,"originalLine":15,"originalColumn":46,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"expression","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":181,"originalLine":15,"originalColumn":53,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":188,"originalLine":16,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":225,"originalLine":17,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":255,"originalLine":17,"originalColumn":29,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"expression","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":267,"originalLine":17,"originalColumn":42,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":270,"originalLine":17,"originalColumn":43,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"expression","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":276,"originalLine":17,"originalColumn":50,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":282,"originalLine":18,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":298,"originalLine":18,"originalColumn":15,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"expression","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":319,"originalLine":18,"originalColumn":37,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":324,"originalLine":19,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":345,"originalLine":20,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":366,"originalLine":21,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":390,"originalLine":22,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":412,"originalLine":23,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":426,"originalLine":23,"originalColumn":13,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"expression","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":451,"originalLine":23,"originalColumn":39,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":456,"originalLine":24,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":491,"originalLine":24,"originalColumn":34,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"expression","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":511,"originalLine":24,"originalColumn":55,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":514,"originalLine":24,"originalColumn":56,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"expression","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":529,"originalLine":24,"originalColumn":72,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":544,"originalLine":25,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":19,"generatedColumn":558,"originalLine":25,"originalColumn":13,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":20,"generatedColumn":4,"originalLine":25,"originalColumn":13,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":20,"generatedColumn":4,"originalLine":26,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":21,"generatedColumn":4,"originalLine":26,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":21,"generatedColumn":4,"originalLine":26,"originalColumn":65,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":21,"generatedColumn":8,"originalLine":27,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":21,"generatedColumn":22,"originalLine":27,"originalColumn":13,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":22,"generatedColumn":4,"originalLine":27,"originalColumn":13,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":22,"generatedColumn":4,"originalLine":28,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":23,"generatedColumn":4,"originalLine":28,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":23,"generatedColumn":4,"originalLine":29,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":24,"generatedColumn":4,"originalLine":29,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":24,"generatedColumn":4,"originalLine":30,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":25,"generatedColumn":4,"originalLine":30,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":25,"generatedColumn":4,"originalLine":30,"originalColumn":17,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":25,"generatedColumn":8,"originalLine":30,"originalColumn":19,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":26,"generatedColumn":4,"originalLine":30,"originalColumn":19,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":26,"generatedColumn":4,"originalLine":31,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":27,"generatedColumn":4,"originalLine":31,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":27,"generatedColumn":4,"originalLine":31,"originalColumn":5,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":27,"generatedColumn":9,"originalLine":32,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":27,"generatedColumn":25,"originalLine":32,"originalColumn":15,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"expression","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":27,"generatedColumn":42,"originalLine":32,"originalColumn":33,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":27,"generatedColumn":48,"originalLine":33,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":27,"generatedColumn":65,"originalLine":33,"originalColumn":16,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"expression","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":27,"generatedColumn":83,"originalLine":33,"originalColumn":35,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":27,"generatedColumn":88,"originalLine":34,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":27,"generatedColumn":93,"originalLine":34,"originalColumn":4,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":28,"generatedColumn":4,"originalLine":34,"originalColumn":4,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":28,"generatedColumn":4,"originalLine":34,"originalColumn":9,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":28,"generatedColumn":8,"originalLine":35,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":28,"generatedColumn":13,"originalLine":36,"originalColumn":3,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":29,"generatedColumn":4,"originalLine":36,"originalColumn":3,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"code","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":29,"generatedColumn":4,"originalLine":36,"originalColumn":10,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"},{"generatedLine":29,"generatedColumn":8,"originalLine":37,"originalColumn":1,"source":"generators/server/Meta.Thing/ext.store.selected.njs.js","name":"text","content":"<#@ noContent #>\n<#\nlet $namespace=\"\";\nlet nsa = [];\nfor(let i = 0; i < context.normalizedName.length-1;i++){\n  nsa.push(context.normalizedName[i]);\n}\nconst config = context.getThingConfig(context)\n\n$namespace = nsa.join(\".\");\nlet name = context.normalizedName[context.normalizedName.length-1];\n#>\nExt.define('Modeleditor.store.#{$namespace}.Selected.#{name}', {\n  serverModel: '#{context.$normalizedName}',\n  requires:['Modeleditor.model.#{$namespace}.#{name}'],\n  extend: 'Ext.data.LoggedStore',\n  model: 'Modeleditor.model.#{$namespace}.#{name}',\n  staticStore:#{context.staticStore},\n  autoLoad:false,\n  autoSync:false,\n  remoteFilter:true,\n  remoteSort:true,\n  pageSize: #{config.pageSizeEmbedded},\n  proxy: Grainjs.metadata['model.#{context.$namespace}.#{context.$name}'].proxy(),\n  data:[],  <#\n  if(context.sortProperty && context.sortProperty.length > 0){#>\n  sorters: [<#\n  for (let i = 0, len = context.sortProperty.length; i < len; i++) {\n    let sortPr = context.sortProperty[i];\n    if(i > 0){#>, <#}\n  #>{\n    property:'#{sortPr.property}',\n    direction:'#{sortPr.direction}'\n  }<#}#>\n  ]\n  <#- }#>\n});"}]}}