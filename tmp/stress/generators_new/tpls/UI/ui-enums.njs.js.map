{"version":3,"sources":["generators_new/tpls/UI/ui-enums.njs.js"],"names":["text","code","expression"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAwBA,IACCA,IACGA,IAC3BA,IACAC;AAJD,IAICA,AAA6CD,IAC7CA,8CACAA,6CACAA,IACAA,gCACAA,cACAA,MAAIE,YAAaF,OACjBC;AAXD,IAWCA,AAAiCD,IACjCA,QAAME,WAAYF,KAAGE,uCAAwCF,MAC7DC;AAbD,IAaCA,AAAMD,IACNA,UACAA,QACAA,MACAA,IACAA,qBACAC;AAnBD,IAmBCA,AAAiCD,IACjCA,WAASE,WAAYF,kBAAgBE,YAAaF,GAACE,WAAYF,QAC/DC;AArBD,IAqBCA,AAAMD,IACNA,MACAA,8BACAA,yCACAA,cACAA,wBACAA,oBACAA,2BACAA,UACAA,QACAA,KACAA,IACAA,IACAA,IACAA,8BACAA,yCACAA,8DACAA,OACAA,IACAA,oBACAA,YACAA,YACAA,cACAA;AA5CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"generators_new/tpls/UI/ui-enums.njs.js","sourceRoot":"/Users/vedmalex/work/fte2/demo","sourcesContent":["<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"],"template":{"version":"1.0.0","segments":[{"generatedLine":1,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":2,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":3,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":4,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":5,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":6,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":7,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":8,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":9,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":10,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":11,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":12,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":13,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":14,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":15,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":16,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":17,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":18,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":19,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":20,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":21,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":22,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":23,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":24,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":25,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":26,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":27,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":28,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":29,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":30,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":31,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":32,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":33,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":34,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":35,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":36,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":37,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":38,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":39,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":40,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":41,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":42,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":43,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":44,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":45,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":46,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":47,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":48,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":49,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":50,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":51,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":52,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":53,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":54,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":55,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":56,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":57,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":58,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":59,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":60,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":61,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":62,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":63,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":64,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":65,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":66,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":67,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":68,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":69,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":70,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":71,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":72,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":73,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":74,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":75,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":76,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":77,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":78,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":79,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":80,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":81,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":82,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":83,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":84,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":85,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":86,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":87,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":88,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":89,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":90,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":91,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":92,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":93,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":94,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":95,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":96,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":97,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":98,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":99,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":100,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":101,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":102,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":103,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":104,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":105,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":106,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":107,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":108,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":109,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":110,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":111,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":112,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":113,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":114,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":115,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":116,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":117,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":118,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":119,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":120,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":121,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":122,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":123,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":124,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":125,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":126,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/ui-enums.njs.js"},{"generatedLine":50,"generatedColumn":4,"originalLine":1,"originalColumn":24,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":50,"generatedColumn":8,"originalLine":2,"originalColumn":25,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":50,"generatedColumn":12,"originalLine":3,"originalColumn":28,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":50,"generatedColumn":16,"originalLine":4,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":50,"generatedColumn":20,"originalLine":5,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"code","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":51,"generatedColumn":4,"originalLine":5,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"code","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":51,"generatedColumn":4,"originalLine":5,"originalColumn":46,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":51,"generatedColumn":8,"originalLine":6,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":51,"generatedColumn":54,"originalLine":7,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":51,"generatedColumn":99,"originalLine":8,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":51,"generatedColumn":103,"originalLine":9,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":51,"generatedColumn":135,"originalLine":10,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":51,"generatedColumn":149,"originalLine":11,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":51,"generatedColumn":155,"originalLine":11,"originalColumn":5,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"expression","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":51,"generatedColumn":167,"originalLine":11,"originalColumn":18,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":51,"generatedColumn":174,"originalLine":12,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"code","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":52,"generatedColumn":4,"originalLine":12,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"code","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":52,"generatedColumn":4,"originalLine":12,"originalColumn":34,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":52,"generatedColumn":8,"originalLine":13,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":52,"generatedColumn":16,"originalLine":13,"originalColumn":7,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"expression","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":52,"generatedColumn":27,"originalLine":13,"originalColumn":19,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":52,"generatedColumn":32,"originalLine":13,"originalColumn":22,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"expression","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":52,"generatedColumn":71,"originalLine":13,"originalColumn":62,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":52,"generatedColumn":77,"originalLine":14,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"code","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":53,"generatedColumn":4,"originalLine":14,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"code","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":53,"generatedColumn":4,"originalLine":14,"originalColumn":7,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":53,"generatedColumn":8,"originalLine":15,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":53,"generatedColumn":18,"originalLine":16,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":53,"generatedColumn":26,"originalLine":17,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":53,"generatedColumn":32,"originalLine":18,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":53,"generatedColumn":36,"originalLine":19,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":53,"generatedColumn":57,"originalLine":20,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"code","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":54,"generatedColumn":4,"originalLine":20,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"code","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":54,"generatedColumn":4,"originalLine":20,"originalColumn":34,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":54,"generatedColumn":8,"originalLine":21,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":54,"generatedColumn":19,"originalLine":21,"originalColumn":10,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"expression","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":54,"generatedColumn":30,"originalLine":21,"originalColumn":22,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":54,"generatedColumn":48,"originalLine":21,"originalColumn":38,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"expression","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":54,"generatedColumn":60,"originalLine":21,"originalColumn":51,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":54,"generatedColumn":63,"originalLine":21,"originalColumn":52,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"expression","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":54,"generatedColumn":74,"originalLine":21,"originalColumn":64,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":54,"generatedColumn":82,"originalLine":22,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"code","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":4,"originalLine":22,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"code","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":4,"originalLine":22,"originalColumn":7,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":8,"originalLine":23,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":14,"originalLine":24,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":44,"originalLine":25,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":85,"originalLine":26,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":99,"originalLine":27,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":123,"originalLine":28,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":143,"originalLine":29,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":170,"originalLine":30,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":180,"originalLine":31,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":188,"originalLine":32,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":193,"originalLine":33,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":197,"originalLine":34,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":201,"originalLine":35,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":205,"originalLine":36,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":235,"originalLine":37,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":276,"originalLine":38,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":338,"originalLine":39,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":345,"originalLine":40,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":349,"originalLine":41,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":369,"originalLine":42,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":381,"originalLine":43,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":393,"originalLine":44,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"},{"generatedLine":55,"generatedColumn":407,"originalLine":45,"originalColumn":1,"source":"generators_new/tpls/UI/ui-enums.njs.js","name":"text","content":"<#@ context \"_enum\" -#>\n<#@ alias \"ui-enums\" -#>\n<#@ chunks \"$$$main$$$\" -#>\n\n<#- chunkStart(`${_enum.name}/index.js`); -#>\nimport React, { useContext } from 'react';\nimport { UIXContext } from '../contexts';\n\nexport const translation = {\n  enums: {\n    #{_enum.name}: {\n<# _enum.items.forEach(item=>{-#>\n      #{item.name}: '#{item.metadata?.UI?.title || item.name}',\n<#})#>\n    },\n  },\n};\n\nconst choices = [\n<# _enum.items.forEach(item=>{-#>\n  { id: '#{item.name}', name: 'enums.#{_enum.name}.#{item.name}' },\n<#})#>\n];\nconst Input = (props) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SelectInput\n      {...props}\n      choices={choices}\n    />\n  );\n}\n\n\n\nconst Field = (props) => {\n  const uix = useContext(UIXContext);\n  return (<uix.SelectField {...props} choices={choices}/>)\n  }\n\nexport default {\n  Input,\n  Field,\n  choices,\n};\n"}]}}