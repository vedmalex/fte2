{"version":3,"sources":["generators_new/tpls/UI/forms/grid.njs.js"],"names":["text","expression"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAyBA,IACEA,IAC1BA,IACAA,gDACAA,6CACAA,gEACAA,IACAA,2CACAA,qCACAA,yCACAA,2DACAA,mCACAA,iDACAA,aACAA,wBACAA,gBACAA,oBACAA,yCACAA,4EACAA,2EACAA,gCACAA,eAAaC,aAAcD,cAC3BA,qBACAA,eAAaC,aAAcD,cAC3BA,eAAaC,aAAcD,aAC3BA,IACAA,uBAAqBC,aAAcD,aACnCA,IACAA,cACAA,eACAA,oBACAA,0EACAA,UACAA,QACAA,KACAA,IACAA;AApCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"generators_new/tpls/UI/forms/grid.njs.js","sourceRoot":"/Users/vedmalex/work/fte2/demo","sourcesContent":["<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"],"template":{"version":"1.0.0","segments":[{"generatedLine":1,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":2,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":3,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":4,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":5,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":6,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":7,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":8,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":9,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":10,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":11,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":12,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":13,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":14,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":15,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":16,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":17,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":18,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":19,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":20,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":21,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":22,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":23,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":24,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":25,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":26,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":27,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":28,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":29,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":30,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":31,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":32,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":33,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":34,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":35,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":36,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":37,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":38,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":39,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":40,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":41,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":42,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":43,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":44,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":45,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":46,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":47,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":48,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":49,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":50,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":51,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":52,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":53,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":54,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":55,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":56,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":57,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":58,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid.njs.js"},{"generatedLine":12,"generatedColumn":4,"originalLine":1,"originalColumn":25,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":8,"originalLine":2,"originalColumn":27,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":12,"originalLine":3,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":16,"originalLine":4,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":64,"originalLine":5,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":109,"originalLine":6,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":173,"originalLine":7,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":177,"originalLine":8,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":220,"originalLine":9,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":257,"originalLine":10,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":298,"originalLine":11,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":357,"originalLine":12,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":392,"originalLine":13,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":441,"originalLine":14,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":454,"originalLine":15,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":478,"originalLine":16,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":494,"originalLine":17,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":514,"originalLine":18,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":555,"originalLine":19,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":631,"originalLine":20,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":706,"originalLine":21,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":738,"originalLine":22,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":753,"originalLine":22,"originalColumn":14,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":766,"originalLine":22,"originalColumn":28,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":780,"originalLine":23,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":801,"originalLine":24,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":816,"originalLine":24,"originalColumn":14,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":829,"originalLine":24,"originalColumn":28,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":843,"originalLine":25,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":858,"originalLine":25,"originalColumn":14,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":871,"originalLine":25,"originalColumn":28,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":884,"originalLine":26,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":888,"originalLine":27,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":911,"originalLine":27,"originalColumn":22,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":924,"originalLine":27,"originalColumn":36,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":937,"originalLine":28,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":941,"originalLine":29,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":955,"originalLine":30,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":970,"originalLine":31,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":990,"originalLine":32,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":1064,"originalLine":33,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":1074,"originalLine":34,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":1082,"originalLine":35,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":1087,"originalLine":36,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":1091,"originalLine":37,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Grid = ({fields, ...props}) =>  {\n  const { filterValues } = props;\n  const filteredFields = filterValues\n    ? Object.keys(filterValues).reduce((list, fld) => {\n        if (fld.match(/-eq/)) {\n          list.push(`!${fld.split('-')[0]}`);\n        }\n        return list;\n      }, [])\n    : undefined;\n  const uix = useContext(UIXContext);\n  const isXSmall = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  // const Result = isXSmall\n  //   ? uix.#{entity.name}.ListView \n  //   : isSmall \n  //   ? uix.#{entity.name}.CardView \n  //   : uix.#{entity.name}.GridView\n\n  const Result = uix.#{entity.name}.GridView\n\n  return (\n    <Result\n      {...props}\n      fields={fields ? fields.concat(filteredFields) : filteredFields}\n    />\n  );\n}\n\nexport default Grid;"}]}}