{"version":3,"sources":["generators_new/tpls/UI/forms/index.njs.js"],"names":["text","expression"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAyBA,IACGA,IAC3BA,IACAA,8CACAA,gEACAA,iCACAA,4DACAA,mCACAA,oDACAA,YACAA,uBACAA,qBACAA,uBACAA,qBACAA,qBACAA,qBACAA,iBACAA,iBACAA,qBACAA,+BACAA,+BACAA,uCACAA,uCACAA,uCACAA,qCACAA,6CACAA,IACAA,6BACAA,yCACAA,2EACAA,iCAA+BC,aAAcD,wBAAsBC,aAAcD,mBACjFA,cACAA,6BACAA,QACAA,KACAA,IACAA,6BACAA,yCACAA,2EACAA,iCAA+BC,aAAcD,wBAAsBC,aAAcD,mBACjFA,cACAA,6BACAA,QACAA,KACAA,IACAA,+BACAA,yCACAA,2EACAA,iCAA+BC,aAAcD,0BAAwBC,aAAcD,qBACnFA,cACAA,6BACAA,OACAA,IACAA,oBACAA,WAASC,aAAcD,MACvBA,YACAA,kBACAA,gBACAA,aACAA,WACAA,aACAA,WACAA,WACAA,iBACAA,iBACAA,uBACAA,uBACAA,qBACAA,qBACAA,qBACAA,qBACAA,cACAA,WACAA,eACAA,eACAA,eACAA,iBACAA,iBACAA;AA9ED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"generators_new/tpls/UI/forms/index.njs.js","sourceRoot":"/Users/vedmalex/work/fte2/demo","sourcesContent":["<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"],"template":{"version":"1.0.0","segments":[{"generatedLine":1,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":2,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":3,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":4,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":5,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":6,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":7,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":8,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":9,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":10,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":11,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":12,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":13,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":14,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":15,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":16,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":17,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":18,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":19,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":20,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":21,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":22,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":23,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":24,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":25,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":26,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":27,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":28,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":29,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":30,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":31,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":32,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":33,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":34,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":35,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":36,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":37,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":38,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":39,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":40,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":41,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":42,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":43,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":44,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":45,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":46,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":47,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":48,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":49,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":50,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":51,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":52,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":53,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":54,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":55,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":56,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":57,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":58,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":59,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":60,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":61,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":62,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":63,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":64,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":65,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":66,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":67,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":68,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":69,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":70,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":71,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":72,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":73,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":74,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":75,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":76,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":77,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":78,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":79,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":80,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":81,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":82,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":83,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":84,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":85,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":86,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":87,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":88,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":89,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":90,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":91,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":92,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":93,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":94,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":95,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":96,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":97,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":98,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":99,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":100,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/index.njs.js"},{"generatedLine":12,"generatedColumn":4,"originalLine":1,"originalColumn":25,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":8,"originalLine":2,"originalColumn":28,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":12,"originalLine":3,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":16,"originalLine":4,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":62,"originalLine":5,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":126,"originalLine":6,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":159,"originalLine":7,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":219,"originalLine":8,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":254,"originalLine":9,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":306,"originalLine":10,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":318,"originalLine":11,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":341,"originalLine":12,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":362,"originalLine":13,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":385,"originalLine":14,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":406,"originalLine":15,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":427,"originalLine":16,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":448,"originalLine":17,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":465,"originalLine":18,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":482,"originalLine":19,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":503,"originalLine":20,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":534,"originalLine":21,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":565,"originalLine":22,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":604,"originalLine":23,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":643,"originalLine":24,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":682,"originalLine":25,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":719,"originalLine":26,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":764,"originalLine":27,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":768,"originalLine":28,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":797,"originalLine":29,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":838,"originalLine":30,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":913,"originalLine":31,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":946,"originalLine":31,"originalColumn":32,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":959,"originalLine":31,"originalColumn":46,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":983,"originalLine":31,"originalColumn":68,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":996,"originalLine":31,"originalColumn":82,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1015,"originalLine":32,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1029,"originalLine":33,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1058,"originalLine":34,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1066,"originalLine":35,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1071,"originalLine":36,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1075,"originalLine":37,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1104,"originalLine":38,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1145,"originalLine":39,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1220,"originalLine":40,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1253,"originalLine":40,"originalColumn":32,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1266,"originalLine":40,"originalColumn":46,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1290,"originalLine":40,"originalColumn":68,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1303,"originalLine":40,"originalColumn":82,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1322,"originalLine":41,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1336,"originalLine":42,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1365,"originalLine":43,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1373,"originalLine":44,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1378,"originalLine":45,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1382,"originalLine":46,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1413,"originalLine":47,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1454,"originalLine":48,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1529,"originalLine":49,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1562,"originalLine":49,"originalColumn":32,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1575,"originalLine":49,"originalColumn":46,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1601,"originalLine":49,"originalColumn":70,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1614,"originalLine":49,"originalColumn":84,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1635,"originalLine":50,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1649,"originalLine":51,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1678,"originalLine":52,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1685,"originalLine":53,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1689,"originalLine":54,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1709,"originalLine":55,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1720,"originalLine":55,"originalColumn":10,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1733,"originalLine":55,"originalColumn":24,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1739,"originalLine":56,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1751,"originalLine":57,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1769,"originalLine":58,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1785,"originalLine":59,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1798,"originalLine":60,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1809,"originalLine":61,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1822,"originalLine":62,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1833,"originalLine":63,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1844,"originalLine":64,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1861,"originalLine":65,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1878,"originalLine":66,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1901,"originalLine":67,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1924,"originalLine":68,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1945,"originalLine":69,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1966,"originalLine":70,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":1987,"originalLine":71,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":2008,"originalLine":72,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":2022,"originalLine":73,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":2033,"originalLine":74,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":2048,"originalLine":75,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":2063,"originalLine":76,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":2078,"originalLine":77,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":2095,"originalLine":78,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"},{"generatedLine":12,"generatedColumn":2112,"originalLine":79,"originalColumn":1,"source":"generators_new/tpls/UI/forms/index.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-index' -#>\n\nimport React, { useContext } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Title  from './title';\nimport SelectTitle, { inputText }  from './selectTitle';\nimport Filter  from './filter';\nimport { buttons, actions }  from './fragments';\nimport {\n  CreateFormSimple,\n  EditFormSimple,\n  CreateFormTabbed,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  TabbedForm,\n  SimpleForm,\n}  from './form';\nimport List  from './list';\nimport Grid  from './grid';\nimport CardView  from './cardView';\nimport GridView  from './gridView';\nimport ListView  from './listView';\nimport Preview  from './preview';\nimport { UIXContext } from '../contexts';\n\nconst Show = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.ShowSimpleView : uix.#{entity.name}.ShowTabbedView\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Edit = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.EditFormSimple : uix.#{entity.name}.EditFormTabbed\n  return (\n    <Result {...props} />\n  );\n}\n\nconst Create = (props) => {\n  const uix = useContext(UIXContext);\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const Result = isSmall ? uix.#{entity.name}.CreateFormSimple : uix.#{entity.name}.CreateFormTabbed\n  return (\n    <Result {...props} />\n);}\n\nexport default {\n  name: '#{entity.name}',\n  Title,\n  SelectTitle,\n  inputText,\n  Filter,\n  List,\n  Create,\n  Edit,\n  Show,\n  TabbedForm,\n  SimpleForm,\n  CreateFormSimple,\n  CreateFormTabbed,\n  EditFormSimple,\n  EditFormTabbed,\n  ShowSimpleView,\n  ShowTabbedView,\n  Preview,\n  Grid,\n  CardView,\n  GridView,\n  ListView,\n  ...buttons,\n  ...actions,\n};"}]}}