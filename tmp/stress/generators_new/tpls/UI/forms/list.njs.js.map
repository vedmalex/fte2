{"version":3,"sources":["generators_new/tpls/UI/forms/list.njs.js"],"names":["code","text","expression"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAECA;AAFD,IAECA,AAAkFC,IAClFD;AAHD,IAGCA,AAAkFC,IAClFA,8DACAA,6CACAA,YACAA,mBACAA,iBACAA,mBACAA,2BACAA,yBACAA,IACAD;AAbD,IAaCA,AAAgCC,IAChCA,IACAA,QAAMC,aAAcD,gCACpBA,yCACAA,uCACAA,IACAA,cACAA,sBACAD;AArBD,IAqBCA,AAAmCC,IACnCA,WAASC,aAAcD,GAACC,iBAAkBD,kBAC1CD;AAvBD,IAuBCA,AAAMC,IACNA,kDACAA,2CACAA,uBACAA,OACAA,IACAD;AA7BD,IA6BCA,AAAKC,IACLA,IACAA,iCACAA,yCACAA,uCACAA,cACAA,0BACAA,kBAAgBC,aAAcD,eAC9BA,+DACAA,iCAA8BC,aAAcD,gCAC5CD;AAvCD,IAuCCA,AAA+BC,IAC/BA,wBAAsBC,aAAcD,qBACpCD;AAzCD,IAyCCA,AAAKC,IACLA,OACAA,WAASC,aAAcD,YACvBA,iBACAA,OACAA,IACAA,4BACAA,IACAA,0BACAA,kBACAA,gBACAA,eACAA,cACAA,uBACAA,0EACAA,mBACAA,sBACAA,kEACAA,eACAA,kBACAA,sBACAA,iBACAA,iBACAA,YACAA,kBACAA,aACAA,WACAA,yCACAA,cACAA,2EACAA,qBACAA,mCACAA,uBACAA,yBACAA,+BACAA,2BACAA,gCACAA,eACAA,aAAWC,aAAcD,iBACzBA,qBACAA,sCACAA,+BACAA,YACAA,uBACAA,kCACAA,+BACAA,8BACAA,4DACAA,+BACAA,mCACAA,YACAA,qBACAA,QACAA,MACAA,IACAA,gCACAA,sBACAA,kCACAA;AAnfile":"generators_new/tpls/UI/forms/list.njs.js","sourceRoot":"/Users/vedmalex/work/fte2/demo","sourcesContent":["<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"],"template":{"version":"1.0.0","segments":[{"generatedLine":1,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":2,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":3,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":4,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":5,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":6,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":7,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":8,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":9,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":10,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":11,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":12,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":13,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":14,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":15,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":16,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":17,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":18,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":19,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":20,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":21,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":22,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":23,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":24,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":25,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":26,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":27,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":28,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":29,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":30,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":31,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":32,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":33,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":34,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":35,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":36,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":37,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":38,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":39,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":40,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":41,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":42,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":43,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":44,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":45,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":46,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":47,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":48,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":49,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":50,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":51,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":52,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":53,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":54,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":55,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":56,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":57,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":58,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":59,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":60,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":61,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":62,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":63,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":64,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":65,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":66,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":67,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":68,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":69,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":70,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":71,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":72,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":73,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":74,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":75,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":76,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":77,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":78,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":79,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":80,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":81,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":82,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":83,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":84,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":85,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":86,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":87,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":88,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":89,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":90,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":91,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":92,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":93,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":94,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":95,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":96,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":97,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":98,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":99,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":100,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":101,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":102,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":103,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":104,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":105,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":106,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":107,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":108,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":109,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":110,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":111,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":112,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":113,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":114,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":115,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":116,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":117,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":118,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":119,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":120,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":121,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":122,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":123,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":124,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":125,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":126,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":127,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/list.njs.js"},{"generatedLine":12,"generatedColumn":4,"originalLine":3,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":13,"generatedColumn":4,"originalLine":3,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":13,"generatedColumn":4,"originalLine":3,"originalColumn":83,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":13,"generatedColumn":8,"originalLine":4,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":14,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":14,"generatedColumn":4,"originalLine":4,"originalColumn":83,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":14,"generatedColumn":8,"originalLine":5,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":14,"generatedColumn":70,"originalLine":6,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":14,"generatedColumn":115,"originalLine":7,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":14,"generatedColumn":127,"originalLine":8,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":14,"generatedColumn":146,"originalLine":9,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":14,"generatedColumn":163,"originalLine":10,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":14,"generatedColumn":182,"originalLine":11,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":14,"generatedColumn":209,"originalLine":12,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":14,"generatedColumn":234,"originalLine":13,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":14,"generatedColumn":238,"originalLine":14,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":15,"generatedColumn":4,"originalLine":14,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":15,"generatedColumn":4,"originalLine":14,"originalColumn":33,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":15,"generatedColumn":8,"originalLine":15,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":15,"generatedColumn":12,"originalLine":16,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":15,"generatedColumn":20,"originalLine":16,"originalColumn":7,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":15,"generatedColumn":33,"originalLine":16,"originalColumn":21,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":15,"generatedColumn":65,"originalLine":17,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":15,"generatedColumn":106,"originalLine":18,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":15,"generatedColumn":145,"originalLine":19,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":15,"generatedColumn":149,"originalLine":20,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":15,"generatedColumn":163,"originalLine":21,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":15,"generatedColumn":185,"originalLine":22,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":16,"generatedColumn":4,"originalLine":22,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":16,"generatedColumn":4,"originalLine":22,"originalColumn":36,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":16,"generatedColumn":8,"originalLine":23,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":16,"generatedColumn":19,"originalLine":23,"originalColumn":10,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":16,"generatedColumn":32,"originalLine":23,"originalColumn":24,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":16,"generatedColumn":35,"originalLine":23,"originalColumn":25,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":16,"generatedColumn":52,"originalLine":23,"originalColumn":43,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":16,"generatedColumn":70,"originalLine":24,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":17,"generatedColumn":4,"originalLine":24,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":17,"generatedColumn":4,"originalLine":24,"originalColumn":7,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":17,"generatedColumn":8,"originalLine":25,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":17,"generatedColumn":58,"originalLine":26,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":17,"generatedColumn":101,"originalLine":27,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":17,"generatedColumn":124,"originalLine":28,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":17,"generatedColumn":131,"originalLine":29,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":17,"generatedColumn":135,"originalLine":30,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":18,"generatedColumn":4,"originalLine":30,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":18,"generatedColumn":4,"originalLine":30,"originalColumn":6,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":18,"generatedColumn":8,"originalLine":31,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":18,"generatedColumn":12,"originalLine":32,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":18,"generatedColumn":45,"originalLine":33,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":18,"generatedColumn":86,"originalLine":34,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":18,"generatedColumn":125,"originalLine":35,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":18,"generatedColumn":139,"originalLine":36,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":18,"generatedColumn":165,"originalLine":37,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":18,"generatedColumn":183,"originalLine":37,"originalColumn":17,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":18,"generatedColumn":196,"originalLine":37,"originalColumn":31,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":18,"generatedColumn":211,"originalLine":38,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":18,"generatedColumn":274,"originalLine":39,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":18,"generatedColumn":307,"originalLine":39,"originalColumn":31,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":18,"generatedColumn":320,"originalLine":39,"originalColumn":45,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":18,"generatedColumn":352,"originalLine":40,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":19,"generatedColumn":4,"originalLine":40,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":19,"generatedColumn":4,"originalLine":40,"originalColumn":32,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":19,"generatedColumn":8,"originalLine":41,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":19,"generatedColumn":32,"originalLine":41,"originalColumn":23,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":19,"generatedColumn":45,"originalLine":41,"originalColumn":37,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":19,"generatedColumn":66,"originalLine":42,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":4,"originalLine":42,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":4,"originalLine":42,"originalColumn":6,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":8,"originalLine":43,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":15,"originalLine":44,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":26,"originalLine":44,"originalColumn":10,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":39,"originalLine":44,"originalColumn":24,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":51,"originalLine":45,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":68,"originalLine":46,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":75,"originalLine":47,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":79,"originalLine":48,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":107,"originalLine":49,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":111,"originalLine":50,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":137,"originalLine":51,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":155,"originalLine":52,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":171,"originalLine":53,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":186,"originalLine":54,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":200,"originalLine":55,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":223,"originalLine":56,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":297,"originalLine":57,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":316,"originalLine":58,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":338,"originalLine":59,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":404,"originalLine":60,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":419,"originalLine":61,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":437,"originalLine":62,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":459,"originalLine":63,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":476,"originalLine":64,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":493,"originalLine":65,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":505,"originalLine":66,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":523,"originalLine":67,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":536,"originalLine":68,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":547,"originalLine":69,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":588,"originalLine":70,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":602,"originalLine":71,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":677,"originalLine":72,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":698,"originalLine":73,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":733,"originalLine":74,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":756,"originalLine":75,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":781,"originalLine":76,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":812,"originalLine":77,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":839,"originalLine":78,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":871,"originalLine":79,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":886,"originalLine":80,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":899,"originalLine":80,"originalColumn":12,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":912,"originalLine":80,"originalColumn":26,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":929,"originalLine":81,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":950,"originalLine":82,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":988,"originalLine":83,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":1019,"originalLine":84,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":1031,"originalLine":85,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":1054,"originalLine":86,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":1088,"originalLine":87,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":1119,"originalLine":88,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":1149,"originalLine":89,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":1209,"originalLine":90,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":1240,"originalLine":91,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":1275,"originalLine":92,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":1287,"originalLine":93,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":1308,"originalLine":94,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":1316,"originalLine":95,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":1322,"originalLine":96,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":1326,"originalLine":97,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":1358,"originalLine":98,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":1380,"originalLine":99,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"},{"generatedLine":20,"generatedColumn":1414,"originalLine":100,"originalColumn":1,"source":"generators_new/tpls/UI/forms/list.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-list' -#>\n<#- const listActions = entity.actions.filter(a=> a.actionType==='listAction') -#>\n<#- const itemActions = entity.actions.filter(a=> a.actionType==='itemAction') -#>\nimport React, { useContext, cloneElement } from \"react\";\nimport { UIXContext } from '../contexts';\nimport {\n  useTranslate,\n  TopToolbar,\n  ExportButton,\n  sanitizeListRestProps\n} from 'react-admin';\n\n<# if(listActions.length > 0){#>\n\nconst #{entity.name}ActionButtons = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n\n  return (\n  <React.Fragment>\n<#listActions.forEach(action => {#>\n    <uix.#{entity.name}.#{action.fullName} {...props} />\n<#})#>\n    {/* Add the default bulk delete action */}\n    <uix.BulkDeleteButton {...props} />\n  </React.Fragment>\n);}\n\n<#}#>\n\nconst ListView = (props) => {\n  const uix = useContext(UIXContext);\n  const translate = useTranslate();\n  return (\n  <uix.List {...props}\n  filters={<uix.#{entity.name}.Filter />}\n  actions={<ListActions permissions={props.permissions} />}\n  title={translate(\"resources.#{entity.name}.name\", { smart_count:2 })}\n<#if(listActions.length > 0){#>\n  bulkActionButtons={<#{entity.name}ActionButtons />}\n<#}#>\n  >\n    <uix.#{entity.name}.Grid />\n  </uix.List>\n);}\n\nexport default ListView;\n\nconst ListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  permissions,\n  ...rest\n}) => {\n  const uix = useContext(UIXContext);\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button',\n        })}\n      <uix.#{entity.name}.CreateButton\n        {...rest}\n        label=\"ra.action.create\"\n        resource={resource}\n      />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n"}]}}