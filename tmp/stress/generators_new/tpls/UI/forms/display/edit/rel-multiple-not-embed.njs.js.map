{"version":3,"sources":["generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"],"names":["text","code","expression"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAsBA,IAC8BA,IACnDC;AAFD,IAECA,AACAA;AAHD,IAGCA,AACAA;AAJD,IAICA,AAAGD,IACHA,0BACAA,mCACAA,sCACAA,QAAMC;AARP,IAQOA,AAAuBD,IAC7BA,0CAAuCE,gCAAiCF,UAAQE,QAASF,SACzFA,QAAMC;AAVP,IAUOA,AAAKD,IACXA,kCACAA,qBACAA,4BAAyBE,gCAAiCF,UAAQE,QAASF,MAC3EA,mBAAiBE,QAASA,iBAAkBF,MAC5CA,UAAQC;AAfT,IAeSA,AAAuBD,IAC/BA,kBAAgBE,6CAA8CF,KAC9DA,sBAAmBE,6CAA8CF,MACjEA,UAAQC;AAlBT,IAkBSA,AAAsBD,YAAUC;AAlBzC,IAkByCA,AAAaD,IACrDA,mCAAiCC;AAnBlC,IAmBkCA,AAAKD,IACtCA,WACAA,MAAIC;AArBL,IAqBKA,AAA4BD,IAChCA,oDAAkDE,cAAeF,mBACjEA,MAAIC;AAvBL,IAuBKA,AAAaD,IACjBA,+CAA6CE,cAAeF,uBAC5DA,MAAIC;AAzBL,IAyBKA,AAAMD,IACVA,oCACAA,aAAWE,cAAeF,0BAAwBE,gBAAiBF,uBAAoBE,gCAAiCF,WAASE,QAASF,SAC1IA,cACAA,QACAA;AA9BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","sourceRoot":"/Users/vedmalex/work/fte2/demo","sourcesContent":["<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"],"template":{"version":"1.0.0","segments":[{"generatedLine":1,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":2,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":3,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":4,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":5,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":6,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":7,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":8,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":9,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":10,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":11,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":12,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":13,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":14,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":15,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":16,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":17,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":18,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":19,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":20,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":21,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":22,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":23,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":24,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":25,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":26,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":27,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":28,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":29,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":30,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":31,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":32,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":33,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":34,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":35,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":36,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":37,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":38,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":39,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":40,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":41,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":42,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":43,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":44,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":45,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":46,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":47,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":48,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":49,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":50,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":51,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":52,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":53,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":54,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":55,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":56,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":57,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":58,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":59,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":60,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":61,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":62,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":63,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":64,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":65,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":66,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":67,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":68,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":69,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":70,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":71,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js"},{"generatedLine":12,"generatedColumn":4,"originalLine":1,"originalColumn":22,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":12,"generatedColumn":8,"originalLine":2,"originalColumn":52,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":12,"generatedColumn":12,"originalLine":3,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":13,"generatedColumn":4,"originalLine":3,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":13,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":14,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":14,"generatedColumn":4,"originalLine":5,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":15,"generatedColumn":4,"originalLine":5,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":15,"generatedColumn":4,"originalLine":5,"originalColumn":4,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":15,"generatedColumn":8,"originalLine":6,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":15,"generatedColumn":34,"originalLine":7,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":15,"generatedColumn":69,"originalLine":8,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":15,"generatedColumn":107,"originalLine":9,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":15,"generatedColumn":115,"originalLine":9,"originalColumn":7,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":16,"generatedColumn":4,"originalLine":9,"originalColumn":7,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":16,"generatedColumn":4,"originalLine":9,"originalColumn":30,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":16,"generatedColumn":8,"originalLine":10,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":16,"generatedColumn":50,"originalLine":10,"originalColumn":40,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":16,"generatedColumn":82,"originalLine":10,"originalColumn":73,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":16,"generatedColumn":92,"originalLine":10,"originalColumn":81,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":16,"generatedColumn":100,"originalLine":10,"originalColumn":90,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":16,"generatedColumn":109,"originalLine":11,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":16,"generatedColumn":117,"originalLine":11,"originalColumn":7,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":17,"generatedColumn":4,"originalLine":11,"originalColumn":7,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":17,"generatedColumn":4,"originalLine":11,"originalColumn":12,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":17,"generatedColumn":8,"originalLine":12,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":17,"generatedColumn":42,"originalLine":13,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":17,"generatedColumn":63,"originalLine":14,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":17,"generatedColumn":91,"originalLine":14,"originalColumn":26,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":17,"generatedColumn":123,"originalLine":14,"originalColumn":59,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":17,"generatedColumn":133,"originalLine":14,"originalColumn":67,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":17,"generatedColumn":141,"originalLine":14,"originalColumn":76,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":17,"generatedColumn":147,"originalLine":15,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":17,"generatedColumn":166,"originalLine":15,"originalColumn":18,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":17,"generatedColumn":174,"originalLine":15,"originalColumn":27,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":17,"generatedColumn":191,"originalLine":15,"originalColumn":45,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":17,"generatedColumn":197,"originalLine":16,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":17,"generatedColumn":207,"originalLine":16,"originalColumn":9,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":18,"generatedColumn":4,"originalLine":16,"originalColumn":9,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":18,"generatedColumn":4,"originalLine":16,"originalColumn":32,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":18,"generatedColumn":8,"originalLine":17,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":18,"generatedColumn":26,"originalLine":17,"originalColumn":17,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":18,"generatedColumn":71,"originalLine":17,"originalColumn":63,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":18,"generatedColumn":76,"originalLine":18,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":18,"generatedColumn":98,"originalLine":18,"originalColumn":20,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":18,"generatedColumn":143,"originalLine":18,"originalColumn":66,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":18,"generatedColumn":149,"originalLine":19,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":18,"generatedColumn":159,"originalLine":19,"originalColumn":9,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":19,"generatedColumn":4,"originalLine":19,"originalColumn":9,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":19,"generatedColumn":4,"originalLine":19,"originalColumn":31,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":19,"generatedColumn":16,"originalLine":19,"originalColumn":41,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":20,"generatedColumn":4,"originalLine":19,"originalColumn":41,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":20,"generatedColumn":4,"originalLine":19,"originalColumn":54,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":20,"generatedColumn":8,"originalLine":20,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":20,"generatedColumn":43,"originalLine":20,"originalColumn":34,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":21,"generatedColumn":4,"originalLine":20,"originalColumn":34,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":21,"generatedColumn":4,"originalLine":20,"originalColumn":39,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":21,"generatedColumn":8,"originalLine":21,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":21,"generatedColumn":19,"originalLine":22,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":21,"generatedColumn":25,"originalLine":22,"originalColumn":5,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":22,"generatedColumn":4,"originalLine":22,"originalColumn":5,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":22,"generatedColumn":4,"originalLine":22,"originalColumn":33,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":22,"generatedColumn":8,"originalLine":23,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":22,"generatedColumn":60,"originalLine":23,"originalColumn":51,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":22,"generatedColumn":74,"originalLine":23,"originalColumn":66,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":22,"generatedColumn":93,"originalLine":24,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":22,"generatedColumn":99,"originalLine":24,"originalColumn":5,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":23,"generatedColumn":4,"originalLine":24,"originalColumn":5,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":23,"generatedColumn":4,"originalLine":24,"originalColumn":18,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":23,"generatedColumn":8,"originalLine":25,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":23,"generatedColumn":55,"originalLine":25,"originalColumn":46,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":23,"generatedColumn":69,"originalLine":25,"originalColumn":61,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":23,"generatedColumn":92,"originalLine":26,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":23,"generatedColumn":98,"originalLine":26,"originalColumn":5,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":24,"generatedColumn":4,"originalLine":26,"originalColumn":5,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":24,"generatedColumn":4,"originalLine":26,"originalColumn":11,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":24,"generatedColumn":8,"originalLine":27,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":24,"generatedColumn":44,"originalLine":28,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":24,"generatedColumn":57,"originalLine":28,"originalColumn":12,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":24,"generatedColumn":71,"originalLine":28,"originalColumn":27,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":24,"generatedColumn":97,"originalLine":28,"originalColumn":51,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":24,"generatedColumn":113,"originalLine":28,"originalColumn":68,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":24,"generatedColumn":136,"originalLine":28,"originalColumn":88,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":24,"generatedColumn":168,"originalLine":28,"originalColumn":121,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":24,"generatedColumn":179,"originalLine":28,"originalColumn":130,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":24,"generatedColumn":187,"originalLine":28,"originalColumn":139,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":24,"generatedColumn":196,"originalLine":29,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":24,"generatedColumn":210,"originalLine":30,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"},{"generatedLine":24,"generatedColumn":218,"originalLine":31,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.FormDataConsumer>\n  {({ formData, ...rest }) => (\n    <div style={{display:'flex'}}>\n      <# if(sectionLabel) {#>\n      <uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n      <#}#>\n      <uix.ReferenceArrayInput\n        {...rest}\n        label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n        source={`#{source}#{f.ref.backField}`}\n        <# const empty = '{}'#>\n        filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n        reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n        <# if (!f.required){#>allowEmpty<#} else {-#>\n        validate={uix.required()}<#}#>\n      >\n    <#if(f.ref.autocomplete){-#>\n      <uix.AutocompleteArrayInput optionText={uix.#{f.ref.entity}.inputText } />\n    <#} else {-#>\n      <uix.SelectArrayInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n    <#}-#>\n      </uix.ReferenceArrayInput>\n      <uix.#{f.ref.entity}.Add {...rest} target={'#{f.ref.opposite}'} label=\"resources.#{f.inheritedFrom || entity.name}.actions.#{f.name}\" />\n    </div>\n  )}\n</uix.FormDataConsumer>"}]}}