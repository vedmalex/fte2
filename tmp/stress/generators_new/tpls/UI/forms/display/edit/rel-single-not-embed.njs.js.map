{"version":3,"sources":["generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"],"names":["text","code","expression"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAsBA,IAC4BA,IACjDC;AAFD,IAECA,AACAA;AAHD,IAGCA,AACAA;AAJD,IAICA,AAAGD,IACHA,uBACAA,sBAAmBE,gCAAiCF,UAAQE,QAASF,MACrEA,aAAWE,QAASA,iBAAkBF,MACtCC;AARD,IAQCA,AAAgBD,IAChBA,2BAAwBE,gCAAiCF,WAASE,QAASF,MAC3EC;AAVD,IAUCA,AAAaD,IACbA,wBACAC;AAZD,IAYCA,AAAKD,IACLC;AAbD,IAaCA,AAAuBD,IACvBA,YAAUE,6CAA8CF,KACxDA,gBAAaE,6CAA8CF,MAC3DA,IAAEC;AAhBH,IAgBGA,AAAuBD,IACzBA,cAAYC;AAjBb,IAiBaA,AAAaD,IACzBA,6BAA2BC;AAlB5B,IAkB4BA,AAAKD,IAChCA,KACAA,IAAEC;AApBH,IAoBGA,AAA4BD,IAC9BA,6CAA2CE,cAAeF,kBAC1DA,IAAEC;AAtBH,IAsBGA,AAAaD,IACfA,wCAAsCE,cAAeF,uBACrDA,IAAEC;AAxBH,IAwBGA,AAAMD,IACRA;AAzBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","sourceRoot":"/Users/vedmalex/work/fte2/demo","sourcesContent":["<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"],"template":{"version":"1.0.0","segments":[{"generatedLine":1,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":2,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":3,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":4,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":5,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":6,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":7,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":8,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":9,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":10,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":11,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":12,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":13,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":14,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":15,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":16,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":17,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":18,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":19,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":20,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":21,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":22,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":23,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":24,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":25,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":26,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":27,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":28,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":29,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":30,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":31,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":32,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":33,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":34,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":35,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":36,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":37,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":38,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":39,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":40,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":41,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":42,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":43,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":44,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":45,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":46,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":47,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":48,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":49,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":50,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":51,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":52,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":53,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":54,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":55,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":56,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":57,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":58,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":59,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":60,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":61,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":62,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":63,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":64,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js"},{"generatedLine":12,"generatedColumn":4,"originalLine":1,"originalColumn":22,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":12,"generatedColumn":8,"originalLine":2,"originalColumn":50,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":12,"generatedColumn":12,"originalLine":3,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":13,"generatedColumn":4,"originalLine":3,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":13,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":14,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":14,"generatedColumn":4,"originalLine":5,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":15,"generatedColumn":4,"originalLine":5,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":15,"generatedColumn":4,"originalLine":5,"originalColumn":4,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":15,"generatedColumn":8,"originalLine":6,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":15,"generatedColumn":31,"originalLine":7,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":15,"generatedColumn":53,"originalLine":7,"originalColumn":20,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":15,"generatedColumn":85,"originalLine":7,"originalColumn":53,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":15,"generatedColumn":95,"originalLine":7,"originalColumn":61,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":15,"generatedColumn":103,"originalLine":7,"originalColumn":70,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":15,"generatedColumn":109,"originalLine":8,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":15,"generatedColumn":122,"originalLine":8,"originalColumn":12,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":15,"generatedColumn":130,"originalLine":8,"originalColumn":21,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":15,"generatedColumn":147,"originalLine":8,"originalColumn":39,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":15,"generatedColumn":153,"originalLine":9,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":16,"generatedColumn":4,"originalLine":9,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":16,"generatedColumn":4,"originalLine":9,"originalColumn":17,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":16,"generatedColumn":8,"originalLine":10,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":16,"generatedColumn":35,"originalLine":10,"originalColumn":25,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":16,"generatedColumn":67,"originalLine":10,"originalColumn":58,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":16,"generatedColumn":78,"originalLine":10,"originalColumn":67,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":16,"generatedColumn":86,"originalLine":10,"originalColumn":76,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":16,"generatedColumn":92,"originalLine":11,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":17,"generatedColumn":4,"originalLine":11,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":17,"generatedColumn":4,"originalLine":11,"originalColumn":14,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":17,"generatedColumn":8,"originalLine":12,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":17,"generatedColumn":32,"originalLine":13,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":18,"generatedColumn":4,"originalLine":13,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":18,"generatedColumn":4,"originalLine":13,"originalColumn":6,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":18,"generatedColumn":8,"originalLine":14,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":19,"generatedColumn":4,"originalLine":14,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":19,"generatedColumn":4,"originalLine":14,"originalColumn":24,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":19,"generatedColumn":8,"originalLine":15,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":19,"generatedColumn":20,"originalLine":15,"originalColumn":11,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":19,"generatedColumn":65,"originalLine":15,"originalColumn":57,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":19,"generatedColumn":70,"originalLine":16,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":19,"generatedColumn":86,"originalLine":16,"originalColumn":14,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":19,"generatedColumn":131,"originalLine":16,"originalColumn":60,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":19,"generatedColumn":137,"originalLine":17,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":19,"generatedColumn":141,"originalLine":17,"originalColumn":3,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":20,"generatedColumn":4,"originalLine":17,"originalColumn":3,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":20,"generatedColumn":4,"originalLine":17,"originalColumn":26,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":20,"generatedColumn":8,"originalLine":18,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":20,"generatedColumn":22,"originalLine":18,"originalColumn":13,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":21,"generatedColumn":4,"originalLine":18,"originalColumn":13,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":21,"generatedColumn":4,"originalLine":18,"originalColumn":26,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":21,"generatedColumn":8,"originalLine":19,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":21,"generatedColumn":37,"originalLine":19,"originalColumn":28,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":22,"generatedColumn":4,"originalLine":19,"originalColumn":28,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":22,"generatedColumn":4,"originalLine":19,"originalColumn":33,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":22,"generatedColumn":8,"originalLine":20,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":22,"generatedColumn":13,"originalLine":21,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":22,"generatedColumn":17,"originalLine":21,"originalColumn":3,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":23,"generatedColumn":4,"originalLine":21,"originalColumn":3,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":23,"generatedColumn":4,"originalLine":21,"originalColumn":31,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":23,"generatedColumn":8,"originalLine":22,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":23,"generatedColumn":53,"originalLine":22,"originalColumn":44,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":23,"generatedColumn":67,"originalLine":22,"originalColumn":59,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":23,"generatedColumn":85,"originalLine":23,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":23,"generatedColumn":89,"originalLine":23,"originalColumn":3,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":24,"generatedColumn":4,"originalLine":23,"originalColumn":3,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":24,"generatedColumn":4,"originalLine":23,"originalColumn":16,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":24,"generatedColumn":8,"originalLine":24,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":24,"generatedColumn":48,"originalLine":24,"originalColumn":39,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":24,"generatedColumn":62,"originalLine":24,"originalColumn":54,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":24,"generatedColumn":85,"originalLine":25,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":24,"generatedColumn":89,"originalLine":25,"originalColumn":3,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":25,"generatedColumn":4,"originalLine":25,"originalColumn":3,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":25,"generatedColumn":4,"originalLine":25,"originalColumn":9,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"},{"generatedLine":25,"generatedColumn":8,"originalLine":26,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-single-not-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-single-not-embed' -#>\n<#-\n  const {entity, f, source, sectionLabel, readonly} = ctx;\n-#>\n<uix.ReferenceInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n<#if(f.hint){-#>\n  helperText=\"resources.#{f.inheritedFrom || entity.name}.helpers.#{f.name}\"\n<#} else {-#>\n  helperText={false}\n<#}#>\n<# const empty = '{}'#>\n  filter={#{f.ref.editFilter ? f.ref.editFilter : empty}}\n  reference=\"#{entity.model.entityPathMapper[f.ref.entity]}\"\n  <#- if (!f.required){#>\n  allowEmpty<#} else {-#>\n  validate={uix.required()}<#}#>\n>\n  <#if(f.ref.autocomplete){-#>\n    <uix.AutocompleteInput optionText={uix.#{f.ref.entity}.inputText} />\n  <#} else {-#>\n    <uix.SelectInput optionText={<uix.#{f.ref.entity}.SelectTitle />} />\n  <#}-#>\n</uix.ReferenceInput>"}]}}