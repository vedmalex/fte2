{"version":3,"sources":["generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"],"names":["text","code","expression"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAsBA,IAC0BA,IAC/CC;AAFD,IAECA,AACAA;AAHD,IAGCA,AACAA;AAJD,IAICA,AAAGD,IACHA,mBACAA,sBAAmBE,gCAAiCF,UAAQE,QAASF,MACrEA,aAAWE,QAASA,iBAAkBF,MACtCA,gBACAA,KACAA,8BACAA,IAAEC;AAXH,IAWGA,AACFA;AAZD,IAYCA,AACAA;AAbD,IAaCA,AACAA;AAdD,IAcCA,AACAA;AAfD,IAeCA,AACAA;AAhBD,IAgBCA,AACAA;AAjBD,IAiBCA,AACAA;AAlBD,IAkBCA,AACAA;AAnBD,IAmBCA,AACAA;AApBD,IAoBCA,AAAID,IACJA,MAAIE,yCAA0CF,IAC9CA,+BACAA;AAvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","sourceRoot":"/Users/vedmalex/work/fte2/demo","sourcesContent":["<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"],"template":{"version":"1.0.0","segments":[{"generatedLine":1,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":2,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":3,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":4,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":5,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":6,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":7,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":8,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":9,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":10,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":11,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":12,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":13,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":14,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":15,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":16,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":17,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":18,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":19,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":20,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":21,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":22,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":23,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":24,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":25,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":26,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":27,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":28,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":29,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":30,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":31,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":32,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":33,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":34,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":35,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":36,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":37,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":38,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":39,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":40,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":41,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":42,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":43,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":44,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":45,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":46,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":47,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":48,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js"},{"generatedLine":12,"generatedColumn":4,"originalLine":1,"originalColumn":22,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":12,"generatedColumn":8,"originalLine":2,"originalColumn":48,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":12,"generatedColumn":12,"originalLine":3,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":13,"generatedColumn":4,"originalLine":3,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":13,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":14,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":14,"generatedColumn":4,"originalLine":5,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":15,"generatedColumn":4,"originalLine":5,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":15,"generatedColumn":4,"originalLine":5,"originalColumn":4,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":15,"generatedColumn":8,"originalLine":6,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":15,"generatedColumn":27,"originalLine":7,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":15,"generatedColumn":49,"originalLine":7,"originalColumn":20,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":15,"generatedColumn":81,"originalLine":7,"originalColumn":53,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":15,"generatedColumn":91,"originalLine":7,"originalColumn":61,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":15,"generatedColumn":99,"originalLine":7,"originalColumn":70,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":15,"generatedColumn":105,"originalLine":8,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":15,"generatedColumn":118,"originalLine":8,"originalColumn":12,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":15,"generatedColumn":126,"originalLine":8,"originalColumn":21,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":15,"generatedColumn":143,"originalLine":8,"originalColumn":39,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":15,"generatedColumn":149,"originalLine":9,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":15,"generatedColumn":165,"originalLine":10,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":15,"generatedColumn":170,"originalLine":11,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":15,"generatedColumn":200,"originalLine":12,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":15,"generatedColumn":204,"originalLine":12,"originalColumn":3,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":16,"generatedColumn":4,"originalLine":12,"originalColumn":3,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":16,"generatedColumn":4,"originalLine":13,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":17,"generatedColumn":4,"originalLine":13,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":17,"generatedColumn":4,"originalLine":14,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":18,"generatedColumn":4,"originalLine":14,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":18,"generatedColumn":4,"originalLine":15,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":19,"generatedColumn":4,"originalLine":15,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":19,"generatedColumn":4,"originalLine":16,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":20,"generatedColumn":4,"originalLine":16,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":20,"generatedColumn":4,"originalLine":17,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":21,"generatedColumn":4,"originalLine":17,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":21,"generatedColumn":4,"originalLine":18,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":22,"generatedColumn":4,"originalLine":18,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":22,"generatedColumn":4,"originalLine":19,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":23,"generatedColumn":4,"originalLine":19,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":23,"generatedColumn":4,"originalLine":20,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":24,"generatedColumn":4,"originalLine":20,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":24,"generatedColumn":4,"originalLine":21,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":25,"generatedColumn":4,"originalLine":21,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":25,"generatedColumn":4,"originalLine":21,"originalColumn":5,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":25,"generatedColumn":8,"originalLine":22,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":25,"generatedColumn":14,"originalLine":22,"originalColumn":5,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":25,"generatedColumn":55,"originalLine":22,"originalColumn":47,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":25,"generatedColumn":59,"originalLine":23,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"},{"generatedLine":25,"generatedColumn":90,"originalLine":24,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/edit/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-edit-rel-multiple-embed' -#>\n<#-\n  const { entity, f, source, sectionLabel, readonly } = ctx;\n-#>\n<uix.ArrayInput\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n  source={`#{source}#{f.ref.backField}`}\n  allowEmpty\n>\n  <uix.SimpleFormIterator>\n  <# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: !readonly ? e.lists.all : e.lists.all.map(f=>({...f, readonly})),\n      },\n      sectionLabel : true,\n      source: '',\n    }\n  #>\n    #{partial(context, 'display-edit-entity')}\n  </uix.SimpleFormIterator>\n</uix.ArrayInput>"}]}}