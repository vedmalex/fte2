{"version":3,"sources":["generators_new/tpls/UI/forms/preview.njs.js"],"names":["text","expression","code"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAGCA,8CACAA,0CACAA,0DACAA,6CACAA,IACAA,8BACAA,cACAA,oEACAA,yDACAA,mBACAA,kCACAA,4BACAA,UACAA,QACAA,OACAA,IACAA,QAAMC,aAAcD,8CACpBA,yCACAA,cACAA,yCACAA,MAAIE;AAvBL,IAuBKA,AACJA;AAxBD,IAwBCA,AACAA;AAzBD,IAyBCA,AACAA;AA1BD,IA0BCA,AACAA;AA3BD,IA2BCA,AACAA;AA5BD,IA4BCA,AAAoBF,IACpBA,QAAMC,qCAAsCD,IAC5CA,+BACAA,QACAA,MACAA,IACAA,gDACAA,6DACAA,kCAAgCC,aAAcD,IAC9CA,8BAA4BC,aAAcD,mBAC1CA,eACAA,0CACAA,OACAA,IACAA,QAAMC,aAAcD,sBACpBA,sBACAA,SACAA,uBAAqBC,aAAcD,kBACnCA,IACAA,iBAAeC,aAAcD;AA/C9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"generators_new/tpls/UI/forms/preview.njs.js","sourceRoot":"/Users/vedmalex/work/fte2/demo","sourcesContent":["<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"],"template":{"version":"1.0.0","segments":[{"generatedLine":1,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":2,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":3,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":4,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":5,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":6,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":7,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":8,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":9,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":10,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":11,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":12,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":13,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":14,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":15,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":16,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":17,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":18,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":19,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":20,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":21,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":22,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":23,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":24,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":25,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":26,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":27,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":28,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":29,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":30,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":31,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":32,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":33,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":34,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":35,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":36,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":37,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":38,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":39,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":40,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":41,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":42,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":43,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":44,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":45,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":46,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":47,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":48,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":49,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":50,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":51,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":52,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":53,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":54,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":55,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":56,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":57,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":58,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":59,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":60,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":61,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":62,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":63,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":64,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":65,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":66,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":67,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":68,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/preview.njs.js"},{"generatedLine":12,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":50,"originalLine":5,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":92,"originalLine":6,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":150,"originalLine":7,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":195,"originalLine":8,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":199,"originalLine":9,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":229,"originalLine":10,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":243,"originalLine":11,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":311,"originalLine":12,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":368,"originalLine":13,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":387,"originalLine":14,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":421,"originalLine":15,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":449,"originalLine":16,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":459,"originalLine":17,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":467,"originalLine":18,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":474,"originalLine":19,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":478,"originalLine":20,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":486,"originalLine":20,"originalColumn":7,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":499,"originalLine":20,"originalColumn":21,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":545,"originalLine":21,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":586,"originalLine":22,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":600,"originalLine":23,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":641,"originalLine":24,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":12,"generatedColumn":647,"originalLine":24,"originalColumn":5,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":13,"generatedColumn":4,"originalLine":24,"originalColumn":5,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":13,"generatedColumn":4,"originalLine":25,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":14,"generatedColumn":4,"originalLine":25,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":14,"generatedColumn":4,"originalLine":26,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":15,"generatedColumn":4,"originalLine":26,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":15,"generatedColumn":4,"originalLine":27,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":16,"generatedColumn":4,"originalLine":27,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":16,"generatedColumn":4,"originalLine":28,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":17,"generatedColumn":4,"originalLine":28,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":17,"generatedColumn":4,"originalLine":29,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":4,"originalLine":29,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":4,"originalLine":29,"originalColumn":21,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":8,"originalLine":30,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":16,"originalLine":30,"originalColumn":7,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":53,"originalLine":30,"originalColumn":45,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":57,"originalLine":31,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":88,"originalLine":32,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":96,"originalLine":33,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":102,"originalLine":34,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":106,"originalLine":35,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":154,"originalLine":36,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":215,"originalLine":37,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":249,"originalLine":37,"originalColumn":33,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":262,"originalLine":37,"originalColumn":47,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":266,"originalLine":38,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":296,"originalLine":38,"originalColumn":29,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":309,"originalLine":38,"originalColumn":43,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":328,"originalLine":39,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":343,"originalLine":40,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":385,"originalLine":41,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":392,"originalLine":42,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":396,"originalLine":43,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":404,"originalLine":43,"originalColumn":7,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":417,"originalLine":43,"originalColumn":21,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":439,"originalLine":44,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":461,"originalLine":45,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":470,"originalLine":46,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":493,"originalLine":46,"originalColumn":22,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":506,"originalLine":46,"originalColumn":36,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":524,"originalLine":47,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":528,"originalLine":48,"originalColumn":1,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":545,"originalLine":48,"originalColumn":16,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"},{"generatedLine":18,"generatedColumn":558,"originalLine":48,"originalColumn":30,"source":"generators_new/tpls/UI/forms/preview.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-preview' -#>\n\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { UIXContext } from '../contexts';\n\nconst styles = theme => ({\n  field: {\n    // These styles will ensure our drawer don't fully cover our\n    // application when teaser or title are very long\n    '& span': {\n      display: 'inline-block',\n      maxWidth: '30rem',\n    },\n  },\n});\n\nconst #{entity.name}PreviewView = ({ classes, ...props }) => {\n  const uix = useContext(UIXContext);\n  return (\n    <uix.SimpleShowLayout {...props}>\n    <# const ctx={\n        entity:{\n        ...entity,\n        props: entity.lists.preview,\n      }, \n      source:'' } #>\n      #{partial(ctx, 'display-show-entity')}\n    </uix.SimpleShowLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => ({\n  // Get the record by its id from the react-admin state.\n  record: state.admin.resources.#{entity.name}\n    ? state.admin.resources.#{entity.name}.data[props.id]\n    : null,\n  version: state.admin.ui.viewVersion,\n});\n\nconst #{entity.name}Preview = connect(\n  mapStateToProps,\n  {},\n)(withStyles(styles)(#{entity.name}PreviewView));\n\nexport default #{entity.name}Preview;"}]}}