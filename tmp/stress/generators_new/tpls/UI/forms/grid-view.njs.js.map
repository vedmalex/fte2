{"version":3,"sources":["generators_new/tpls/UI/forms/grid-view.njs.js"],"names":["text","code","expression"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAyBA,IACOA,IAC/BA,IACAA,gDACAA,6CACAA,6CACAA,kDACAA,IACAA,4CACAA,yCACAA,sDACAA,0CACAA,cACAA,6BAA2BC;AAb5B,IAa4BA,AAAyBD,mBAAeC;AAbpE,IAaoEA,AAAKD,MACxEA,KAAGC;AAdJ,IAcIA,AACHA;AAfD,IAeCA,AACAA;AAhBD,IAgBCA,AACAA;AAjBD,IAiBCA,AACAA;AAlBD,IAkBCA,AACAA;AAnBD,IAmBCA,AACAA;AApBD,IAoBCA,AACAA;AArBD,IAqBCA,AACAA;AAtBD,IAsBCA,AACAA;AAvBD,IAuBCA,AACAA;AAxBD,IAwBCA,AACAA;AAzBD,IAyBCA,AAAQD,IACRA,IACAA,QAAME,qCAAsCF,IAC5CA,IACAC;AA7BD,IA6BCA,AAAsCD,IACtCA,WAASE,aAAcF,GAACE,iBAAkBF,OAC1CC;AA/BD,IA+BCA,AAAMD,IACNA,IACAC;AAjCD,IAiCCA,AAA+CD,IAC/CA,qCACAA,sCACAC;AApCD,IAoCCA,AAAKD,IACLA,qBACAA,OACAA,IACAA;AAxCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"generators_new/tpls/UI/forms/grid-view.njs.js","sourceRoot":"/Users/vedmalex/work/fte2/demo","sourcesContent":["<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"],"template":{"version":"1.0.0","segments":[{"generatedLine":1,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":2,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":3,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":4,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":5,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":6,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":7,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":8,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":9,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":10,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":11,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":12,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":13,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":14,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":15,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":16,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":17,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":18,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":19,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":20,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":21,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":22,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":23,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":24,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":25,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":26,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":27,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":28,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":29,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":30,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":31,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":32,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":33,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":34,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":35,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":36,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":37,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":38,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":39,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":40,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":41,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":42,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":43,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":44,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":45,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":46,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":47,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":48,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":49,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":50,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":51,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":52,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":53,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":54,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":55,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":56,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":57,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":58,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":59,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":60,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":61,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":62,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":63,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":64,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":65,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":66,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":67,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":68,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":69,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":70,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":71,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":72,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/grid-view.njs.js"},{"generatedLine":12,"generatedColumn":4,"originalLine":1,"originalColumn":25,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":8,"originalLine":2,"originalColumn":32,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":12,"originalLine":3,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":16,"originalLine":4,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":64,"originalLine":5,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":109,"originalLine":6,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":154,"originalLine":7,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":204,"originalLine":8,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":208,"originalLine":9,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":252,"originalLine":10,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":293,"originalLine":11,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":347,"originalLine":12,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":389,"originalLine":13,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":403,"originalLine":14,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":12,"generatedColumn":432,"originalLine":14,"originalColumn":28,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":13,"generatedColumn":4,"originalLine":14,"originalColumn":28,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":13,"generatedColumn":4,"originalLine":14,"originalColumn":53,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":13,"generatedColumn":23,"originalLine":14,"originalColumn":68,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":14,"generatedColumn":4,"originalLine":14,"originalColumn":68,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":14,"generatedColumn":4,"originalLine":14,"originalColumn":73,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":14,"generatedColumn":10,"originalLine":15,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":14,"generatedColumn":15,"originalLine":15,"originalColumn":4,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":15,"generatedColumn":4,"originalLine":15,"originalColumn":4,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":15,"generatedColumn":4,"originalLine":16,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":16,"generatedColumn":4,"originalLine":16,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":16,"generatedColumn":4,"originalLine":17,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":17,"generatedColumn":4,"originalLine":17,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":17,"generatedColumn":4,"originalLine":18,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":18,"generatedColumn":4,"originalLine":18,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":18,"generatedColumn":4,"originalLine":19,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":19,"generatedColumn":4,"originalLine":19,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":19,"generatedColumn":4,"originalLine":20,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":20,"generatedColumn":4,"originalLine":20,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":20,"generatedColumn":4,"originalLine":21,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":21,"generatedColumn":4,"originalLine":21,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":21,"generatedColumn":4,"originalLine":22,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":22,"generatedColumn":4,"originalLine":22,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":22,"generatedColumn":4,"originalLine":23,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":23,"generatedColumn":4,"originalLine":23,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":23,"generatedColumn":4,"originalLine":24,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":24,"generatedColumn":4,"originalLine":24,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":24,"generatedColumn":4,"originalLine":25,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":25,"generatedColumn":4,"originalLine":25,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":25,"generatedColumn":4,"originalLine":26,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":26,"generatedColumn":4,"originalLine":26,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":26,"generatedColumn":4,"originalLine":26,"originalColumn":9,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":26,"generatedColumn":8,"originalLine":27,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":26,"generatedColumn":12,"originalLine":28,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":26,"generatedColumn":20,"originalLine":28,"originalColumn":7,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":26,"generatedColumn":57,"originalLine":28,"originalColumn":45,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":26,"generatedColumn":61,"originalLine":29,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":26,"generatedColumn":65,"originalLine":30,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":27,"generatedColumn":4,"originalLine":30,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":27,"generatedColumn":4,"originalLine":30,"originalColumn":39,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":27,"generatedColumn":8,"originalLine":31,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":27,"generatedColumn":19,"originalLine":31,"originalColumn":10,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":27,"generatedColumn":32,"originalLine":31,"originalColumn":24,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":27,"generatedColumn":35,"originalLine":31,"originalColumn":25,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":27,"generatedColumn":52,"originalLine":31,"originalColumn":43,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":27,"generatedColumn":59,"originalLine":32,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":28,"generatedColumn":4,"originalLine":32,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":28,"generatedColumn":4,"originalLine":32,"originalColumn":7,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":28,"generatedColumn":8,"originalLine":33,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":28,"generatedColumn":12,"originalLine":34,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":29,"generatedColumn":4,"originalLine":34,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":29,"generatedColumn":4,"originalLine":34,"originalColumn":48,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":29,"generatedColumn":8,"originalLine":35,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":29,"generatedColumn":45,"originalLine":36,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":29,"generatedColumn":83,"originalLine":37,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":30,"generatedColumn":4,"originalLine":37,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":30,"generatedColumn":4,"originalLine":37,"originalColumn":6,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":30,"generatedColumn":8,"originalLine":38,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":30,"generatedColumn":29,"originalLine":39,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":30,"generatedColumn":36,"originalLine":40,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"},{"generatedLine":30,"generatedColumn":40,"originalLine":41,"originalColumn":1,"source":"generators_new/tpls/UI/forms/grid-view.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-grid-view' -#>\n\nimport React, { useContext } from \"react\";\nimport { UIXContext } from '../contexts';\nimport { prepareExcludeList } from '../';\n// import { useTranslate } from 'react-admin';\n\nconst Grid = ({ fields, ...props }) => {\n  const uix = useContext(UIXContext);\n  const excludedField = prepareExcludeList(fields)\n  // const translate = useTranslate();\n  return (\n  <uix.Datagrid {...props} <#if(!entity.embedded){#>rowClick=\"edit\"<#}#> >\n   <# \n      const list = !(entity.embedded || entity.abstract) ? 'list': 'all';\n      const ctx={\n        entity: {\n          ...entity,\n          props: entity.lists[list],\n          sectionLabel: false,\n          grid: true,\n        }, source:'',\n        customizable: true,\n       };\n      #>\n\n      #{partial(ctx, 'display-show-entity')}\n\n<# entity.actions.forEach(action=>{ #>\n    <uix.#{entity.name}.#{action.fullName} />\n<#})#>\n\n<# if(!(entity.embedded || entity.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n);}\n\nexport default Grid;"}]}}