{"version":3,"sources":["generators/server/Application.Config/application.view-screencontainer.njs.js"],"names":["text","expression","code"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACCA,+BAA6BC,cAAeA,6BAA8BD,wBAC1EE;AAFD,IAECA,AACAA;AAHD,IAGCA,AACAA;AAJD,IAICA,AACAA;AALD,IAKCA,AACAA;AAND,IAMCA,AACAA;AAPD,IAOCA,AACAA;AARD,IAQCA,AACAA;AATD,IASCA,AACAA;AAVD,IAUCA,AACAA;AAXD,IAWCA,AACAA;AAZD,IAYCA,AAAEF,IACFA,cAAWC,mBAAoBD,OAC/BA,mBAAgBC,mBAAoBD,OACpCA,IACAA,mBAAiBC,4BAA6BA,2CAA4CD,qBAC1FA,IACAA,iCACAA,IAAEE;AAnBH,IAmBGA,AAAmBF,IACrBA,4IACAA,IAAEE;AArBH,IAqBGA,AAAOF,IACTA,mCACAA,OACAA;AAxBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"generators/server/Application.Config/application.view-screencontainer.njs.js","sourceRoot":"/Users/vedmalex/work/fte2/demo","sourcesContent":["<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"],"template":{"version":"1.0.0","segments":[{"generatedLine":1,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":2,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":3,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":4,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":5,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":6,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":7,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":8,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":9,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":10,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":11,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":12,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":13,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":14,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":15,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":16,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":17,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":18,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":19,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":20,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":21,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":22,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":23,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":24,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":25,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":26,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":27,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":28,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":29,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":30,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":31,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":32,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":33,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":34,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":35,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":36,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":37,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":38,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":39,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":40,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":41,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":42,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":43,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":44,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":45,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js"},{"generatedLine":8,"generatedColumn":4,"originalLine":2,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":8,"generatedColumn":35,"originalLine":2,"originalColumn":30,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":8,"generatedColumn":49,"originalLine":2,"originalColumn":45,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":8,"generatedColumn":78,"originalLine":2,"originalColumn":75,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":8,"generatedColumn":102,"originalLine":3,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":9,"generatedColumn":4,"originalLine":3,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":9,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":10,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":10,"generatedColumn":4,"originalLine":5,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":11,"generatedColumn":4,"originalLine":5,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":11,"generatedColumn":4,"originalLine":6,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":12,"generatedColumn":4,"originalLine":6,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":12,"generatedColumn":4,"originalLine":7,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":13,"generatedColumn":4,"originalLine":7,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":13,"generatedColumn":4,"originalLine":8,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":14,"generatedColumn":4,"originalLine":8,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":14,"generatedColumn":4,"originalLine":9,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":15,"generatedColumn":4,"originalLine":9,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":15,"generatedColumn":4,"originalLine":10,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":16,"generatedColumn":4,"originalLine":10,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":16,"generatedColumn":4,"originalLine":11,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":17,"generatedColumn":4,"originalLine":11,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":17,"generatedColumn":4,"originalLine":12,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":18,"generatedColumn":4,"originalLine":12,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":18,"generatedColumn":4,"originalLine":13,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":19,"generatedColumn":4,"originalLine":13,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":19,"generatedColumn":4,"originalLine":13,"originalColumn":3,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":19,"generatedColumn":8,"originalLine":14,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":19,"generatedColumn":22,"originalLine":14,"originalColumn":12,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":19,"generatedColumn":41,"originalLine":14,"originalColumn":32,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":19,"generatedColumn":48,"originalLine":15,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":19,"generatedColumn":67,"originalLine":15,"originalColumn":17,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":19,"generatedColumn":86,"originalLine":15,"originalColumn":37,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":19,"generatedColumn":93,"originalLine":16,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":19,"generatedColumn":97,"originalLine":17,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":19,"generatedColumn":116,"originalLine":17,"originalColumn":18,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":19,"generatedColumn":144,"originalLine":17,"originalColumn":47,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"expression","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":19,"generatedColumn":187,"originalLine":17,"originalColumn":91,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":19,"generatedColumn":208,"originalLine":18,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":19,"generatedColumn":212,"originalLine":19,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":19,"generatedColumn":245,"originalLine":20,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":19,"generatedColumn":249,"originalLine":20,"originalColumn":3,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":20,"generatedColumn":4,"originalLine":20,"originalColumn":3,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":20,"generatedColumn":4,"originalLine":20,"originalColumn":22,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":20,"generatedColumn":8,"originalLine":21,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":20,"generatedColumn":148,"originalLine":22,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":20,"generatedColumn":152,"originalLine":22,"originalColumn":3,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":21,"generatedColumn":4,"originalLine":22,"originalColumn":3,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"code","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":21,"generatedColumn":4,"originalLine":22,"originalColumn":10,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":21,"generatedColumn":8,"originalLine":23,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":21,"generatedColumn":43,"originalLine":24,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"},{"generatedLine":21,"generatedColumn":50,"originalLine":25,"originalColumn":1,"source":"generators/server/Application.Config/application.view-screencontainer.njs.js","name":"text","content":"<#@ noContent #>\nExt.define('Modeleditor.view.#{context.name}#{context.currentProfile.name}.ScreenContainer', {\n<#-\n    let mainContainerType = \"Modeleditor.view.content.TabPanel\"; // defaultPanel\n      let printErr = false;\n\n    let screenItem = context.currentProfile.rootScreen;\n    if (screenItem && screenItem.layoutType != \"\") {\n      mainContainerType = screenItem.layoutType;\n    } else {\n      printErr = true;\n    }\n#>\n  extend: \"#{mainContainerType}\",\n  contentType: \"#{mainContainerType}\",\n\n  alias: 'widget.#{context.name.toLowerCase()}#{context.currentProfile.name.toLowerCase()}screencontainer',\n\n  initComponent: function() {\n  <#- if(printErr){#>\n    console.warn(_t('Your screen configuration have no main container! Now using default container (Tab panel)', 'SYSTEM', 'messages'));\n  <#- }#>\n    this.callParent(arguments);\n  }\n});"}]}}