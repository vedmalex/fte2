{"version":3,"sources":["generators_new/tpls/UI/forms/i18n.njs.js"],"names":["code","text","expression"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAECA;AAFD,IAECA,AACAA;AAHD,IAGCA,AACAA;AAJD,IAICA,AAAGC,IACHA,IACAA,oBACAA,kBACAA,MAAIC,aAAcD,OAClBA,kBAAgBC,2CAA4CD,MAC5DA,eAAaC,cAAeD,QAAMC,uCAAwCD,MAC1EA,mBACAA,IACAD;AAbD,IAaCA,AACAA;AAdD,IAcCA,AACAA;AAfD,IAeCA,AAAGC,IACHA,UAAQC,QAASD,KAAGC,SAAUD,MAC9BD;AAjBD,IAiBCA,AAA2CC,IAC3CA,UAAQC,QAASD,KAAGC,SAAUD,MAC9BD;AAnBD,IAmBCA,AACAA;AApBD,IAoBCA,AAAKC,IACLA,YACAD;AAtBD,IAsBCA,AACAA;AAvBD,IAuBCA,AACAA;AAxBD,IAwBCA,AAAGC,IACHA,mBACAD;AA1BD,IA0BCA,AACAA;AA3BD,IA2BCA,AACAA;AA5BD,IA4BCA,AAAGC,IACHA,UAAQC,QAASD,KAAGC,QAASD,MAC7BD;AA9BD,IA8BCA,AAA2CC,IAC3CA,UAAQC,QAASD,KAAGC,QAASD,MAC7BD;AAhCD,IAgCCA,AACAA;AAjCD,IAiCCA,AAAKC,IACLA,YACAD;AAnCD,IAmCCA,AAAMC,IACND;AApCD,IAoCCA,AAAuDC,IACvDA,mBACAD;AAtCD,IAsCCA,AAAqCC,IACrCA,UAAQC,aAAcD,KAAGC,cAAeD,MACxCD;AAxCD,IAwCCA,AAAOC,IACPD;AAzCD,IAyCCA,AAAwBC,IACxBA,IAAEC,UAAWD,KAAGC,+CAAgDD,MAChED;AA3CD,IA2CCA,AAAOC,IACPA,YACAD;AA7CD,IA6CCA,AAAMC,IACNA,SACAA,QACAA;AAhDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"generators_new/tpls/UI/forms/i18n.njs.js","sourceRoot":"/Users/vedmalex/work/fte2/demo","sourcesContent":["<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"],"template":{"version":"1.0.0","segments":[{"generatedLine":1,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":2,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":3,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":4,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":5,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":6,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":7,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":8,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":9,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":10,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":11,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":12,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":13,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":14,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":15,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":16,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":17,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":18,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":19,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":20,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":21,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":22,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":23,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":24,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":25,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":26,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":27,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":28,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":29,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":30,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":31,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":32,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":33,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":34,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":35,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":36,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":37,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":38,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":39,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":40,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":41,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":42,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":43,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":44,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":45,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":46,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":47,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":48,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":49,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":50,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":51,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":52,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":53,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":54,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":55,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":56,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":57,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":58,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":59,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":60,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":61,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":62,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":63,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":64,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":65,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":66,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":67,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":68,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":69,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":70,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":71,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":72,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":73,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":74,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":75,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":76,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":77,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":78,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":79,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":80,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":81,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":82,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":83,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/i18n.njs.js"},{"generatedLine":12,"generatedColumn":4,"originalLine":3,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":13,"generatedColumn":4,"originalLine":3,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":13,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":14,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":14,"generatedColumn":4,"originalLine":5,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":15,"generatedColumn":4,"originalLine":5,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":15,"generatedColumn":4,"originalLine":5,"originalColumn":4,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":15,"generatedColumn":8,"originalLine":6,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":15,"generatedColumn":12,"originalLine":7,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":15,"generatedColumn":32,"originalLine":8,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":15,"generatedColumn":50,"originalLine":9,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":15,"generatedColumn":56,"originalLine":9,"originalColumn":5,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":15,"generatedColumn":69,"originalLine":9,"originalColumn":19,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":15,"generatedColumn":76,"originalLine":10,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":15,"generatedColumn":94,"originalLine":10,"originalColumn":17,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":15,"generatedColumn":137,"originalLine":10,"originalColumn":61,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":15,"generatedColumn":143,"originalLine":11,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":15,"generatedColumn":158,"originalLine":11,"originalColumn":14,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":15,"generatedColumn":172,"originalLine":11,"originalColumn":29,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":15,"generatedColumn":180,"originalLine":11,"originalColumn":35,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":15,"generatedColumn":219,"originalLine":11,"originalColumn":75,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":15,"generatedColumn":225,"originalLine":12,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":15,"generatedColumn":244,"originalLine":13,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":15,"generatedColumn":248,"originalLine":14,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":16,"generatedColumn":4,"originalLine":14,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":16,"generatedColumn":4,"originalLine":15,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":17,"generatedColumn":4,"originalLine":15,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":17,"generatedColumn":4,"originalLine":16,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":18,"generatedColumn":4,"originalLine":16,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":18,"generatedColumn":4,"originalLine":16,"originalColumn":4,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":18,"generatedColumn":8,"originalLine":17,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":18,"generatedColumn":18,"originalLine":17,"originalColumn":9,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":18,"generatedColumn":26,"originalLine":17,"originalColumn":18,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":18,"generatedColumn":31,"originalLine":17,"originalColumn":21,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":18,"generatedColumn":40,"originalLine":17,"originalColumn":31,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":18,"generatedColumn":46,"originalLine":18,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":19,"generatedColumn":4,"originalLine":18,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":19,"generatedColumn":4,"originalLine":18,"originalColumn":44,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":19,"generatedColumn":8,"originalLine":19,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":19,"generatedColumn":18,"originalLine":19,"originalColumn":9,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":19,"generatedColumn":26,"originalLine":19,"originalColumn":18,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":19,"generatedColumn":31,"originalLine":19,"originalColumn":21,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":19,"generatedColumn":40,"originalLine":19,"originalColumn":31,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":19,"generatedColumn":46,"originalLine":20,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":20,"generatedColumn":4,"originalLine":20,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":20,"generatedColumn":4,"originalLine":21,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":21,"generatedColumn":4,"originalLine":21,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":21,"generatedColumn":4,"originalLine":21,"originalColumn":6,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":21,"generatedColumn":8,"originalLine":22,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":21,"generatedColumn":20,"originalLine":23,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":22,"generatedColumn":4,"originalLine":23,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":22,"generatedColumn":4,"originalLine":24,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":23,"generatedColumn":4,"originalLine":24,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":23,"generatedColumn":4,"originalLine":25,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":24,"generatedColumn":4,"originalLine":25,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":24,"generatedColumn":4,"originalLine":25,"originalColumn":4,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":24,"generatedColumn":8,"originalLine":26,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":24,"generatedColumn":27,"originalLine":27,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":25,"generatedColumn":4,"originalLine":27,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":25,"generatedColumn":4,"originalLine":28,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":26,"generatedColumn":4,"originalLine":28,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":26,"generatedColumn":4,"originalLine":29,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":27,"generatedColumn":4,"originalLine":29,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":27,"generatedColumn":4,"originalLine":29,"originalColumn":4,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":27,"generatedColumn":8,"originalLine":30,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":27,"generatedColumn":18,"originalLine":30,"originalColumn":9,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":27,"generatedColumn":26,"originalLine":30,"originalColumn":18,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":27,"generatedColumn":31,"originalLine":30,"originalColumn":21,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":27,"generatedColumn":39,"originalLine":30,"originalColumn":30,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":27,"generatedColumn":45,"originalLine":31,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":28,"generatedColumn":4,"originalLine":31,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":28,"generatedColumn":4,"originalLine":31,"originalColumn":44,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":28,"generatedColumn":8,"originalLine":32,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":28,"generatedColumn":18,"originalLine":32,"originalColumn":9,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":28,"generatedColumn":26,"originalLine":32,"originalColumn":18,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":28,"generatedColumn":31,"originalLine":32,"originalColumn":21,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":28,"generatedColumn":39,"originalLine":32,"originalColumn":30,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":28,"generatedColumn":45,"originalLine":33,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":29,"generatedColumn":4,"originalLine":33,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":29,"generatedColumn":4,"originalLine":34,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":30,"generatedColumn":4,"originalLine":34,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":30,"generatedColumn":4,"originalLine":34,"originalColumn":6,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":30,"generatedColumn":8,"originalLine":35,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":30,"generatedColumn":20,"originalLine":36,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":31,"generatedColumn":4,"originalLine":36,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":31,"generatedColumn":4,"originalLine":36,"originalColumn":7,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":31,"generatedColumn":8,"originalLine":37,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":32,"generatedColumn":4,"originalLine":37,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":32,"generatedColumn":4,"originalLine":37,"originalColumn":56,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":32,"generatedColumn":8,"originalLine":38,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":32,"generatedColumn":27,"originalLine":39,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":33,"generatedColumn":4,"originalLine":39,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":33,"generatedColumn":4,"originalLine":39,"originalColumn":38,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":33,"generatedColumn":8,"originalLine":40,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":33,"generatedColumn":18,"originalLine":40,"originalColumn":9,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":33,"generatedColumn":31,"originalLine":40,"originalColumn":23,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":33,"generatedColumn":36,"originalLine":40,"originalColumn":26,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":33,"generatedColumn":50,"originalLine":40,"originalColumn":41,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":33,"generatedColumn":56,"originalLine":41,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":34,"generatedColumn":4,"originalLine":41,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":34,"generatedColumn":4,"originalLine":41,"originalColumn":8,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":34,"generatedColumn":8,"originalLine":42,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":35,"generatedColumn":4,"originalLine":42,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":35,"generatedColumn":4,"originalLine":42,"originalColumn":25,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":35,"generatedColumn":8,"originalLine":43,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":35,"generatedColumn":12,"originalLine":43,"originalColumn":3,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":35,"generatedColumn":22,"originalLine":43,"originalColumn":14,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":35,"generatedColumn":27,"originalLine":43,"originalColumn":17,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":35,"generatedColumn":74,"originalLine":43,"originalColumn":65,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":35,"generatedColumn":80,"originalLine":44,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":36,"generatedColumn":4,"originalLine":44,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":36,"generatedColumn":4,"originalLine":44,"originalColumn":8,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":36,"generatedColumn":8,"originalLine":45,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":36,"generatedColumn":20,"originalLine":46,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":37,"generatedColumn":4,"originalLine":46,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":37,"generatedColumn":4,"originalLine":46,"originalColumn":7,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":37,"generatedColumn":8,"originalLine":47,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":37,"generatedColumn":17,"originalLine":48,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"},{"generatedLine":37,"generatedColumn":25,"originalLine":49,"originalColumn":1,"source":"generators_new/tpls/UI/forms/i18n.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-i18n' -#>\n<# \nconst rels = entity.props.filter(f=>f.ref).filter(r=>!r.single && !r.ref.embedded);\n #>\n\nexport default {\n  resources: {\n    #{entity.name}: {\n      summary: '#{entity.UI.generalTab ||'Общая информация'}',\n      name: '#{entity.title} |||| #{ entity.titlePlural || entity.plural }',\n      fields: {\n\n<#entity.props.forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.label}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.label}',\n<#}\n})-#>\n      },\n<# const hintList = entity.props.filter(f=>f.hint)\nif(hintList.length > 0){\n-#>\n      helpers:{\n<#entity.props.filter(f=>f.hint).forEach(f=>{\n  if(!f.ref && !f.inheritedFrom){\n-#>\n        #{f.name}: '#{f.hint}',\n<#} else if(f.ref && !f.inheritedFrom) {-#>\n        #{f.name}: '#{f.hint}',\n<#}\n})-#>\n      },\n<#}-#>\n<# if(entity.actions.length > 0 || rels.length > 0){-#>\n      actions:{\n<# entity.actions.forEach(action=>{#>\n        #{action.name}: '#{action.title}',\n<#-})#>\n<# rels.forEach(rel=>{#>\n  #{rel.name}: '#{ rel?.metadata?.UI?.actions?.add || rel.label}',\n<#-})#>\n      },\n<#}-#>\n    }\n  },\n}"}]}}