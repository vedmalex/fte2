{"version":3,"sources":["generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"],"names":["code","text","expression"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAECA;AAFD,IAECA,AACAA;AAHD,IAGCA,AACAA;AAJD,IAICA,AAAGC,IACHD;AALD,IAKCA,AAAqCC,IACrCA,MACAD;AAPD,IAOCA,AAAKC,IACLD;AARD,IAQCA,AAAuBC,IACvBA,oCAAiCC,gCAAiCD,UAAQC,QAASD,SACnFD;AAVD,IAUCA,AAAKC,IACLA,4BACAD;AAZD,IAYCA,AAAuBC,IACvBA,sBACAD;AAdD,IAcCA,AAAYC,IACZA,sBAAmBC,gCAAiCD,UAAQC,QAASD,MACrED;AAhBD,IAgBCA,AAAKC,IACLA,gBAAaC,6GAA8GD,MAC3HD;AAlBD,IAkBCA,AAAuBC,IACvBA,YAAUC,6CAA8CD,KACxDA,aAAWC,QAASA,iBAAkBD,MACtCA,KACAA,SAAOC,8EAA+ED,kBAAgBC,QAASD,QAC/GA,8BACAD;AAxBD,IAwBCA,AAAqCC,IACrCA,OACAD;AA1BD,IA0BCA;AA1BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","sourceRoot":"/Users/vedmalex/work/fte2/demo","sourcesContent":["<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"],"template":{"version":"1.0.0","segments":[{"generatedLine":1,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":2,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":3,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":4,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":5,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":6,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":7,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":8,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":9,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":10,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":11,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":12,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":13,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":14,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":15,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":16,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":17,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":18,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":19,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":20,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":21,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":22,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":23,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":24,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":25,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":26,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":27,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":28,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":29,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":30,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":31,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":32,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":33,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":34,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":35,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":36,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":37,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":38,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":39,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":40,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":41,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":42,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":43,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":44,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":45,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":46,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":47,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":48,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":49,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":50,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":51,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":52,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":53,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":54,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":55,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":56,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":57,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js"},{"generatedLine":12,"generatedColumn":4,"originalLine":3,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":13,"generatedColumn":4,"originalLine":3,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":13,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":14,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":14,"generatedColumn":4,"originalLine":5,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":15,"generatedColumn":4,"originalLine":5,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":15,"generatedColumn":4,"originalLine":5,"originalColumn":4,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":15,"generatedColumn":8,"originalLine":6,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":16,"generatedColumn":4,"originalLine":6,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":16,"generatedColumn":4,"originalLine":6,"originalColumn":38,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":16,"generatedColumn":8,"originalLine":7,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":16,"generatedColumn":14,"originalLine":8,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":17,"generatedColumn":4,"originalLine":8,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":17,"generatedColumn":4,"originalLine":8,"originalColumn":6,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":17,"generatedColumn":8,"originalLine":9,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":18,"generatedColumn":4,"originalLine":9,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":18,"generatedColumn":4,"originalLine":9,"originalColumn":24,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":18,"generatedColumn":8,"originalLine":10,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":18,"generatedColumn":44,"originalLine":10,"originalColumn":34,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":18,"generatedColumn":76,"originalLine":10,"originalColumn":67,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":18,"generatedColumn":86,"originalLine":10,"originalColumn":75,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":18,"generatedColumn":94,"originalLine":10,"originalColumn":84,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":18,"generatedColumn":103,"originalLine":11,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":19,"generatedColumn":4,"originalLine":11,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":19,"generatedColumn":4,"originalLine":11,"originalColumn":6,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":19,"generatedColumn":8,"originalLine":12,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":19,"generatedColumn":36,"originalLine":13,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":20,"generatedColumn":4,"originalLine":13,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":20,"generatedColumn":4,"originalLine":13,"originalColumn":24,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":20,"generatedColumn":8,"originalLine":14,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":20,"generatedColumn":30,"originalLine":15,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":21,"generatedColumn":4,"originalLine":15,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":21,"generatedColumn":4,"originalLine":15,"originalColumn":13,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":21,"generatedColumn":8,"originalLine":16,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":21,"generatedColumn":30,"originalLine":16,"originalColumn":20,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":21,"generatedColumn":62,"originalLine":16,"originalColumn":53,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":21,"generatedColumn":72,"originalLine":16,"originalColumn":61,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":21,"generatedColumn":80,"originalLine":16,"originalColumn":70,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":21,"generatedColumn":86,"originalLine":17,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":22,"generatedColumn":4,"originalLine":17,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":22,"generatedColumn":4,"originalLine":17,"originalColumn":6,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":22,"generatedColumn":8,"originalLine":18,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":22,"generatedColumn":24,"originalLine":18,"originalColumn":14,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":22,"generatedColumn":133,"originalLine":18,"originalColumn":124,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":22,"generatedColumn":139,"originalLine":19,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":4,"originalLine":19,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":4,"originalLine":19,"originalColumn":24,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":8,"originalLine":20,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":20,"originalLine":20,"originalColumn":11,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":65,"originalLine":20,"originalColumn":57,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":70,"originalLine":21,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":83,"originalLine":21,"originalColumn":12,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":91,"originalLine":21,"originalColumn":21,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":108,"originalLine":21,"originalColumn":39,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":114,"originalLine":22,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":119,"originalLine":23,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":128,"originalLine":23,"originalColumn":8,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":206,"originalLine":23,"originalColumn":87,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":224,"originalLine":23,"originalColumn":103,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":232,"originalLine":23,"originalColumn":112,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":240,"originalLine":24,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":270,"originalLine":25,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":24,"generatedColumn":4,"originalLine":25,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":24,"generatedColumn":4,"originalLine":25,"originalColumn":38,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":24,"generatedColumn":8,"originalLine":26,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":24,"generatedColumn":15,"originalLine":27,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":25,"generatedColumn":4,"originalLine":27,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-not-embed-stored.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-not-embed-stored' -#>\n<#-\n  const {entity, f, source, sectionLabel, customizable} = ctx;\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ReferenceArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  reference=\"#{entity.model.entityPathMapper[!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity]}\"\n<# const empty = '{}'#>\n  filter={#{f.ref.showFilter ? f.ref.showFilter : empty}}\n  source={`#{source}#{f.ref.backField}`}\n>\n  <uix.#{!(f.verb==='BelongsToMany' && f.ref.using)? f.ref.entity: f.ref.using.entity}.Grid fields={'!#{f.name}'}/>\n</uix.ReferenceArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"}]}}