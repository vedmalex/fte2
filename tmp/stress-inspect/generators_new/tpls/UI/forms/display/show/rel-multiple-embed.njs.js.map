{"version":3,"sources":["generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"],"names":["code","text","expression"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAECA;AAFD,IAECA,AACAA;AAHD,IAGCA,AACAA;AAJD,IAICA,AACAA;AALD,IAKCA,AAAGC,IACHD;AAND,IAMCA,AAAqCC,IACrCA,MACAD;AARD,IAQCA,AAAKC,IACLD;AATD,IASCA,AAAuBC,IACvBA,oCAAiCC,gCAAiCD,UAAQC,QAASD,SACnFD;AAXD,IAWCA,AAAKC,IACLA,mBACAD;AAbD,IAaCA,AAAuBC,IACvBA,sBACAD;AAfD,IAeCA,AAAYC,IACZA,sBAAmBC,gCAAiCD,UAAQC,QAASD,MACrED;AAjBD,IAiBCA,AAAKC,IACLA,aAAWC,QAASA,iBAAkBD,MACtCA,OACAD;AApBD,IAoBCA,AACAA;AArBD,IAqBCA,AACAA;AAtBD,IAsBCA,AACAA;AAvBD,IAuBCA,AACAA;AAxBD,IAwBCA,AACAA;AAzBD,IAyBCA,AACAA;AA1BD,IA0BCA,AACAA;AA3BD,IA2BCA,AACAA;AA5BD,IA4BCA,AACAA;AA7BD,IA6BCA,AACAA;AA9BD,IA8BCA,AACAA;AA/BD,IA+BCA,AAAIC,IACJA,6BAA2BD;AAhC5B,IAgC4BA,AAAoBC,mBAAeD;AAhC/D,IAgC+DA,AAAKC,MACnEA,MAAIC,yCAA0CD,IAC9CA,MAAID;AAlCL,IAkCKA,AAAiCC,IACrCA,eAAaC,QAASD,GAACC,iBAAkBD,OACzCA,MAAID;AApCL,IAoCKA,AAAMC,IACVD;AArCD,IAqCCA,AAAqCC,IACrCA,qCACAA,sCACAD;AAxCD,IAwCCA,AAAKC,IACLA,qBACAA,qBACAD;AA3CD,IA2CCA,AAAqCC,IACrCA,OACAD;AA7CD,IA6CCA;AA7CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","sourceRoot":"/Users/vedmalex/work/fte2/demo","sourcesContent":["<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"],"template":{"version":"1.0.0","segments":[{"generatedLine":1,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":2,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":3,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":4,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":5,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":6,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":7,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":8,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":9,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":10,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":11,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":12,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":13,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":14,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":15,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":16,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":17,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":18,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":19,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":20,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":21,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":22,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":23,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":24,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":25,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":26,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":27,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":28,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":29,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":30,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":31,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":32,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":33,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":34,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":35,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":36,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":37,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":38,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":39,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":40,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":41,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":42,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":43,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":44,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":45,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":46,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":47,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":48,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":49,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":50,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":51,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":52,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":53,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":54,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":55,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":56,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":57,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":58,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":59,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":60,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":61,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":62,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":63,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":64,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":65,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":66,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":67,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":68,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":69,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":70,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":71,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":72,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":73,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":74,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":75,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":76,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":77,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":78,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":79,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":80,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":81,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":82,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":83,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":84,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":85,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":86,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js"},{"generatedLine":12,"generatedColumn":4,"originalLine":3,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":13,"generatedColumn":4,"originalLine":3,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":13,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":14,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":14,"generatedColumn":4,"originalLine":5,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":15,"generatedColumn":4,"originalLine":5,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":15,"generatedColumn":4,"originalLine":6,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":16,"generatedColumn":4,"originalLine":6,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":16,"generatedColumn":4,"originalLine":6,"originalColumn":4,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":16,"generatedColumn":8,"originalLine":7,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":17,"generatedColumn":4,"originalLine":7,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":17,"generatedColumn":4,"originalLine":7,"originalColumn":38,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":17,"generatedColumn":8,"originalLine":8,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":17,"generatedColumn":14,"originalLine":9,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":18,"generatedColumn":4,"originalLine":9,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":18,"generatedColumn":4,"originalLine":9,"originalColumn":6,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":18,"generatedColumn":8,"originalLine":10,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":19,"generatedColumn":4,"originalLine":10,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":19,"generatedColumn":4,"originalLine":10,"originalColumn":24,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":19,"generatedColumn":8,"originalLine":11,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":19,"generatedColumn":44,"originalLine":11,"originalColumn":34,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":19,"generatedColumn":76,"originalLine":11,"originalColumn":67,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":19,"generatedColumn":86,"originalLine":11,"originalColumn":75,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":19,"generatedColumn":94,"originalLine":11,"originalColumn":84,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":19,"generatedColumn":103,"originalLine":12,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":20,"generatedColumn":4,"originalLine":12,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":20,"generatedColumn":4,"originalLine":12,"originalColumn":6,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":20,"generatedColumn":8,"originalLine":13,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":20,"generatedColumn":27,"originalLine":14,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":21,"generatedColumn":4,"originalLine":14,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":21,"generatedColumn":4,"originalLine":14,"originalColumn":24,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":21,"generatedColumn":8,"originalLine":15,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":21,"generatedColumn":30,"originalLine":16,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":22,"generatedColumn":4,"originalLine":16,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":22,"generatedColumn":4,"originalLine":16,"originalColumn":13,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":22,"generatedColumn":8,"originalLine":17,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":22,"generatedColumn":30,"originalLine":17,"originalColumn":20,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":22,"generatedColumn":62,"originalLine":17,"originalColumn":53,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":22,"generatedColumn":72,"originalLine":17,"originalColumn":61,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":22,"generatedColumn":80,"originalLine":17,"originalColumn":70,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":22,"generatedColumn":86,"originalLine":18,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":4,"originalLine":18,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":4,"originalLine":18,"originalColumn":6,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":8,"originalLine":19,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":21,"originalLine":19,"originalColumn":12,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":29,"originalLine":19,"originalColumn":21,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":46,"originalLine":19,"originalColumn":39,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":52,"originalLine":20,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":23,"generatedColumn":59,"originalLine":21,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":24,"generatedColumn":4,"originalLine":21,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":24,"generatedColumn":4,"originalLine":22,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":25,"generatedColumn":4,"originalLine":22,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":25,"generatedColumn":4,"originalLine":23,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":26,"generatedColumn":4,"originalLine":23,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":26,"generatedColumn":4,"originalLine":24,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":27,"generatedColumn":4,"originalLine":24,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":27,"generatedColumn":4,"originalLine":25,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":28,"generatedColumn":4,"originalLine":25,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":28,"generatedColumn":4,"originalLine":26,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":29,"generatedColumn":4,"originalLine":26,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":29,"generatedColumn":4,"originalLine":27,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":30,"generatedColumn":4,"originalLine":27,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":30,"generatedColumn":4,"originalLine":28,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":31,"generatedColumn":4,"originalLine":28,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":31,"generatedColumn":4,"originalLine":29,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":32,"generatedColumn":4,"originalLine":29,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":32,"generatedColumn":4,"originalLine":30,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":33,"generatedColumn":4,"originalLine":30,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":33,"generatedColumn":4,"originalLine":31,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":34,"generatedColumn":4,"originalLine":31,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":34,"generatedColumn":4,"originalLine":32,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":35,"generatedColumn":4,"originalLine":32,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":35,"generatedColumn":4,"originalLine":32,"originalColumn":5,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":35,"generatedColumn":8,"originalLine":33,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":35,"generatedColumn":37,"originalLine":33,"originalColumn":28,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":36,"generatedColumn":4,"originalLine":33,"originalColumn":28,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":36,"generatedColumn":4,"originalLine":33,"originalColumn":48,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":36,"generatedColumn":23,"originalLine":33,"originalColumn":63,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":37,"generatedColumn":4,"originalLine":33,"originalColumn":63,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":37,"generatedColumn":4,"originalLine":33,"originalColumn":68,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":37,"generatedColumn":10,"originalLine":34,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":37,"generatedColumn":16,"originalLine":34,"originalColumn":5,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":37,"generatedColumn":57,"originalLine":34,"originalColumn":47,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":37,"generatedColumn":61,"originalLine":35,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":37,"generatedColumn":67,"originalLine":35,"originalColumn":5,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":38,"generatedColumn":4,"originalLine":35,"originalColumn":5,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":38,"generatedColumn":4,"originalLine":35,"originalColumn":38,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":38,"generatedColumn":8,"originalLine":36,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":38,"generatedColumn":23,"originalLine":36,"originalColumn":14,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":38,"generatedColumn":31,"originalLine":36,"originalColumn":23,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":38,"generatedColumn":34,"originalLine":36,"originalColumn":24,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"expression","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":38,"generatedColumn":51,"originalLine":36,"originalColumn":42,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":38,"generatedColumn":58,"originalLine":37,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":38,"generatedColumn":64,"originalLine":37,"originalColumn":5,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":39,"generatedColumn":4,"originalLine":37,"originalColumn":5,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":39,"generatedColumn":4,"originalLine":37,"originalColumn":11,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":39,"generatedColumn":8,"originalLine":38,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":40,"generatedColumn":4,"originalLine":38,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":40,"generatedColumn":4,"originalLine":38,"originalColumn":38,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":40,"generatedColumn":8,"originalLine":39,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":40,"generatedColumn":45,"originalLine":40,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":40,"generatedColumn":83,"originalLine":41,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":41,"generatedColumn":4,"originalLine":41,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":41,"generatedColumn":4,"originalLine":41,"originalColumn":6,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":41,"generatedColumn":8,"originalLine":42,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":41,"generatedColumn":29,"originalLine":43,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":41,"generatedColumn":50,"originalLine":44,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":42,"generatedColumn":4,"originalLine":44,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":42,"generatedColumn":4,"originalLine":44,"originalColumn":38,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":42,"generatedColumn":8,"originalLine":45,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"text","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":42,"generatedColumn":15,"originalLine":46,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"},{"generatedLine":43,"generatedColumn":4,"originalLine":46,"originalColumn":1,"source":"generators_new/tpls/UI/forms/display/show/rel-multiple-embed.njs.js","name":"code","content":"<#@ context \"ctx\" -#>\n<#@ alias 'display-show-rel-multiple-embed' -#>\n<#-\n  const {entity, f, source, embedded, sectionLabel, grid, customizable} = ctx;\n\n-#>\n<#if(sectionLabel && customizable){#>\n<>\n<#}#>\n<# if(sectionLabel) {#>\n<uix.HeaderLabel text=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\" />\n<#}#>\n<uix.ArrayField\n<# if(sectionLabel) {#>\n  addLabel={false}\n<#} else {#>\n  label=\"resources.#{f.inheritedFrom || entity.name}.fields.#{f.name}\"\n<#}#>\n  source={`#{source}#{f.ref.backField}`}\n  >\n<# const e = entity.model.entities.find(e => e.name === f.ref.entity)\n    const context = {\n      entity: {\n        ...e,\n        props: e.lists.all.filter(fl=>fl.name !== f.name )\n      },\n      source: \"\", //source ? `${source}${f.ref.backField}.` : `${f.ref.backField}.`,\n      grid: true,\n      embedded: f.embedded,\n      sectionLabel:  !grid && sectionLabel,\n    }\n  #>\n  <uix.Datagrid {...props} <#if(!e.embedded){#>rowClick=\"edit\"<#}#> >\n    #{partial(context, 'display-show-entity')}\n    <# e.actions.forEach(action=>{ #>\n        <uix.#{e.name}.#{action.fullName} />\n    <#})#>\n<# if(!(e.embedded || e.abstract)){#>\n    <uix.ShowButton label=\"\" />\n    <uix.CloneButton label=\"\" />\n<#}#>\n  </uix.Datagrid>\n</uix.ArrayField>\n<#if(sectionLabel && customizable){#>\n</>\n<#}#>"}]}}