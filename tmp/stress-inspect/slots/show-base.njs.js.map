{"version":3,"sources":["slots/show-base.njs.js"],"names":["text","expression","code"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAGCA,gCACAA,uCACAA,YACAA,IAAEC,oCAAqCD,IACvCA,IAAEC,sCAAuCD,IACzCA,2BACAC,2CAA4CD,IAC5CA,gDACAA,8BACAA,2BAAyBC,aAAcD,GAACC,aAAcD,OACtDE;AAbD,IAaCA,AACAA;AAdD,IAcCA,AACAA;AAfD,IAeCA,AAA0BF,IAC1BE;AAhBD,IAgBCA,AACAA;AAjBD,IAiBCA,AACAA;AAlBD,IAkBCA,AACAA;AAnBD,IAmBCA,AACAA;AApBD,IAoBCA,AACAA;AArBD,IAqBCA,AACAA;AAtBD,IAsBCA,AACAA;AAvBD,IAuBCA,AACAA;AAxBD,IAwBCA,AACAA;AAzBD,IAyBCA,AAAGF,IACHA,UAAQC,cAAeD,UAAQC,aAAcD,GAACC,cAAeD,OAC7DE;AA3BD,IA2BCA,AAAOF,IACPE;AA5BD,IA4BCA,AAAMF,IACNA;AA7BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"slots/show-base.njs.js","sourceRoot":"/Users/vedmalex/work/fte2/demo","sourcesContent":["<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"],"template":{"version":"1.0.0","segments":[{"generatedLine":1,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":2,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":3,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":4,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":5,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":6,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":7,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":8,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":9,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":10,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":11,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":12,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":13,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":14,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":15,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":16,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":17,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":18,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":19,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":20,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":21,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":22,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":23,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":24,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":25,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":26,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":27,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":28,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":29,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":30,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":31,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":32,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":33,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":34,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":35,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":36,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":37,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":38,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":39,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":40,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":41,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":42,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":43,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":44,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":45,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":46,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":47,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":48,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":49,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":50,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":51,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":52,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":53,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":54,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":55,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":56,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":57,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":58,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":59,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":60,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":61,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":62,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":63,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":64,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":65,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":66,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":67,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":68,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":69,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":70,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":71,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":72,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":73,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":74,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":75,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":76,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":77,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":78,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":79,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":80,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":81,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":82,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":83,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":84,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":85,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":86,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":87,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":88,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":89,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":90,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":91,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":92,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":93,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":94,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":95,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":96,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":97,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":98,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":99,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":100,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":101,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":102,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":103,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":104,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":105,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":106,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":107,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":108,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":109,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":110,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":111,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":112,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":113,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":114,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":115,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":116,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":117,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":118,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":119,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":120,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":121,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":122,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":123,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":124,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":125,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":126,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":127,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":128,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":129,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":130,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":131,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":132,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":133,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":134,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":135,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":136,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":137,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":138,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":139,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":140,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":141,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":142,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":143,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":144,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":145,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":146,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":147,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":148,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":149,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":150,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":151,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":152,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":153,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":154,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":155,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":156,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":157,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":158,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":159,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":160,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":161,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":162,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":163,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":164,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":165,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":166,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":167,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":168,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":169,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":170,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":171,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":172,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":173,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":174,"generatedColumn":0,"originalLine":1,"originalColumn":0,"source":"slots/show-base.njs.js"},{"generatedLine":12,"generatedColumn":4,"originalLine":4,"originalColumn":1,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":12,"generatedColumn":36,"originalLine":5,"originalColumn":1,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":12,"generatedColumn":75,"originalLine":6,"originalColumn":1,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":12,"generatedColumn":87,"originalLine":7,"originalColumn":1,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":12,"generatedColumn":91,"originalLine":7,"originalColumn":3,"source":"slots/show-base.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":12,"generatedColumn":127,"originalLine":7,"originalColumn":40,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":12,"generatedColumn":131,"originalLine":8,"originalColumn":1,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":12,"generatedColumn":135,"originalLine":8,"originalColumn":3,"source":"slots/show-base.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":12,"generatedColumn":173,"originalLine":8,"originalColumn":42,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":12,"generatedColumn":177,"originalLine":9,"originalColumn":1,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":12,"generatedColumn":204,"originalLine":10,"originalColumn":1,"source":"slots/show-base.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":12,"generatedColumn":247,"originalLine":10,"originalColumn":45,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":12,"generatedColumn":251,"originalLine":11,"originalColumn":1,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":12,"generatedColumn":299,"originalLine":12,"originalColumn":1,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":12,"generatedColumn":329,"originalLine":13,"originalColumn":1,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":12,"generatedColumn":356,"originalLine":13,"originalColumn":26,"source":"slots/show-base.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":12,"generatedColumn":369,"originalLine":13,"originalColumn":40,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":12,"generatedColumn":372,"originalLine":13,"originalColumn":41,"source":"slots/show-base.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":12,"generatedColumn":385,"originalLine":13,"originalColumn":55,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":12,"generatedColumn":392,"originalLine":14,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":13,"generatedColumn":4,"originalLine":14,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":13,"generatedColumn":4,"originalLine":15,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":14,"generatedColumn":4,"originalLine":15,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":14,"generatedColumn":4,"originalLine":16,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":15,"generatedColumn":4,"originalLine":16,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":15,"generatedColumn":4,"originalLine":16,"originalColumn":27,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":15,"generatedColumn":8,"originalLine":17,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":16,"generatedColumn":4,"originalLine":17,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":16,"generatedColumn":4,"originalLine":18,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":17,"generatedColumn":4,"originalLine":18,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":17,"generatedColumn":4,"originalLine":19,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":18,"generatedColumn":4,"originalLine":19,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":18,"generatedColumn":4,"originalLine":20,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":19,"generatedColumn":4,"originalLine":20,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":19,"generatedColumn":4,"originalLine":21,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":20,"generatedColumn":4,"originalLine":21,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":20,"generatedColumn":4,"originalLine":22,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":21,"generatedColumn":4,"originalLine":22,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":21,"generatedColumn":4,"originalLine":23,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":22,"generatedColumn":4,"originalLine":23,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":22,"generatedColumn":4,"originalLine":24,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":23,"generatedColumn":4,"originalLine":24,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":23,"generatedColumn":4,"originalLine":25,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":24,"generatedColumn":4,"originalLine":25,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":24,"generatedColumn":4,"originalLine":26,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":25,"generatedColumn":4,"originalLine":26,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":25,"generatedColumn":4,"originalLine":26,"originalColumn":4,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":25,"generatedColumn":8,"originalLine":27,"originalColumn":1,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":25,"generatedColumn":18,"originalLine":27,"originalColumn":9,"source":"slots/show-base.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":25,"generatedColumn":32,"originalLine":27,"originalColumn":24,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":25,"generatedColumn":42,"originalLine":27,"originalColumn":32,"source":"slots/show-base.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":25,"generatedColumn":55,"originalLine":27,"originalColumn":46,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":25,"generatedColumn":58,"originalLine":27,"originalColumn":47,"source":"slots/show-base.njs.js","name":"expression","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":25,"generatedColumn":72,"originalLine":27,"originalColumn":62,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":25,"generatedColumn":79,"originalLine":28,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":26,"generatedColumn":4,"originalLine":28,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":26,"generatedColumn":4,"originalLine":28,"originalColumn":8,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":26,"generatedColumn":8,"originalLine":29,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":27,"generatedColumn":4,"originalLine":29,"originalColumn":1,"source":"slots/show-base.njs.js","name":"code","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":27,"generatedColumn":4,"originalLine":29,"originalColumn":7,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"},{"generatedLine":27,"generatedColumn":8,"originalLine":30,"originalColumn":1,"source":"slots/show-base.njs.js","name":"text","content":"<#@ context \"entity\" -#>\n<#@ alias 'forms-show-base' -#>\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {\n  #{content('import-from-react-admin')}\n  #{slot('import-from-react-admin-show')}\n} from \"react-admin\";\n#{slot('import-from-ra-ui-components-show')}\nconst ShowRecordView = (props, context) => {\n  const { uix } = context;\n  const { Title } = uix['#{entity.role}/#{entity.name}'];\n<#-\nconst manyRels = entity.relations.filter(f => !f.single);\nif(manyRels.length > 0){#>\n<#\n const uniqueEntities = manyRels.filter(f=> !f.single/*  && !entity.UI.embedded.names.hasOwnProperty(f.field) */)\n  .reduce((hash, curr)=> {\n    hash[curr.ref.entity] = curr;\n    return hash;\n  }, {});\n\n  Object.keys(uniqueEntities).forEach(key=>{\n    let f = uniqueEntities[key];\n-#>\n  const #{f.ref.entity} = uix['#{entity.role}/#{f.ref.entity}'];\n<#})-#>\n<#-}#>\n  return (\n<#- slot('import-from-react-admin-show', 'Show')#>\n    <Show title={<Title />} {...props}>\n      #{content('view')}\n    </Show>\n  );\n};\n\nShowRecordView.contextTypes = {\n  uix: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n}\n\nexport default ShowRecordView;"}]}}